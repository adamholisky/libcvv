
vvlibc.o:     file format elf64-x86-64
vvlibc.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .init         00000005  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .text         0000678f  0000000000000000  0000000000000000  00000050  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  2 .text.startup 0000001d  0000000000000000  0000000000000000  000067e0  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  3 .fini         00000005  0000000000000000  0000000000000000  000067fd  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .rodata       00003700  0000000000000000  0000000000000000  00006820  2**5
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
  5 .rodata.str1.8 000000a2  0000000000000000  0000000000000000  00009f20  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .rodata.str1.1 0000006f  0000000000000000  0000000000000000  00009fc2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .rodata.cst8  00000080  0000000000000000  0000000000000000  0000a038  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rodata.cst4  00000018  0000000000000000  0000000000000000  0000a0b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .eh_frame     00001e94  0000000000000000  0000000000000000  0000a0d0  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 10 .data         00000008  0000000000000000  0000000000000000  0000bf68  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .dtors        00000010  0000000000000000  0000000000000000  0000bf70  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ctors        00000018  0000000000000000  0000000000000000  0000bf80  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 13 .bss          0000009a  0000000000000000  0000000000000000  0000bfa0  2**5
                  ALLOC
 14 .comment      00000876  0000000000000000  0000000000000000  0000bfa0  2**0
                  CONTENTS, READONLY
 15 .debug_aranges 00001580  0000000000000000  0000000000000000  0000c820  2**4
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 16 .debug_info   0000baa8  0000000000000000  0000000000000000  0000dda0  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 00005414  0000000000000000  0000000000000000  00019848  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00007353  0000000000000000  0000000000000000  0001ec5c  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009eec  0000000000000000  0000000000000000  00025faf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00005847  0000000000000000  0000000000000000  0002fe9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loclists 00008f9e  0000000000000000  0000000000000000  000356e2  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 000004a3  0000000000000000  0000000000000000  0003e680  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
0000000000000000 l    d  .init	0000000000000000 .init
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .text.startup	0000000000000000 .text.startup
0000000000000000 l    d  .fini	0000000000000000 .fini
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000000 l    d  .rodata.cst8	0000000000000000 .rodata.cst8
0000000000000000 l    d  .rodata.cst4	0000000000000000 .rodata.cst4
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .dtors	0000000000000000 .dtors
0000000000000000 l    d  .ctors	0000000000000000 .ctors
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .debug_line_str	0000000000000000 .debug_line_str
0000000000000000 l    d  .debug_loclists	0000000000000000 .debug_loclists
0000000000000000 l    d  .debug_rnglists	0000000000000000 .debug_rnglists
0000000000000000 l    df *ABS*	0000000000000000 crtbegin.c
0000000000000040 l     F .text	0000000000000051 __do_init
00000000000000a0 l     F .text	0000000000000061 __do_fini
0000000000000060 l     O .bss	0000000000000001 __initialized.2
00000000000000c8 l     O .eh_frame	0000000000000008 __EH_FRAME_LIST__
0000000000000020 l     O .bss	0000000000000040 __object.1
0000000000000000 l     O .ctors	0000000000000008 __CTOR_LIST__
0000000000000008 l     O .bss	0000000000000001 __finalized.0
0000000000000000 l     O .dtors	0000000000000008 __DTOR_LIST__
0000000000000000 l    df *ABS*	0000000000000000 _Exit.c
0000000000000000 l    df *ABS*	0000000000000000 abort.c
0000000000000000 l    df *ABS*	0000000000000000 at_exit.c
0000000000000000 l    df *ABS*	0000000000000000 at_quick_exit.c
0000000000000000 l    df *ABS*	0000000000000000 crtend.c
0000000000000000 l    df *ABS*	0000000000000000 cxa_atexit.c
0000000000000000 l    df *ABS*	0000000000000000 exit.c
0000000000000000 l    df *ABS*	0000000000000000 quick_exit.c
0000000000000000 l    df *ABS*	0000000000000000 stack_protection.c
0000000000000000 l     F .text.startup	000000000000001d __construct_stk_chk_guard
0000000000000000 l    df *ABS*	0000000000000000 isalnum.c
0000000000000000 l    df *ABS*	0000000000000000 isalpha.c
0000000000000000 l    df *ABS*	0000000000000000 isascii.c
0000000000000000 l    df *ABS*	0000000000000000 isblank.c
0000000000000000 l    df *ABS*	0000000000000000 iscntrl.c
0000000000000000 l    df *ABS*	0000000000000000 isdigit.c
0000000000000000 l    df *ABS*	0000000000000000 isgraph.c
0000000000000000 l    df *ABS*	0000000000000000 islower.c
0000000000000000 l    df *ABS*	0000000000000000 isprint.c
0000000000000000 l    df *ABS*	0000000000000000 ispunct.c
0000000000000000 l    df *ABS*	0000000000000000 isspace.c
0000000000000000 l    df *ABS*	0000000000000000 isupper.c
0000000000000000 l    df *ABS*	0000000000000000 isxdigit.c
0000000000000000 l    df *ABS*	0000000000000000 toascii.c
0000000000000000 l    df *ABS*	0000000000000000 tolower.c
0000000000000000 l    df *ABS*	0000000000000000 toupper.c
0000000000000000 l    df *ABS*	0000000000000000 langinfo.c
000000000000000c l     O .rodata	0000000000000003 c_numeric
0000000000000040 l     O .rodata	000000000000013c c_time
0000000000000010 l     O .rodata	0000000000000013 c_messages
0000000000000000 l     O .rodata	000000000000000c __func__.0
0000000000000000 l    df *ABS*	0000000000000000 assert.c
0000000000000000 l    df *ABS*	0000000000000000 printf.c
0000000000000450 l     F .text	000000000000000a _out_buffer
0000000000000460 l     F .text	0000000000000001 _out_null
0000000000000470 l     F .text	00000000000000f9 _out_rev
0000000000000570 l     F .text	00000000000003b9 _ntoa_long
0000000000000570 l     F .text	00000000000003b9 _ntoa_long_long
0000000000000930 l     F .text	000000000000044c _etoa
0000000000000d80 l     F .text	000000000000050e _ftoa
0000000000000008 l       .rodata.cst8	0000000000000000 .LC1
0000000000000000 l       .rodata.cst8	0000000000000000 .LC0
0000000000000000 l       .rodata.cst4	0000000000000000 .LC17
0000000000000010 l       .rodata.cst4	0000000000000000 .LC29
0000000000000014 l       .rodata.cst4	0000000000000000 .LC30
0000000000000004 l       .rodata.cst4	0000000000000000 .LC22
00000000000004c0 l     O .rodata	0000000000000050 pow10.0
0000000000001290 l     F .text	0000000000000019 _out_char
00000000000012b0 l     F .text	0000000000000019 _out_fct
00000000000012d0 l     F .text	0000000000000b5e _vsnprintf
0000000000000010 l       .rodata.cst8	0000000000000000 .LC3
0000000000000018 l       .rodata.cst8	0000000000000000 .LC4
0000000000000020 l       .rodata.cst8	0000000000000000 .LC5
0000000000000028 l       .rodata.cst8	0000000000000000 .LC6
0000000000000030 l       .rodata.cst8	0000000000000000 .LC7
0000000000000038 l       .rodata.cst8	0000000000000000 .LC8
0000000000000040 l       .rodata.cst8	0000000000000000 .LC9
0000000000000048 l       .rodata.cst8	0000000000000000 .LC10
0000000000000050 l       .rodata.cst8	0000000000000000 .LC11
0000000000000058 l       .rodata.cst8	0000000000000000 .LC12
0000000000000060 l       .rodata.cst8	0000000000000000 .LC13
0000000000000068 l       .rodata.cst8	0000000000000000 .LC14
0000000000000070 l       .rodata.cst8	0000000000000000 .LC16
0000000000000008 l       .rodata.cst4	0000000000000000 .LC25
000000000000000c l       .rodata.cst4	0000000000000000 .LC27
0000000000000078 l       .rodata.cst8	0000000000000000 .LC28
0000000000000000 l    df *ABS*	0000000000000000 vv_stubs.c
0000000000000000 l    df *ABS*	0000000000000000 asprintf.c
0000000000000000 l    df *ABS*	0000000000000000 putchar.c
0000000000000000 l    df *ABS*	0000000000000000 putchar_native.c
0000000000000000 l    df *ABS*	0000000000000000 puts.c
0000000000000000 l    df *ABS*	0000000000000000 vasprintf.c
0000000000000000 l    df *ABS*	0000000000000000 abs.c
0000000000000000 l    df *ABS*	0000000000000000 atoi.c
0000000000000000 l    df *ABS*	0000000000000000 atol.c
0000000000000000 l    df *ABS*	0000000000000000 atoll.c
0000000000000000 l    df *ABS*	0000000000000000 bsearch.c
0000000000000000 l    df *ABS*	0000000000000000 calloc.c
0000000000000000 l    df *ABS*	0000000000000000 div.c
0000000000000000 l    df *ABS*	0000000000000000 heapsort.c
0000000000000000 l    df *ABS*	0000000000000000 heapsort_r.c
0000000000000000 l    df *ABS*	0000000000000000 imaxabs.c
0000000000000000 l    df *ABS*	0000000000000000 imaxdiv.c
0000000000000000 l    df *ABS*	0000000000000000 labs.c
0000000000000000 l    df *ABS*	0000000000000000 ldiv.c
0000000000000000 l    df *ABS*	0000000000000000 llabs.c
0000000000000000 l    df *ABS*	0000000000000000 lldiv.c
0000000000000000 l    df *ABS*	0000000000000000 qsort.c
0000000000002c70 l     F .text	0000000000000b58 _qsort
0000000000000000 l    df *ABS*	0000000000000000 qsort_r.c
0000000000003810 l     F .text	0000000000000b88 _qsort
0000000000000000 l    df *ABS*	0000000000000000 rand.c
0000000000000000 l     O .data	0000000000000008 next
0000000000000000 l    df *ABS*	0000000000000000 realloc.c
0000000000000000 l    df *ABS*	0000000000000000 strtol.c
0000000000000000 l    df *ABS*	0000000000000000 strtoll.c
0000000000000000 l    df *ABS*	0000000000000000 strtoul.c
0000000000000000 l    df *ABS*	0000000000000000 strtoull.c
0000000000000000 l    df *ABS*	0000000000000000 memchr.c
0000000000000000 l    df *ABS*	0000000000000000 memcmp.c
0000000000000000 l    df *ABS*	0000000000000000 memcpy.c
0000000000000000 l    df *ABS*	0000000000000000 memmem.c
0000000000000000 l    df *ABS*	0000000000000000 memmove.c
0000000000000000 l    df *ABS*	0000000000000000 memrchr.c
0000000000000000 l    df *ABS*	0000000000000000 memset.c
0000000000000000 l    df *ABS*	0000000000000000 strcat.c
0000000000000000 l    df *ABS*	0000000000000000 strchr.c
0000000000000000 l    df *ABS*	0000000000000000 strchrnul.c
0000000000000000 l    df *ABS*	0000000000000000 strcmp.c
0000000000000000 l    df *ABS*	0000000000000000 strcoll.c
0000000000000000 l    df *ABS*	0000000000000000 strcpy.c
0000000000000000 l    df *ABS*	0000000000000000 strcspn.c
0000000000000000 l    df *ABS*	0000000000000000 strdup.c
0000000000000000 l    df *ABS*	0000000000000000 strerror.c
0000000000000c00 l     O .rodata	0000000000000055 errid
0000000000000520 l     O .rodata	00000000000006cf errmsg
0000000000000000 l    df *ABS*	0000000000000000 strerror_r.c
0000000000000c58 l     O .rodata	000000000000000b __func__.0
0000000000000000 l    df *ABS*	0000000000000000 strlen.c
0000000000000000 l    df *ABS*	0000000000000000 strncat.c
0000000000000000 l    df *ABS*	0000000000000000 strncmp.c
0000000000000000 l    df *ABS*	0000000000000000 strncpy.c
0000000000000000 l    df *ABS*	0000000000000000 strndup.c
0000000000000000 l    df *ABS*	0000000000000000 strnlen.c
0000000000000000 l    df *ABS*	0000000000000000 strnstr.c
0000000000000000 l    df *ABS*	0000000000000000 strpbrk.c
0000000000000000 l    df *ABS*	0000000000000000 strrchr.c
0000000000000000 l    df *ABS*	0000000000000000 strspn.c
0000000000000000 l    df *ABS*	0000000000000000 strstr.c
0000000000000000 l    df *ABS*	0000000000000000 strtok.c
0000000000000070 l     O .bss	0000000000000008 last.0
0000000000000000 l    df *ABS*	0000000000000000 strxfrm.c
0000000000000000 l    df *ABS*	0000000000000000 fls.c
0000000000000000 l    df *ABS*	0000000000000000 flsl.c
0000000000000000 l    df *ABS*	0000000000000000 flsll.c
0000000000000000 l    df *ABS*	0000000000000000 asctime.c
0000000000000080 l     O .bss	000000000000001a buf.0
0000000000000000 l    df *ABS*	0000000000000000 asctime_r.c
0000000000000c68 l     O .rodata	000000000000000a __func__.0
0000000000000000 l    df *ABS*	0000000000000000 iswalnum.c
0000000000000000 l    df *ABS*	0000000000000000 iswalpha.c
0000000000000c80 l     O .rodata	0000000000000ba0 table
0000000000000000 l    df *ABS*	0000000000000000 iswblank.c
0000000000000000 l    df *ABS*	0000000000000000 iswcntrl.c
0000000000000000 l    df *ABS*	0000000000000000 iswctype.c
0000000000000000 l    df *ABS*	0000000000000000 iswdigit.c
0000000000000000 l    df *ABS*	0000000000000000 iswgraph.c
0000000000000000 l    df *ABS*	0000000000000000 iswlower.c
0000000000000000 l    df *ABS*	0000000000000000 iswprint.c
0000000000000000 l    df *ABS*	0000000000000000 iswpunct.c
00000000000018a0 l     O .rodata	0000000000000c60 table
0000000000000000 l    df *ABS*	0000000000000000 iswspace.c
0000000000002500 l     O .rodata	00000000000000b0 spaces.0
0000000000000000 l    df *ABS*	0000000000000000 iswupper.c
0000000000000000 l    df *ABS*	0000000000000000 iswxdigit.c
0000000000000000 l    df *ABS*	0000000000000000 towccase.c
0000000000002800 l     O .rodata	0000000000000104 casemaps
00000000000025c0 l     O .rodata	000000000000022c pairs
0000000000000000 l    df *ABS*	0000000000000000 towctrans.c
0000000000000000 l    df *ABS*	0000000000000000 towlower.c
0000000000000000 l    df *ABS*	0000000000000000 towupper.c
0000000000000000 l    df *ABS*	0000000000000000 wcswidth.c
0000000000000000 l    df *ABS*	0000000000000000 wctrans.c
0000000000000000 l    df *ABS*	0000000000000000 wctype.c
0000000000002920 l     O .rodata	0000000000000049 names.0
0000000000000000 l    df *ABS*	0000000000000000 wcwidth.c
0000000000002f80 l     O .rodata	0000000000000780 table
0000000000002980 l     O .rodata	0000000000000600 wtable
0000000000006760 g     F .text	0000000000000000 longjmp
00000000000021d0 g     F .text	000000000000001c putchar
0000000000000008 g     O .dtors	0000000000000008 .hidden __DTOR_LIST_END__
0000000000005700 g     F .text	000000000000002c strcpy
0000000000005e80 g     F .text	000000000000000c asctime
0000000000002110 g     F .text	0000000000000009 _putchar
0000000000006734 g     F .text	0000000000000000 setjmp
0000000000005800 g     F .text	000000000000007c strerror
0000000000005ad0 g     F .text	0000000000000003 strndup
0000000000002010 g     F .text	0000000000000027 vprintf_
0000000000005480  w    F .text	0000000000000005 memmove
0000000000005d50 g     F .text	000000000000009a __strtok_r
0000000000000068  w    O .bss	0000000000000008 __stack_chk_guard
0000000000006760 g     F .text	0000000000000000 _longjmp
0000000000002360 g     F .text	0000000000000084 atol
0000000000005ff0 g     F .text	0000000000000036 iswcntrl
0000000000006160 g     F .text	0000000000000040 iswpunct
00000000000001d0 g     F .text	0000000000000012 isblank
0000000000002c30 g     F .text	000000000000000b labs
0000000000005f90 g     F .text	0000000000000050 iswalpha
0000000000005fe0 g     F .text	0000000000000005 iswblank
00000000000053e0 g     F .text	0000000000000092 memmem
0000000000002480 g     F .text	0000000000000082 bsearch
00000000000037d0 g     F .text	000000000000003d qsort
0000000000006230 g     F .text	000000000000001c iswxdigit
0000000000005490 g     F .text	0000000000000029 __memrchr
00000000000051f0 g     F .text	00000000000001e1 memcpy
0000000000000000         *UND*	0000000000000000 kfree
00000000000021f0 g     F .text	0000000000000060 puts
0000000000000230 g     F .text	000000000000000c islower
0000000000000300 g     F .text	0000000000000024 tolower
00000000000060f0 g     F .text	0000000000000020 iswlower
0000000000002120 g     F .text	000000000000000d malloc
0000000000000130  w    F .text	0000000000000009 quick_exit
0000000000001ee0 g     F .text	000000000000009a sprintf_
00000000000061a0 g     F .text	0000000000000033 iswspace
00000000000048c0 g     F .text	0000000000000299 strtoll
0000000000004b60 g     F .text	0000000000000303 strtoul
0000000000000000 g     O .bss	0000000000000008 .hidden __dso_handle
0000000000005e70 g     F .text	000000000000000f flsll
0000000000000250 g     F .text	0000000000000035 ispunct
0000000000000290 g     F .text	0000000000000015 isspace
0000000000000000  w    F .text	0000000000000002 _Exit
0000000000000010  w    F .text	000000000000000e abort
0000000000000150  w    F .text	0000000000000017 __stack_chk_fail
0000000000006734 g     F .text	0000000000000000 __setjmp
00000000000002c0 g     F .text	000000000000002f isxdigit
0000000000002040 g     F .text	0000000000000018 vsnprintf_
00000000000045e0 g     F .text	00000000000002d1 strtol
0000000000005ae0 g     F .text	0000000000000032 strnlen
0000000000006110 g     F .text	0000000000000049 iswprint
0000000000005bf0 g     F .text	0000000000000025 strrchr
0000000000002510 g     F .text	0000000000000055 calloc
0000000000005e50 g     F .text	000000000000000d fls
0000000000002c10 g     F .text	000000000000000b imaxabs
0000000000002060 g     F .text	00000000000000a5 fctprintf
00000000000060b0 g     F .text	0000000000000036 iswgraph
0000000000005530 g     F .text	0000000000000041 strcat
00000000000043f0  w    F .text	000000000000005d rand_r
0000000000000000  w      *UND*	0000000000000000 __deregister_frame_info
0000000000000360 g     F .text	00000000000000c1 nl_langinfo
00000000000055a0 g     F .text	00000000000000f1 __strchrnul
00000000000050a0 g     F .text	00000000000000d5 memchr
0000000000004550 g     F .text	000000000000008f reallocf
0000000000005cf0 g     F .text	0000000000000053 strstr
0000000000004450  w    F .text	000000000000006a rand
0000000000005e60 g     F .text	000000000000000f flsl
0000000000006030 g     F .text	0000000000000070 iswctype
00000000000056f0 g     F .text	0000000000000005 strcoll
00000000000002b0 g     F .text	000000000000000c isupper
0000000000005a00 g     F .text	0000000000000049 strncmp
0000000000000000         *UND*	0000000000000000 term_put_char
0000000000005a50 g     F .text	0000000000000072 strncpy
0000000000006680 g     F .text	00000000000000b4 wcwidth
00000000000001c0 g     F .text	0000000000000009 isascii
00000000000044d0 g     F .text	000000000000007f realloc
0000000000006540 g     F .text	000000000000001d towupper
0000000000000110  w    F .text	0000000000000003 __cxa_atexit
0000000000006500 g     F .text	000000000000001d towctrans
0000000000005df0 g     F .text	000000000000000c strtok
0000000000000030  w    F .text	0000000000000003 at_quick_exit
0000000000005180  w    F .text	0000000000000065 memcmp
00000000000001b0 g     F .text	000000000000000f isalpha
00000000000059b0 g     F .text	0000000000000050 strncat
00000000000061e0 g     F .text	0000000000000023 wcschr
00000000000057f0 g     F .text	0000000000000003 strdup
0000000000004e70 g     F .text	0000000000000227 strtoull
0000000000006250 g     F .text	00000000000002ae __towcase
0000000000005e90 g     F .text	00000000000000bf asctime_r
00000000000054c0  w    F .text	000000000000006c memset
00000000000044c0  w    F .text	000000000000000a srand
0000000000005e00 g     F .text	0000000000000047 strxfrm
0000000000006600 g     F .text	0000000000000071 wctype
0000000000000220 g     F .text	000000000000000c isgraph
0000000000000430  w    F .text	000000000000001b __assert_fail
0000000000000170 g     F .text	000000000000003d isalnum
0000000000000240 g     F .text	000000000000000c isprint
0000000000000130 g     O .eh_frame	0000000000000004 .hidden __EH_FRAME_LIST_END__
00000000000056a0 g     F .text	000000000000004c strcmp
0000000000002140 g     F .text	0000000000000086 asprintf
0000000000005880 g     F .text	000000000000009e strerror_r
0000000000000020  w    F .text	0000000000000003 atexit
00000000000002f0 g     F .text	0000000000000006 toascii
0000000000005730 g     F .text	00000000000000b5 strcspn
00000000000060a0 g     F .text	000000000000000c iswdigit
0000000000001f80 g     F .text	000000000000008f snprintf_
0000000000002890 g     F .text	0000000000000373 heapsort_r
0000000000002c40 g     F .text	0000000000000009 ldiv
0000000000005b20 g     F .text	0000000000000094 strnstr
0000000000006210 g     F .text	0000000000000020 iswupper
0000000000000008 g     O .ctors	0000000000000008 .hidden __CTOR_LIST_END__
0000000000002c60 g     F .text	0000000000000009 lldiv
0000000000001e30 g     F .text	00000000000000a5 printf_
0000000000000210 g     F .text	000000000000000c isdigit
00000000000043a0 g     F .text	000000000000004f qsort_r
0000000000002580 g     F .text	0000000000000307 heapsort
0000000000000000         *UND*	0000000000000000 kmalloc
0000000000000120  w    F .text	0000000000000009 exit
0000000000006520 g     F .text	000000000000001d towlower
0000000000002c50 g     F .text	000000000000000b llabs
0000000000005f50 g     F .text	000000000000003e iswalnum
00000000000022f0 g     F .text	0000000000000066 atoi
00000000000001f0 g     F .text	0000000000000012 iscntrl
0000000000006734 g     F .text	0000000000000000 _setjmp
0000000000005c20 g     F .text	00000000000000c2 strspn
0000000000005920 g     F .text	0000000000000088 strlen
0000000000000330 g     F .text	0000000000000024 toupper
00000000000023f0 g     F .text	0000000000000084 atoll
0000000000002570 g     F .text	000000000000000d div
00000000000022e0 g     F .text	0000000000000008 abs
0000000000005580 g     F .text	000000000000001e strchr
0000000000006560 g     F .text	000000000000004f wcswidth
0000000000002c20 g     F .text	0000000000000009 imaxdiv
0000000000002250 g     F .text	0000000000000087 vasprintf
0000000000000000  w      *UND*	0000000000000000 __register_frame_info
0000000000000140  w    F .text	000000000000000b __stack_chk_guard_init
0000000000005bc0 g     F .text	0000000000000023 strpbrk
0000000000002130 g     F .text	0000000000000005 free
00000000000065b0 g     F .text	0000000000000043 wctrans



Disassembly of section .init:

0000000000000000 <.init>:
   0:	e8 00 00 00 00       	call   5 <.LC22+0x1>
			1: R_X86_64_PC32	.text+0x3c

Disassembly of section .text:

0000000000000000 <_Exit>:
       0:	eb fe                	jmp    0 <_Exit>
       2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
       9:	00 00 00 
       c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000010 <abort>:
      10:	55                   	push   %rbp
      11:	bf 2d 00 00 00       	mov    $0x2d,%edi
      16:	48 89 e5             	mov    %rsp,%rbp
      19:	e8 00 00 00 00       	call   1e <abort+0xe>
			1a: R_X86_64_PLT32	_Exit-0x4
      1e:	66 90                	xchg   %ax,%ax

0000000000000020 <atexit>:
      20:	31 c0                	xor    %eax,%eax
      22:	c3                   	ret    
      23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
      2a:	00 00 00 
      2d:	0f 1f 00             	nopl   (%rax)

0000000000000030 <at_quick_exit>:
      30:	31 c0                	xor    %eax,%eax
      32:	c3                   	ret    
      33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
      3a:	00 00 00 
      3d:	0f 1f 00             	nopl   (%rax)

0000000000000040 <__do_init>:
      40:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 47 <__do_init+0x7>
			42: R_X86_64_PC32	.bss+0x5b
      47:	75 47                	jne    90 <__do_init+0x50>
      49:	55                   	push   %rbp
      4a:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			4d: R_X86_64_32S	__register_frame_info
      51:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 58 <__do_init+0x18>
			53: R_X86_64_PC32	.bss+0x5b
      58:	48 89 e5             	mov    %rsp,%rbp
      5b:	48 85 c0             	test   %rax,%rax
      5e:	74 13                	je     73 <__do_init+0x33>
      60:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 67 <__do_init+0x27>
			63: R_X86_64_PC32	.eh_frame+0xc4
      67:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			6a: R_X86_64_32S	.bss+0x20
      6e:	e8 00 00 00 00       	call   73 <__do_init+0x33>
			6f: R_X86_64_PLT32	__register_frame_info-0x4
      73:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
      7a:	00 00 00 
			75: R_X86_64_64	__CTOR_LIST_END__-0x1
      7d:	5d                   	pop    %rbp
      7e:	48 2d 00 00 00 00    	sub    $0x0,%rax
			80: R_X86_64_32S	.ctors
      84:	48 8b 04 c5 00 00 00 	mov    0x0(,%rax,8),%rax
      8b:	00 
			88: R_X86_64_32S	.ctors
      8c:	ff e0                	jmp    *%rax
      8e:	66 90                	xchg   %ax,%ax
      90:	c3                   	ret    
      91:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
      98:	00 00 00 00 
      9c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000000a0 <__do_fini>:
      a0:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # a7 <__do_fini+0x7>
			a2: R_X86_64_PC32	.bss+0x3
      a7:	75 57                	jne    100 <__do_fini+0x60>
      a9:	55                   	push   %rbp
      aa:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			ad: R_X86_64_32S	__deregister_frame_info
      b1:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # b8 <__do_fini+0x18>
			b3: R_X86_64_PC32	.bss+0x3
      b8:	48 89 e5             	mov    %rsp,%rbp
      bb:	41 54                	push   %r12
      bd:	53                   	push   %rbx
      be:	48 85 c0             	test   %rax,%rax
      c1:	74 0c                	je     cf <__do_fini+0x2f>
      c3:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # ca <__do_fini+0x2a>
			c6: R_X86_64_PC32	.eh_frame+0xc4
      ca:	e8 00 00 00 00       	call   cf <__do_fini+0x2f>
			cb: R_X86_64_PLT32	__deregister_frame_info-0x4
      cf:	49 bc 00 00 00 00 00 	movabs $0x0,%r12
      d6:	00 00 00 
			d1: R_X86_64_64	__DTOR_LIST_END__-0x1
      d9:	bb 01 00 00 00       	mov    $0x1,%ebx
      de:	49 81 ec 00 00 00 00 	sub    $0x0,%r12
			e1: R_X86_64_32S	.dtors
      e5:	0f 1f 00             	nopl   (%rax)
      e8:	ff 14 dd 00 00 00 00 	call   *0x0(,%rbx,8)
			eb: R_X86_64_32S	.dtors
      ef:	48 83 c3 01          	add    $0x1,%rbx
      f3:	4c 39 e3             	cmp    %r12,%rbx
      f6:	72 f0                	jb     e8 <__do_fini+0x48>
      f8:	5b                   	pop    %rbx
      f9:	41 5c                	pop    %r12
      fb:	5d                   	pop    %rbp
      fc:	c3                   	ret    
      fd:	0f 1f 00             	nopl   (%rax)
     100:	c3                   	ret    
     101:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     108:	00 00 00 
     10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000110 <__cxa_atexit>:
     110:	31 c0                	xor    %eax,%eax
     112:	c3                   	ret    
     113:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     11a:	00 00 00 
     11d:	0f 1f 00             	nopl   (%rax)

0000000000000120 <exit>:
     120:	55                   	push   %rbp
     121:	48 89 e5             	mov    %rsp,%rbp
     124:	e8 00 00 00 00       	call   129 <exit+0x9>
			125: R_X86_64_PLT32	_Exit-0x4
     129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000130 <quick_exit>:
     130:	55                   	push   %rbp
     131:	48 89 e5             	mov    %rsp,%rbp
     134:	e8 00 00 00 00       	call   139 <quick_exit+0x9>
			135: R_X86_64_PLT32	_Exit-0x4
     139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000140 <__stack_chk_guard_init>:
     140:	48 b8 72 85 5a a5 ef 	movabs $0xdeadbeefa55a8572,%rax
     147:	be ad de 
     14a:	c3                   	ret    
     14b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000150 <__stack_chk_fail>:
     150:	55                   	push   %rbp
     151:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			154: R_X86_64_32S	.rodata.str1.8
     158:	31 c0                	xor    %eax,%eax
     15a:	48 89 e5             	mov    %rsp,%rbp
     15d:	e8 00 00 00 00       	call   162 <__stack_chk_fail+0x12>
			15e: R_X86_64_PLT32	printf_-0x4
     162:	e8 00 00 00 00       	call   167 <__stack_chk_fail+0x17>
			163: R_X86_64_PLT32	abort-0x4
     167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     16e:	00 00 

0000000000000170 <isalnum>:
     170:	55                   	push   %rbp
     171:	48 89 e5             	mov    %rsp,%rbp
     174:	53                   	push   %rbx
     175:	89 fb                	mov    %edi,%ebx
     177:	48 83 ec 08          	sub    $0x8,%rsp
     17b:	e8 00 00 00 00       	call   180 <isalnum+0x10>
			17c: R_X86_64_PLT32	isalpha-0x4
     180:	89 c2                	mov    %eax,%edx
     182:	b8 01 00 00 00       	mov    $0x1,%eax
     187:	85 d2                	test   %edx,%edx
     189:	74 0d                	je     198 <isalnum+0x28>
     18b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     18f:	c9                   	leave  
     190:	c3                   	ret    
     191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     198:	89 df                	mov    %ebx,%edi
     19a:	e8 00 00 00 00       	call   19f <isalnum+0x2f>
			19b: R_X86_64_PLT32	isdigit-0x4
     19f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     1a3:	c9                   	leave  
     1a4:	85 c0                	test   %eax,%eax
     1a6:	0f 95 c0             	setne  %al
     1a9:	0f b6 c0             	movzbl %al,%eax
     1ac:	c3                   	ret    
     1ad:	0f 1f 00             	nopl   (%rax)

00000000000001b0 <isalpha>:
     1b0:	83 cf 20             	or     $0x20,%edi
     1b3:	31 c0                	xor    %eax,%eax
     1b5:	83 ef 61             	sub    $0x61,%edi
     1b8:	83 ff 19             	cmp    $0x19,%edi
     1bb:	0f 96 c0             	setbe  %al
     1be:	c3                   	ret    
     1bf:	90                   	nop

00000000000001c0 <isascii>:
     1c0:	31 c0                	xor    %eax,%eax
     1c2:	83 ff 7f             	cmp    $0x7f,%edi
     1c5:	0f 96 c0             	setbe  %al
     1c8:	c3                   	ret    
     1c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000001d0 <isblank>:
     1d0:	83 ff 20             	cmp    $0x20,%edi
     1d3:	0f 94 c0             	sete   %al
     1d6:	83 ff 09             	cmp    $0x9,%edi
     1d9:	0f 94 c2             	sete   %dl
     1dc:	09 d0                	or     %edx,%eax
     1de:	0f b6 c0             	movzbl %al,%eax
     1e1:	c3                   	ret    
     1e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     1e9:	00 00 00 
     1ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000001f0 <iscntrl>:
     1f0:	83 ff 1f             	cmp    $0x1f,%edi
     1f3:	0f 96 c0             	setbe  %al
     1f6:	83 ff 7f             	cmp    $0x7f,%edi
     1f9:	0f 94 c2             	sete   %dl
     1fc:	09 d0                	or     %edx,%eax
     1fe:	0f b6 c0             	movzbl %al,%eax
     201:	c3                   	ret    
     202:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     209:	00 00 00 
     20c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000210 <isdigit>:
     210:	83 ef 30             	sub    $0x30,%edi
     213:	31 c0                	xor    %eax,%eax
     215:	83 ff 09             	cmp    $0x9,%edi
     218:	0f 96 c0             	setbe  %al
     21b:	c3                   	ret    
     21c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000220 <isgraph>:
     220:	83 ef 21             	sub    $0x21,%edi
     223:	31 c0                	xor    %eax,%eax
     225:	83 ff 5d             	cmp    $0x5d,%edi
     228:	0f 96 c0             	setbe  %al
     22b:	c3                   	ret    
     22c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000230 <islower>:
     230:	83 ef 61             	sub    $0x61,%edi
     233:	31 c0                	xor    %eax,%eax
     235:	83 ff 19             	cmp    $0x19,%edi
     238:	0f 96 c0             	setbe  %al
     23b:	c3                   	ret    
     23c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000240 <isprint>:
     240:	83 ef 20             	sub    $0x20,%edi
     243:	31 c0                	xor    %eax,%eax
     245:	83 ff 5e             	cmp    $0x5e,%edi
     248:	0f 96 c0             	setbe  %al
     24b:	c3                   	ret    
     24c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000250 <ispunct>:
     250:	55                   	push   %rbp
     251:	48 89 e5             	mov    %rsp,%rbp
     254:	53                   	push   %rbx
     255:	89 fb                	mov    %edi,%ebx
     257:	48 83 ec 08          	sub    $0x8,%rsp
     25b:	e8 00 00 00 00       	call   260 <ispunct+0x10>
			25c: R_X86_64_PLT32	isgraph-0x4
     260:	85 c0                	test   %eax,%eax
     262:	75 0c                	jne    270 <ispunct+0x20>
     264:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     268:	c9                   	leave  
     269:	c3                   	ret    
     26a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     270:	89 df                	mov    %ebx,%edi
     272:	e8 00 00 00 00       	call   277 <ispunct+0x27>
			273: R_X86_64_PLT32	isalnum-0x4
     277:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     27b:	c9                   	leave  
     27c:	85 c0                	test   %eax,%eax
     27e:	0f 94 c0             	sete   %al
     281:	0f b6 c0             	movzbl %al,%eax
     284:	c3                   	ret    
     285:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     28c:	00 00 00 
     28f:	90                   	nop

0000000000000290 <isspace>:
     290:	8d 47 f7             	lea    -0x9(%rdi),%eax
     293:	83 f8 04             	cmp    $0x4,%eax
     296:	0f 96 c0             	setbe  %al
     299:	83 ff 20             	cmp    $0x20,%edi
     29c:	0f 94 c2             	sete   %dl
     29f:	09 d0                	or     %edx,%eax
     2a1:	0f b6 c0             	movzbl %al,%eax
     2a4:	c3                   	ret    
     2a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     2ac:	00 00 00 
     2af:	90                   	nop

00000000000002b0 <isupper>:
     2b0:	83 ef 41             	sub    $0x41,%edi
     2b3:	31 c0                	xor    %eax,%eax
     2b5:	83 ff 19             	cmp    $0x19,%edi
     2b8:	0f 96 c0             	setbe  %al
     2bb:	c3                   	ret    
     2bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002c0 <isxdigit>:
     2c0:	55                   	push   %rbp
     2c1:	48 89 e5             	mov    %rsp,%rbp
     2c4:	53                   	push   %rbx
     2c5:	89 fb                	mov    %edi,%ebx
     2c7:	48 83 ec 08          	sub    $0x8,%rsp
     2cb:	e8 00 00 00 00       	call   2d0 <isxdigit+0x10>
			2cc: R_X86_64_PLT32	isdigit-0x4
     2d0:	89 c2                	mov    %eax,%edx
     2d2:	b8 01 00 00 00       	mov    $0x1,%eax
     2d7:	85 d2                	test   %edx,%edx
     2d9:	75 0e                	jne    2e9 <isxdigit+0x29>
     2db:	83 cb 20             	or     $0x20,%ebx
     2de:	31 c0                	xor    %eax,%eax
     2e0:	83 eb 61             	sub    $0x61,%ebx
     2e3:	83 fb 05             	cmp    $0x5,%ebx
     2e6:	0f 96 c0             	setbe  %al
     2e9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     2ed:	c9                   	leave  
     2ee:	c3                   	ret    
     2ef:	90                   	nop

00000000000002f0 <toascii>:
     2f0:	89 f8                	mov    %edi,%eax
     2f2:	83 e0 7f             	and    $0x7f,%eax
     2f5:	c3                   	ret    
     2f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     2fd:	00 00 00 

0000000000000300 <tolower>:
     300:	55                   	push   %rbp
     301:	48 89 e5             	mov    %rsp,%rbp
     304:	53                   	push   %rbx
     305:	89 fb                	mov    %edi,%ebx
     307:	48 83 ec 08          	sub    $0x8,%rsp
     30b:	e8 00 00 00 00       	call   310 <tolower+0x10>
			30c: R_X86_64_PLT32	isupper-0x4
     310:	89 c2                	mov    %eax,%edx
     312:	89 d8                	mov    %ebx,%eax
     314:	83 c8 20             	or     $0x20,%eax
     317:	85 d2                	test   %edx,%edx
     319:	0f 45 d8             	cmovne %eax,%ebx
     31c:	89 d8                	mov    %ebx,%eax
     31e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     322:	c9                   	leave  
     323:	c3                   	ret    
     324:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     32b:	00 00 00 
     32e:	66 90                	xchg   %ax,%ax

0000000000000330 <toupper>:
     330:	55                   	push   %rbp
     331:	48 89 e5             	mov    %rsp,%rbp
     334:	53                   	push   %rbx
     335:	89 fb                	mov    %edi,%ebx
     337:	48 83 ec 08          	sub    $0x8,%rsp
     33b:	e8 00 00 00 00       	call   340 <toupper+0x10>
			33c: R_X86_64_PLT32	islower-0x4
     340:	89 c2                	mov    %eax,%edx
     342:	89 d8                	mov    %ebx,%eax
     344:	83 e0 5f             	and    $0x5f,%eax
     347:	85 d2                	test   %edx,%edx
     349:	0f 45 d8             	cmovne %eax,%ebx
     34c:	89 d8                	mov    %ebx,%eax
     34e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     352:	c9                   	leave  
     353:	c3                   	ret    
     354:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     35b:	00 00 00 
     35e:	66 90                	xchg   %ax,%ax

0000000000000360 <nl_langinfo>:
     360:	55                   	push   %rbp
     361:	89 f9                	mov    %edi,%ecx
     363:	c1 f9 10             	sar    $0x10,%ecx
     366:	48 89 e5             	mov    %rsp,%rbp
     369:	83 ff 0e             	cmp    $0xe,%edi
     36c:	0f 84 90 00 00 00    	je     402 <nl_langinfo+0xa2>
     372:	0f b7 d7             	movzwl %di,%edx
     375:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
     37b:	75 05                	jne    382 <nl_langinfo+0x22>
     37d:	83 f9 05             	cmp    $0x5,%ecx
     380:	7e 61                	jle    3e3 <nl_langinfo+0x83>
     382:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			385: R_X86_64_32S	.rodata.str1.1
     389:	83 f9 02             	cmp    $0x2,%ecx
     38c:	74 36                	je     3c4 <nl_langinfo+0x64>
     38e:	83 f9 05             	cmp    $0x5,%ecx
     391:	74 3f                	je     3d2 <nl_langinfo+0x72>
     393:	83 f9 01             	cmp    $0x1,%ecx
     396:	74 02                	je     39a <nl_langinfo+0x3a>
     398:	5d                   	pop    %rbp
     399:	c3                   	ret    
     39a:	81 e7 fe ff 00 00    	and    $0xfffe,%edi
     3a0:	75 f6                	jne    398 <nl_langinfo+0x38>
     3a2:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			3a5: R_X86_64_32S	.rodata+0xc
     3a9:	85 d2                	test   %edx,%edx
     3ab:	75 07                	jne    3b4 <nl_langinfo+0x54>
     3ad:	eb e9                	jmp    398 <nl_langinfo+0x38>
     3af:	90                   	nop
     3b0:	48 83 c0 01          	add    $0x1,%rax
     3b4:	80 38 00             	cmpb   $0x0,(%rax)
     3b7:	75 f7                	jne    3b0 <nl_langinfo+0x50>
     3b9:	48 83 c0 01          	add    $0x1,%rax
     3bd:	83 ea 01             	sub    $0x1,%edx
     3c0:	75 f2                	jne    3b4 <nl_langinfo+0x54>
     3c2:	5d                   	pop    %rbp
     3c3:	c3                   	ret    
     3c4:	83 fa 31             	cmp    $0x31,%edx
     3c7:	7f cf                	jg     398 <nl_langinfo+0x38>
     3c9:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			3cc: R_X86_64_32S	.rodata+0x40
     3d0:	eb d7                	jmp    3a9 <nl_langinfo+0x49>
     3d2:	81 e7 fc ff 00 00    	and    $0xfffc,%edi
     3d8:	75 be                	jne    398 <nl_langinfo+0x38>
     3da:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			3dd: R_X86_64_32S	.rodata+0x10
     3e1:	eb c6                	jmp    3a9 <nl_langinfo+0x49>
     3e3:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			3e6: R_X86_64_32S	.rodata
     3ea:	ba 4f 00 00 00       	mov    $0x4f,%edx
     3ef:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			3f2: R_X86_64_32S	.rodata.str1.1+0x1
     3f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3f9: R_X86_64_32S	.rodata.str1.1+0x17
     3fd:	e8 00 00 00 00       	call   402 <nl_langinfo+0xa2>
			3fe: R_X86_64_PLT32	__assert_fail-0x4
     402:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			405: R_X86_64_32S	.rodata
     409:	ba 48 00 00 00       	mov    $0x48,%edx
     40e:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			411: R_X86_64_32S	.rodata.str1.1+0x1
     415:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			418: R_X86_64_32S	.rodata.str1.1+0x17
     41c:	e8 00 00 00 00       	call   421 <nl_langinfo+0xc1>
			41d: R_X86_64_PLT32	__assert_fail-0x4
     421:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     428:	00 00 00 
     42b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000430 <__assert_fail>:
     430:	55                   	push   %rbp
     431:	41 89 d0             	mov    %edx,%r8d
     434:	31 c0                	xor    %eax,%eax
     436:	48 89 f2             	mov    %rsi,%rdx
     439:	48 89 fe             	mov    %rdi,%rsi
     43c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			43f: R_X86_64_32S	.rodata.str1.8+0x30
     443:	48 89 e5             	mov    %rsp,%rbp
     446:	e8 00 00 00 00       	call   44b <__assert_fail+0x1b>
			447: R_X86_64_PLT32	printf_-0x4
     44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000450 <_out_buffer>:
     450:	48 39 ca             	cmp    %rcx,%rdx
     453:	73 04                	jae    459 <_out_buffer+0x9>
     455:	40 88 3c 16          	mov    %dil,(%rsi,%rdx,1)
     459:	c3                   	ret    
     45a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000460 <_out_null>:
     460:	c3                   	ret    
     461:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     468:	00 00 00 00 
     46c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000470 <_out_rev>:
     470:	55                   	push   %rbp
     471:	48 89 e5             	mov    %rsp,%rbp
     474:	41 57                	push   %r15
     476:	4d 89 cf             	mov    %r9,%r15
     479:	41 56                	push   %r14
     47b:	49 89 ce             	mov    %rcx,%r14
     47e:	41 55                	push   %r13
     480:	41 54                	push   %r12
     482:	49 89 fc             	mov    %rdi,%r12
     485:	53                   	push   %rbx
     486:	48 89 d3             	mov    %rdx,%rbx
     489:	48 83 ec 28          	sub    $0x28,%rsp
     48d:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
     491:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
     495:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
     499:	f6 45 18 03          	testb  $0x3,0x18(%rbp)
     49d:	75 3c                	jne    4db <_out_rev+0x6b>
     49f:	48 89 d1             	mov    %rdx,%rcx
     4a2:	8b 55 10             	mov    0x10(%rbp),%edx
     4a5:	49 89 cd             	mov    %rcx,%r13
     4a8:	48 89 d0             	mov    %rdx,%rax
     4ab:	4c 29 c8             	sub    %r9,%rax
     4ae:	48 8d 1c 18          	lea    (%rax,%rbx,1),%rbx
     4b2:	49 39 d1             	cmp    %rdx,%r9
     4b5:	0f 83 a6 00 00 00    	jae    561 <_out_rev+0xf1>
     4bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     4c0:	4c 89 ea             	mov    %r13,%rdx
     4c3:	49 83 c5 01          	add    $0x1,%r13
     4c7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     4cb:	4c 89 f1             	mov    %r14,%rcx
     4ce:	bf 20 00 00 00       	mov    $0x20,%edi
     4d3:	41 ff d4             	call   *%r12
     4d6:	4c 39 eb             	cmp    %r13,%rbx
     4d9:	75 e5                	jne    4c0 <_out_rev+0x50>
     4db:	4d 89 fd             	mov    %r15,%r13
     4de:	4d 8d 3c 1f          	lea    (%r15,%rbx,1),%r15
     4e2:	4d 85 ed             	test   %r13,%r13
     4e5:	74 2e                	je     515 <_out_rev+0xa5>
     4e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     4ee:	00 00 
     4f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     4f4:	4c 89 fa             	mov    %r15,%rdx
     4f7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     4fb:	4c 89 fb             	mov    %r15,%rbx
     4fe:	4c 29 ea             	sub    %r13,%rdx
     501:	49 83 ed 01          	sub    $0x1,%r13
     505:	4c 89 f1             	mov    %r14,%rcx
     508:	42 0f be 3c 28       	movsbl (%rax,%r13,1),%edi
     50d:	41 ff d4             	call   *%r12
     510:	4d 85 ed             	test   %r13,%r13
     513:	75 db                	jne    4f0 <_out_rev+0x80>
     515:	f6 45 18 02          	testb  $0x2,0x18(%rbp)
     519:	74 34                	je     54f <_out_rev+0xdf>
     51b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
     51f:	49 89 df             	mov    %rbx,%r15
     522:	44 8b 6d 10          	mov    0x10(%rbp),%r13d
     526:	49 29 c7             	sub    %rax,%r15
     529:	4d 39 ef             	cmp    %r13,%r15
     52c:	73 21                	jae    54f <_out_rev+0xdf>
     52e:	66 90                	xchg   %ax,%ax
     530:	49 83 c7 01          	add    $0x1,%r15
     534:	48 89 da             	mov    %rbx,%rdx
     537:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     53b:	4c 89 f1             	mov    %r14,%rcx
     53e:	bf 20 00 00 00       	mov    $0x20,%edi
     543:	48 83 c3 01          	add    $0x1,%rbx
     547:	41 ff d4             	call   *%r12
     54a:	4d 39 ef             	cmp    %r13,%r15
     54d:	72 e1                	jb     530 <_out_rev+0xc0>
     54f:	48 83 c4 28          	add    $0x28,%rsp
     553:	48 89 d8             	mov    %rbx,%rax
     556:	5b                   	pop    %rbx
     557:	41 5c                	pop    %r12
     559:	41 5d                	pop    %r13
     55b:	41 5e                	pop    %r14
     55d:	41 5f                	pop    %r15
     55f:	5d                   	pop    %rbp
     560:	c3                   	ret    
     561:	48 89 cb             	mov    %rcx,%rbx
     564:	e9 72 ff ff ff       	jmp    4db <_out_rev+0x6b>
     569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000570 <_ntoa_long>:
     570:	55                   	push   %rbp
     571:	48 89 e5             	mov    %rsp,%rbp
     574:	41 57                	push   %r15
     576:	41 56                	push   %r14
     578:	41 55                	push   %r13
     57a:	49 89 d5             	mov    %rdx,%r13
     57d:	41 54                	push   %r12
     57f:	49 89 f4             	mov    %rsi,%r12
     582:	53                   	push   %rbx
     583:	48 89 fb             	mov    %rdi,%rbx
     586:	48 83 ec 38          	sub    $0x38,%rsp
     58a:	8b 45 28             	mov    0x28(%rbp),%eax
     58d:	48 8b 75 10          	mov    0x10(%rbp),%rsi
     591:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
     595:	41 89 c6             	mov    %eax,%r14d
     598:	41 81 e6 00 04 00 00 	and    $0x400,%r14d
     59f:	4d 85 c0             	test   %r8,%r8
     5a2:	0f 84 e0 00 00 00    	je     688 <_ntoa_long+0x118>
     5a8:	41 89 c7             	mov    %eax,%r15d
     5ab:	41 89 c2             	mov    %eax,%r10d
     5ae:	41 83 e7 10          	and    $0x10,%r15d
     5b2:	44 89 d0             	mov    %r10d,%eax
     5b5:	44 89 55 ac          	mov    %r10d,-0x54(%rbp)
     5b9:	48 8d 7d af          	lea    -0x51(%rbp),%rdi
     5bd:	83 e0 20             	and    $0x20,%eax
     5c0:	44 89 7d a8          	mov    %r15d,-0x58(%rbp)
     5c4:	83 f8 01             	cmp    $0x1,%eax
     5c7:	45 19 db             	sbb    %r11d,%r11d
     5ca:	45 31 c9             	xor    %r9d,%r9d
     5cd:	41 83 e3 20          	and    $0x20,%r11d
     5d1:	41 83 c3 37          	add    $0x37,%r11d
     5d5:	eb 0c                	jmp    5e3 <_ntoa_long+0x73>
     5d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     5de:	00 00 
     5e0:	49 89 c0             	mov    %rax,%r8
     5e3:	31 d2                	xor    %edx,%edx
     5e5:	4c 89 c0             	mov    %r8,%rax
     5e8:	48 f7 f6             	div    %rsi
     5eb:	48 83 fa 09          	cmp    $0x9,%rdx
     5ef:	44 8d 7a 30          	lea    0x30(%rdx),%r15d
     5f3:	45 8d 14 13          	lea    (%r11,%rdx,1),%r10d
     5f7:	45 0f 46 d7          	cmovbe %r15d,%r10d
     5fb:	49 83 c1 01          	add    $0x1,%r9
     5ff:	46 88 14 0f          	mov    %r10b,(%rdi,%r9,1)
     603:	49 83 f9 1f          	cmp    $0x1f,%r9
     607:	77 05                	ja     60e <_ntoa_long+0x9e>
     609:	49 39 f0             	cmp    %rsi,%r8
     60c:	73 d2                	jae    5e0 <_ntoa_long+0x70>
     60e:	44 8b 55 ac          	mov    -0x54(%rbp),%r10d
     612:	44 8b 7d a8          	mov    -0x58(%rbp),%r15d
     616:	41 f6 c2 02          	test   $0x2,%r10b
     61a:	0f 84 87 00 00 00    	je     6a7 <_ntoa_long+0x137>
     620:	45 85 ff             	test   %r15d,%r15d
     623:	0f 84 1f 01 00 00    	je     748 <_ntoa_long+0x1d8>
     629:	45 85 f6             	test   %r14d,%r14d
     62c:	0f 84 46 01 00 00    	je     778 <_ntoa_long+0x208>
     632:	48 83 fe 10          	cmp    $0x10,%rsi
     636:	0f 84 34 02 00 00    	je     870 <_ntoa_long+0x300>
     63c:	83 fe 02             	cmp    $0x2,%esi
     63f:	75 12                	jne    653 <_ntoa_long+0xe3>
     641:	49 83 f9 1f          	cmp    $0x1f,%r9
     645:	77 0c                	ja     653 <_ntoa_long+0xe3>
     647:	4c 89 c8             	mov    %r9,%rax
     64a:	49 83 c1 01          	add    $0x1,%r9
     64e:	c6 44 05 b0 62       	movb   $0x62,-0x50(%rbp,%rax,1)
     653:	49 83 f9 20          	cmp    $0x20,%r9
     657:	0f 85 6b 01 00 00    	jne    7c8 <_ntoa_long+0x258>
     65d:	41 52                	push   %r10
     65f:	8b 45 20             	mov    0x20(%rbp),%eax
     662:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
     666:	4c 89 ea             	mov    %r13,%rdx
     669:	4c 89 e6             	mov    %r12,%rsi
     66c:	48 89 df             	mov    %rbx,%rdi
     66f:	50                   	push   %rax
     670:	e8 fb fd ff ff       	call   470 <_out_rev>
     675:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     679:	5b                   	pop    %rbx
     67a:	41 5c                	pop    %r12
     67c:	41 5d                	pop    %r13
     67e:	41 5e                	pop    %r14
     680:	41 5f                	pop    %r15
     682:	5d                   	pop    %rbp
     683:	c3                   	ret    
     684:	0f 1f 40 00          	nopl   0x0(%rax)
     688:	41 89 c2             	mov    %eax,%r10d
     68b:	41 83 e2 ef          	and    $0xffffffef,%r10d
     68f:	45 85 f6             	test   %r14d,%r14d
     692:	0f 84 50 01 00 00    	je     7e8 <_ntoa_long+0x278>
     698:	45 31 c9             	xor    %r9d,%r9d
     69b:	83 e0 02             	and    $0x2,%eax
     69e:	41 89 c7             	mov    %eax,%r15d
     6a1:	0f 85 ab 00 00 00    	jne    752 <_ntoa_long+0x1e2>
     6a7:	8b 45 18             	mov    0x18(%rbp),%eax
     6aa:	45 89 d0             	mov    %r10d,%r8d
     6ad:	44 8b 5d 20          	mov    0x20(%rbp),%r11d
     6b1:	41 83 e0 01          	and    $0x1,%r8d
     6b5:	49 83 f9 1f          	cmp    $0x1f,%r9
     6b9:	40 0f 96 c7          	setbe  %dil
     6bd:	49 39 c1             	cmp    %rax,%r9
     6c0:	0f 92 c2             	setb   %dl
     6c3:	21 fa                	and    %edi,%edx
     6c5:	45 85 db             	test   %r11d,%r11d
     6c8:	0f 85 22 01 00 00    	jne    7f0 <_ntoa_long+0x280>
     6ce:	84 d2                	test   %dl,%dl
     6d0:	74 22                	je     6f4 <_ntoa_long+0x184>
     6d2:	48 8d 7d af          	lea    -0x51(%rbp),%rdi
     6d6:	eb 0e                	jmp    6e6 <_ntoa_long+0x176>
     6d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     6df:	00 
     6e0:	49 83 f9 1f          	cmp    $0x1f,%r9
     6e4:	77 0e                	ja     6f4 <_ntoa_long+0x184>
     6e6:	49 83 c1 01          	add    $0x1,%r9
     6ea:	42 c6 04 0f 30       	movb   $0x30,(%rdi,%r9,1)
     6ef:	49 39 c1             	cmp    %rax,%r9
     6f2:	72 ec                	jb     6e0 <_ntoa_long+0x170>
     6f4:	45 85 c0             	test   %r8d,%r8d
     6f7:	0f 84 23 ff ff ff    	je     620 <_ntoa_long+0xb0>
     6fd:	49 83 f9 1f          	cmp    $0x1f,%r9
     701:	40 0f 96 c7          	setbe  %dil
     705:	8b 45 20             	mov    0x20(%rbp),%eax
     708:	49 39 c1             	cmp    %rax,%r9
     70b:	0f 83 0f ff ff ff    	jae    620 <_ntoa_long+0xb0>
     711:	40 84 ff             	test   %dil,%dil
     714:	0f 84 06 ff ff ff    	je     620 <_ntoa_long+0xb0>
     71a:	48 8d 7d af          	lea    -0x51(%rbp),%rdi
     71e:	eb 09                	jmp    729 <_ntoa_long+0x1b9>
     720:	49 39 c1             	cmp    %rax,%r9
     723:	0f 83 f7 fe ff ff    	jae    620 <_ntoa_long+0xb0>
     729:	49 83 c1 01          	add    $0x1,%r9
     72d:	42 c6 04 0f 30       	movb   $0x30,(%rdi,%r9,1)
     732:	49 83 f9 1f          	cmp    $0x1f,%r9
     736:	76 e8                	jbe    720 <_ntoa_long+0x1b0>
     738:	45 85 ff             	test   %r15d,%r15d
     73b:	0f 85 e8 fe ff ff    	jne    629 <_ntoa_long+0xb9>
     741:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     748:	49 83 f9 20          	cmp    $0x20,%r9
     74c:	0f 84 0b ff ff ff    	je     65d <_ntoa_long+0xed>
     752:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
     756:	0f 85 bc 00 00 00    	jne    818 <_ntoa_long+0x2a8>
     75c:	41 f6 c2 04          	test   $0x4,%r10b
     760:	0f 84 32 01 00 00    	je     898 <_ntoa_long+0x328>
     766:	42 c6 44 0d b0 2b    	movb   $0x2b,-0x50(%rbp,%r9,1)
     76c:	49 83 c1 01          	add    $0x1,%r9
     770:	e9 e8 fe ff ff       	jmp    65d <_ntoa_long+0xed>
     775:	0f 1f 00             	nopl   (%rax)
     778:	4d 85 c9             	test   %r9,%r9
     77b:	0f 84 bf 00 00 00    	je     840 <_ntoa_long+0x2d0>
     781:	8b 45 18             	mov    0x18(%rbp),%eax
     784:	49 39 c1             	cmp    %rax,%r9
     787:	74 0c                	je     795 <_ntoa_long+0x225>
     789:	8b 45 20             	mov    0x20(%rbp),%eax
     78c:	49 39 c1             	cmp    %rax,%r9
     78f:	0f 85 9d fe ff ff    	jne    632 <_ntoa_long+0xc2>
     795:	49 8d 41 ff          	lea    -0x1(%r9),%rax
     799:	49 83 f9 01          	cmp    $0x1,%r9
     79d:	0f 84 3c 01 00 00    	je     8df <_ntoa_long+0x36f>
     7a3:	83 fe 10             	cmp    $0x10,%esi
     7a6:	0f 85 33 01 00 00    	jne    8df <_ntoa_long+0x36f>
     7ac:	49 83 e9 02          	sub    $0x2,%r9
     7b0:	41 f6 c2 20          	test   $0x20,%r10b
     7b4:	0f 84 50 01 00 00    	je     90a <_ntoa_long+0x39a>
     7ba:	42 c6 44 0d b0 58    	movb   $0x58,-0x50(%rbp,%r9,1)
     7c0:	49 89 c1             	mov    %rax,%r9
     7c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     7c8:	4c 89 c8             	mov    %r9,%rax
     7cb:	49 83 c1 01          	add    $0x1,%r9
     7cf:	c6 44 05 b0 30       	movb   $0x30,-0x50(%rbp,%rax,1)
     7d4:	49 83 f9 20          	cmp    $0x20,%r9
     7d8:	0f 84 7f fe ff ff    	je     65d <_ntoa_long+0xed>
     7de:	e9 6f ff ff ff       	jmp    752 <_ntoa_long+0x1e2>
     7e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     7e8:	45 31 ff             	xor    %r15d,%r15d
     7eb:	e9 c2 fd ff ff       	jmp    5b2 <_ntoa_long+0x42>
     7f0:	45 85 c0             	test   %r8d,%r8d
     7f3:	74 3b                	je     830 <_ntoa_long+0x2c0>
     7f5:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
     7f9:	75 06                	jne    801 <_ntoa_long+0x291>
     7fb:	41 f6 c2 0c          	test   $0xc,%r10b
     7ff:	74 04                	je     805 <_ntoa_long+0x295>
     801:	83 6d 20 01          	subl   $0x1,0x20(%rbp)
     805:	84 d2                	test   %dl,%dl
     807:	0f 85 c5 fe ff ff    	jne    6d2 <_ntoa_long+0x162>
     80d:	e9 f3 fe ff ff       	jmp    705 <_ntoa_long+0x195>
     812:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     818:	42 c6 44 0d b0 2d    	movb   $0x2d,-0x50(%rbp,%r9,1)
     81e:	49 83 c1 01          	add    $0x1,%r9
     822:	e9 36 fe ff ff       	jmp    65d <_ntoa_long+0xed>
     827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     82e:	00 00 
     830:	84 d2                	test   %dl,%dl
     832:	0f 85 9a fe ff ff    	jne    6d2 <_ntoa_long+0x162>
     838:	e9 e3 fd ff ff       	jmp    620 <_ntoa_long+0xb0>
     83d:	0f 1f 00             	nopl   (%rax)
     840:	48 83 fe 10          	cmp    $0x10,%rsi
     844:	0f 84 aa 00 00 00    	je     8f4 <_ntoa_long+0x384>
     84a:	48 83 fe 02          	cmp    $0x2,%rsi
     84e:	0f 85 7c 00 00 00    	jne    8d0 <_ntoa_long+0x360>
     854:	b8 62 00 00 00       	mov    $0x62,%eax
     859:	88 45 b0             	mov    %al,-0x50(%rbp)
     85c:	41 b9 02 00 00 00    	mov    $0x2,%r9d
     862:	c6 45 b1 30          	movb   $0x30,-0x4f(%rbp)
     866:	e9 e7 fe ff ff       	jmp    752 <_ntoa_long+0x1e2>
     86b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     870:	41 f6 c2 20          	test   $0x20,%r10b
     874:	74 3b                	je     8b1 <_ntoa_long+0x341>
     876:	49 83 f9 20          	cmp    $0x20,%r9
     87a:	0f 84 dd fd ff ff    	je     65d <_ntoa_long+0xed>
     880:	49 8d 51 01          	lea    0x1(%r9),%rdx
     884:	42 c6 44 0d b0 58    	movb   $0x58,-0x50(%rbp,%r9,1)
     88a:	49 89 d1             	mov    %rdx,%r9
     88d:	e9 c1 fd ff ff       	jmp    653 <_ntoa_long+0xe3>
     892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     898:	41 f6 c2 08          	test   $0x8,%r10b
     89c:	0f 84 bb fd ff ff    	je     65d <_ntoa_long+0xed>
     8a2:	42 c6 44 0d b0 20    	movb   $0x20,-0x50(%rbp,%r9,1)
     8a8:	49 83 c1 01          	add    $0x1,%r9
     8ac:	e9 ac fd ff ff       	jmp    65d <_ntoa_long+0xed>
     8b1:	49 83 f9 20          	cmp    $0x20,%r9
     8b5:	0f 84 a2 fd ff ff    	je     65d <_ntoa_long+0xed>
     8bb:	4c 89 c8             	mov    %r9,%rax
     8be:	49 83 c1 01          	add    $0x1,%r9
     8c2:	c6 44 05 b0 78       	movb   $0x78,-0x50(%rbp,%rax,1)
     8c7:	e9 87 fd ff ff       	jmp    653 <_ntoa_long+0xe3>
     8cc:	0f 1f 40 00          	nopl   0x0(%rax)
     8d0:	c6 45 b0 30          	movb   $0x30,-0x50(%rbp)
     8d4:	41 b9 01 00 00 00    	mov    $0x1,%r9d
     8da:	e9 73 fe ff ff       	jmp    752 <_ntoa_long+0x1e2>
     8df:	48 83 fe 10          	cmp    $0x10,%rsi
     8e3:	74 33                	je     918 <_ntoa_long+0x3a8>
     8e5:	48 83 fe 02          	cmp    $0x2,%rsi
     8e9:	0f 84 5f fd ff ff    	je     64e <_ntoa_long+0xde>
     8ef:	e9 db fe ff ff       	jmp    7cf <_ntoa_long+0x25f>
     8f4:	44 89 d0             	mov    %r10d,%eax
     8f7:	83 e0 20             	and    $0x20,%eax
     8fa:	83 f8 01             	cmp    $0x1,%eax
     8fd:	19 c0                	sbb    %eax,%eax
     8ff:	83 e0 20             	and    $0x20,%eax
     902:	83 c0 58             	add    $0x58,%eax
     905:	e9 4f ff ff ff       	jmp    859 <_ntoa_long+0x2e9>
     90a:	42 c6 44 0d b0 78    	movb   $0x78,-0x50(%rbp,%r9,1)
     910:	49 89 c1             	mov    %rax,%r9
     913:	e9 b0 fe ff ff       	jmp    7c8 <_ntoa_long+0x258>
     918:	41 f6 c2 20          	test   $0x20,%r10b
     91c:	74 a4                	je     8c2 <_ntoa_long+0x352>
     91e:	4c 89 ca             	mov    %r9,%rdx
     921:	49 89 c1             	mov    %rax,%r9
     924:	e9 5b ff ff ff       	jmp    884 <_ntoa_long+0x314>
     929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000930 <_etoa>:
     930:	55                   	push   %rbp
     931:	48 89 e5             	mov    %rsp,%rbp
     934:	41 57                	push   %r15
     936:	41 56                	push   %r14
     938:	49 89 d6             	mov    %rdx,%r14
     93b:	41 55                	push   %r13
     93d:	49 89 f5             	mov    %rsi,%r13
     940:	41 54                	push   %r12
     942:	49 89 fc             	mov    %rdi,%r12
     945:	53                   	push   %rbx
     946:	44 89 cb             	mov    %r9d,%ebx
     949:	48 83 ec 38          	sub    $0x38,%rsp
     94d:	0f 13 45 c0          	movlps %xmm0,-0x40(%rbp)
     951:	dd 45 c0             	fldl   -0x40(%rbp)
     954:	44 8b 55 10          	mov    0x10(%rbp),%r10d
     958:	db e8                	fucomi %st(0),%st
     95a:	0f 8a 58 03 00 00    	jp     cb8 <_etoa+0x388>
     960:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # 966 <_etoa+0x36>
			962: R_X86_64_PC32	.LC0-0x4
     966:	d9 c9                	fxch   %st(1)
     968:	db f1                	fcomi  %st(1),%st
     96a:	dd d9                	fstp   %st(1)
     96c:	0f 87 46 03 00 00    	ja     cb8 <_etoa+0x388>
     972:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # 978 <_etoa+0x48>
			974: R_X86_64_PC32	.LC1-0x4
     978:	df f1                	fcomip %st(1),%st
     97a:	0f 87 38 03 00 00    	ja     cb8 <_etoa+0x388>
     980:	d9 7d ce             	fnstcw -0x32(%rbp)
     983:	d9 c0                	fld    %st(0)
     985:	44 89 d2             	mov    %r10d,%edx
     988:	b8 06 00 00 00       	mov    $0x6,%eax
     98d:	d9 e0                	fchs   
     98f:	d9 ee                	fldz   
     991:	df f2                	fcomip %st(2),%st
     993:	da d1                	fcmovbe %st(1),%st
     995:	81 e2 00 04 00 00    	and    $0x400,%edx
     99b:	44 0f 44 c0          	cmove  %eax,%r8d
     99f:	dd 5d c0             	fstpl  -0x40(%rbp)
     9a2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
     9a6:	48 89 f0             	mov    %rsi,%rax
     9a9:	48 c1 e8 34          	shr    $0x34,%rax
     9ad:	25 ff 07 00 00       	and    $0x7ff,%eax
     9b2:	2d ff 03 00 00       	sub    $0x3ff,%eax
     9b7:	89 45 b8             	mov    %eax,-0x48(%rbp)
     9ba:	db 45 b8             	fildl  -0x48(%rbp)
     9bd:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
     9c4:	ff 0f 00 
     9c7:	dc 0d 00 00 00 00    	fmull  0x0(%rip)        # 9cd <_etoa+0x9d>
			9c9: R_X86_64_PC32	.LC3-0x4
     9cd:	48 21 c6             	and    %rax,%rsi
     9d0:	48 b8 00 00 00 00 00 	movabs $0x3ff0000000000000,%rax
     9d7:	00 f0 3f 
     9da:	48 09 c6             	or     %rax,%rsi
     9dd:	0f b7 45 ce          	movzwl -0x32(%rbp),%eax
     9e1:	80 cc 0c             	or     $0xc,%ah
     9e4:	dd 5d b8             	fstpl  -0x48(%rbp)
     9e7:	dd 45 b8             	fldl   -0x48(%rbp)
     9ea:	dc 05 00 00 00 00    	faddl  0x0(%rip)        # 9f0 <_etoa+0xc0>
			9ec: R_X86_64_PC32	.LC4-0x4
     9f0:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
     9f4:	dd 5d b8             	fstpl  -0x48(%rbp)
     9f7:	dd 45 b8             	fldl   -0x48(%rbp)
     9fa:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
     9fe:	dd 45 b8             	fldl   -0x48(%rbp)
     a01:	dc 25 00 00 00 00    	fsubl  0x0(%rip)        # a07 <_etoa+0xd7>
			a03: R_X86_64_PC32	.LC5-0x4
     a07:	dd 5d b8             	fstpl  -0x48(%rbp)
     a0a:	dd 45 b8             	fldl   -0x48(%rbp)
     a0d:	dc 0d 00 00 00 00    	fmull  0x0(%rip)        # a13 <_etoa+0xe3>
			a0f: R_X86_64_PC32	.LC6-0x4
     a13:	dd 5d b8             	fstpl  -0x48(%rbp)
     a16:	dd 45 b8             	fldl   -0x48(%rbp)
     a19:	de c1                	faddp  %st,%st(1)
     a1b:	dd 5d b8             	fstpl  -0x48(%rbp)
     a1e:	dd 45 b8             	fldl   -0x48(%rbp)
     a21:	d9 6d cc             	fldcw  -0x34(%rbp)
     a24:	db 5d b8             	fistpl -0x48(%rbp)
     a27:	d9 6d ce             	fldcw  -0x32(%rbp)
     a2a:	db 45 b8             	fildl  -0x48(%rbp)
     a2d:	d9 c0                	fld    %st(0)
     a2f:	dc 0d 00 00 00 00    	fmull  0x0(%rip)        # a35 <_etoa+0x105>
			a31: R_X86_64_PC32	.LC7-0x4
     a35:	dd 5d b0             	fstpl  -0x50(%rbp)
     a38:	dd 45 b0             	fldl   -0x50(%rbp)
     a3b:	dc 05 00 00 00 00    	faddl  0x0(%rip)        # a41 <_etoa+0x111>
			a3d: R_X86_64_PC32	.LC8-0x4
     a41:	dd 5d b0             	fstpl  -0x50(%rbp)
     a44:	dd 45 b0             	fldl   -0x50(%rbp)
     a47:	d9 6d cc             	fldcw  -0x34(%rbp)
     a4a:	db 5d b0             	fistpl -0x50(%rbp)
     a4d:	d9 6d ce             	fldcw  -0x32(%rbp)
     a50:	dc 0d 00 00 00 00    	fmull  0x0(%rip)        # a56 <_etoa+0x126>
			a52: R_X86_64_PC32	.LC9-0x4
     a56:	dd 5d a8             	fstpl  -0x58(%rbp)
     a59:	dd 45 a8             	fldl   -0x58(%rbp)
     a5c:	db 45 b0             	fildl  -0x50(%rbp)
     a5f:	dc 0d 00 00 00 00    	fmull  0x0(%rip)        # a65 <_etoa+0x135>
			a61: R_X86_64_PC32	.LC10-0x4
     a65:	dd 5d a8             	fstpl  -0x58(%rbp)
     a68:	dd 45 a8             	fldl   -0x58(%rbp)
     a6b:	de e9                	fsubrp %st,%st(1)
     a6d:	dd 5d a8             	fstpl  -0x58(%rbp)
     a70:	dd 45 a8             	fldl   -0x58(%rbp)
     a73:	d9 c0                	fld    %st(0)
     a75:	d8 c9                	fmul   %st(1),%st
     a77:	dd 5d a8             	fstpl  -0x58(%rbp)
     a7a:	dd 45 a8             	fldl   -0x58(%rbp)
     a7d:	d9 c1                	fld    %st(1)
     a7f:	d8 c2                	fadd   %st(2),%st
     a81:	dd 5d a8             	fstpl  -0x58(%rbp)
     a84:	dd 45 a8             	fldl   -0x58(%rbp)
     a87:	d9 c1                	fld    %st(1)
     a89:	dc 35 00 00 00 00    	fdivl  0x0(%rip)        # a8f <_etoa+0x15f>
			a8b: R_X86_64_PC32	.LC11-0x4
     a8f:	dd 5d a8             	fstpl  -0x58(%rbp)
     a92:	dd 45 a8             	fldl   -0x58(%rbp)
     a95:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # a9b <_etoa+0x16b>
			a97: R_X86_64_PC32	.LC12-0x4
     a9b:	dc c1                	fadd   %st,%st(1)
     a9d:	d9 c9                	fxch   %st(1)
     a9f:	dd 5d a8             	fstpl  -0x58(%rbp)
     aa2:	dd 45 a8             	fldl   -0x58(%rbp)
     aa5:	d8 fb                	fdivr  %st(3),%st
     aa7:	dd 5d a8             	fstpl  -0x58(%rbp)
     aaa:	dd 45 a8             	fldl   -0x58(%rbp)
     aad:	dc 05 00 00 00 00    	faddl  0x0(%rip)        # ab3 <_etoa+0x183>
			aaf: R_X86_64_PC32	.LC13-0x4
     ab3:	dd 5d a8             	fstpl  -0x58(%rbp)
     ab6:	dd 45 a8             	fldl   -0x58(%rbp)
     ab9:	de fb                	fdivrp %st,%st(3)
     abb:	d9 ca                	fxch   %st(2)
     abd:	dd 5d a8             	fstpl  -0x58(%rbp)
     ac0:	dd 45 a8             	fldl   -0x58(%rbp)
     ac3:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # ac9 <_etoa+0x199>
			ac5: R_X86_64_PC32	.LC14-0x4
     ac9:	de e4                	fsubp  %st,%st(4)
     acb:	d9 cb                	fxch   %st(3)
     acd:	dd 5d a8             	fstpl  -0x58(%rbp)
     ad0:	dd 45 a8             	fldl   -0x58(%rbp)
     ad3:	8b 45 b0             	mov    -0x50(%rbp),%eax
     ad6:	05 ff 03 00 00       	add    $0x3ff,%eax
     adb:	de c3                	faddp  %st,%st(3)
     add:	d9 ca                	fxch   %st(2)
     adf:	48 c1 e0 34          	shl    $0x34,%rax
     ae3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
     ae7:	dd 5d a8             	fstpl  -0x58(%rbp)
     aea:	dd 45 a8             	fldl   -0x58(%rbp)
     aed:	de fa                	fdivrp %st,%st(2)
     aef:	d9 c9                	fxch   %st(1)
     af1:	dd 5d a8             	fstpl  -0x58(%rbp)
     af4:	dd 45 a8             	fldl   -0x58(%rbp)
     af7:	d9 e8                	fld1   
     af9:	de c1                	faddp  %st,%st(1)
     afb:	dd 5d a8             	fstpl  -0x58(%rbp)
     afe:	dd 45 a8             	fldl   -0x58(%rbp)
     b01:	dc 4d b0             	fmull  -0x50(%rbp)
     b04:	dd 5d b0             	fstpl  -0x50(%rbp)
     b07:	dd 45 c0             	fldl   -0x40(%rbp)
     b0a:	dd 45 b0             	fldl   -0x50(%rbp)
     b0d:	df f1                	fcomip %st(1),%st
     b0f:	dd d8                	fstp   %st(0)
     b11:	0f 87 d1 01 00 00    	ja     ce8 <_etoa+0x3b8>
     b17:	dd d8                	fstp   %st(0)
     b19:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
     b1d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
     b21:	8b 7d b8             	mov    -0x48(%rbp),%edi
     b24:	45 31 db             	xor    %r11d,%r11d
     b27:	8d 47 63             	lea    0x63(%rdi),%eax
     b2a:	3d c6 00 00 00       	cmp    $0xc6,%eax
     b2f:	41 0f 97 c3          	seta   %r11b
     b33:	41 83 c3 04          	add    $0x4,%r11d
     b37:	41 f7 c2 00 08 00 00 	test   $0x800,%r10d
     b3e:	74 3c                	je     b7c <_etoa+0x24c>
     b40:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # b46 <_etoa+0x216>
			b42: R_X86_64_PC32	.LC16-0x4
     b46:	dd 45 c0             	fldl   -0x40(%rbp)
     b49:	44 89 c0             	mov    %r8d,%eax
     b4c:	db f1                	fcomi  %st(1),%st
     b4e:	dd d9                	fstp   %st(1)
     b50:	72 16                	jb     b68 <_etoa+0x238>
     b52:	d9 05 00 00 00 00    	flds   0x0(%rip)        # b58 <_etoa+0x228>
			b54: R_X86_64_PC32	.LC17-0x4
     b58:	df f1                	fcomip %st(1),%st
     b5a:	dd d8                	fstp   %st(0)
     b5c:	0f 87 be 01 00 00    	ja     d20 <_etoa+0x3f0>
     b62:	eb 06                	jmp    b6a <_etoa+0x23a>
     b64:	0f 1f 40 00          	nopl   0x0(%rax)
     b68:	dd d8                	fstp   %st(0)
     b6a:	83 fa 01             	cmp    $0x1,%edx
     b6d:	44 89 c2             	mov    %r8d,%edx
     b70:	83 d2 ff             	adc    $0xffffffff,%edx
     b73:	45 85 c0             	test   %r8d,%r8d
     b76:	0f 45 c2             	cmovne %edx,%eax
     b79:	41 89 c0             	mov    %eax,%r8d
     b7c:	44 89 d2             	mov    %r10d,%edx
     b7f:	41 89 d9             	mov    %ebx,%r9d
     b82:	31 c0                	xor    %eax,%eax
     b84:	8b 75 b8             	mov    -0x48(%rbp),%esi
     b87:	83 e2 02             	and    $0x2,%edx
     b8a:	45 29 d9             	sub    %r11d,%r9d
     b8d:	41 39 db             	cmp    %ebx,%r11d
     b90:	c6 45 b0 01          	movb   $0x1,-0x50(%rbp)
     b94:	44 0f 43 c8          	cmovae %eax,%r9d
     b98:	83 fa 01             	cmp    $0x1,%edx
     b9b:	45 19 ff             	sbb    %r15d,%r15d
     b9e:	41 83 c7 01          	add    $0x1,%r15d
     ba2:	85 d2                	test   %edx,%edx
     ba4:	44 0f 45 c8          	cmovne %eax,%r9d
     ba8:	85 f6                	test   %esi,%esi
     baa:	74 09                	je     bb5 <_etoa+0x285>
     bac:	dd 45 c0             	fldl   -0x40(%rbp)
     baf:	dc 75 a8             	fdivl  -0x58(%rbp)
     bb2:	dd 5d c0             	fstpl  -0x40(%rbp)
     bb5:	d9 ee                	fldz   
     bb7:	44 89 d0             	mov    %r10d,%eax
     bba:	80 e4 f7             	and    $0xf7,%ah
     bbd:	df f1                	fcomip %st(1),%st
     bbf:	dd d8                	fstp   %st(0)
     bc1:	0f 87 49 01 00 00    	ja     d10 <_etoa+0x3e0>
     bc7:	48 83 ec 08          	sub    $0x8,%rsp
     bcb:	44 89 55 c8          	mov    %r10d,-0x38(%rbp)
     bcf:	4c 89 f2             	mov    %r14,%rdx
     bd2:	4c 89 ee             	mov    %r13,%rsi
     bd5:	44 89 5d a8          	mov    %r11d,-0x58(%rbp)
     bd9:	4c 89 e7             	mov    %r12,%rdi
     bdc:	50                   	push   %rax
     bdd:	0f 12 45 c0          	movlps -0x40(%rbp),%xmm0
     be1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
     be5:	e8 96 01 00 00       	call   d80 <_ftoa>
     bea:	80 7d b0 00          	cmpb   $0x0,-0x50(%rbp)
     bee:	5a                   	pop    %rdx
     bef:	59                   	pop    %rcx
     bf0:	0f 84 ac 00 00 00    	je     ca2 <_etoa+0x372>
     bf6:	44 8b 55 c8          	mov    -0x38(%rbp),%r10d
     bfa:	48 8d 70 01          	lea    0x1(%rax),%rsi
     bfe:	48 89 c2             	mov    %rax,%rdx
     c01:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
     c05:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
     c09:	4c 89 ee             	mov    %r13,%rsi
     c0c:	41 83 e2 20          	and    $0x20,%r10d
     c10:	41 83 fa 01          	cmp    $0x1,%r10d
     c14:	19 ff                	sbb    %edi,%edi
     c16:	83 e7 20             	and    $0x20,%edi
     c19:	83 c7 45             	add    $0x45,%edi
     c1c:	41 ff d4             	call   *%r12
     c1f:	8b 45 b8             	mov    -0x48(%rbp),%eax
     c22:	6a 05                	push   $0x5
     c24:	4c 89 ee             	mov    %r13,%rsi
     c27:	44 8b 5d a8          	mov    -0x58(%rbp),%r11d
     c2b:	4c 89 e7             	mov    %r12,%rdi
     c2e:	41 89 c0             	mov    %eax,%r8d
     c31:	41 f7 d8             	neg    %r8d
     c34:	44 0f 48 c0          	cmovs  %eax,%r8d
     c38:	41 83 eb 01          	sub    $0x1,%r11d
     c3c:	c1 e8 1f             	shr    $0x1f,%eax
     c3f:	41 53                	push   %r11
     c41:	41 89 c1             	mov    %eax,%r9d
     c44:	6a 00                	push   $0x0
     c46:	4d 63 c0             	movslq %r8d,%r8
     c49:	6a 0a                	push   $0xa
     c4b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
     c4f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
     c53:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
     c57:	e8 14 f9 ff ff       	call   570 <_ntoa_long>
     c5c:	48 83 c4 20          	add    $0x20,%rsp
     c60:	45 84 ff             	test   %r15b,%r15b
     c63:	74 3d                	je     ca2 <_etoa+0x372>
     c65:	49 89 c7             	mov    %rax,%r15
     c68:	4d 29 f7             	sub    %r14,%r15
     c6b:	49 39 df             	cmp    %rbx,%r15
     c6e:	73 32                	jae    ca2 <_etoa+0x372>
     c70:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
     c74:	4c 89 6d c0          	mov    %r13,-0x40(%rbp)
     c78:	49 89 c5             	mov    %rax,%r13
     c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     c80:	49 83 c7 01          	add    $0x1,%r15
     c84:	4c 89 ea             	mov    %r13,%rdx
     c87:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
     c8b:	4c 89 f1             	mov    %r14,%rcx
     c8e:	bf 20 00 00 00       	mov    $0x20,%edi
     c93:	49 83 c5 01          	add    $0x1,%r13
     c97:	41 ff d4             	call   *%r12
     c9a:	49 39 df             	cmp    %rbx,%r15
     c9d:	72 e1                	jb     c80 <_etoa+0x350>
     c9f:	4c 89 e8             	mov    %r13,%rax
     ca2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     ca6:	5b                   	pop    %rbx
     ca7:	41 5c                	pop    %r12
     ca9:	41 5d                	pop    %r13
     cab:	41 5e                	pop    %r14
     cad:	41 5f                	pop    %r15
     caf:	5d                   	pop    %rbp
     cb0:	c3                   	ret    
     cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     cb8:	44 89 55 10          	mov    %r10d,0x10(%rbp)
     cbc:	41 89 d9             	mov    %ebx,%r9d
     cbf:	dd 5d c0             	fstpl  -0x40(%rbp)
     cc2:	0f 12 45 c0          	movlps -0x40(%rbp),%xmm0
     cc6:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     cca:	4c 89 f2             	mov    %r14,%rdx
     ccd:	4c 89 ee             	mov    %r13,%rsi
     cd0:	5b                   	pop    %rbx
     cd1:	4c 89 e7             	mov    %r12,%rdi
     cd4:	41 5c                	pop    %r12
     cd6:	41 5d                	pop    %r13
     cd8:	41 5e                	pop    %r14
     cda:	41 5f                	pop    %r15
     cdc:	5d                   	pop    %rbp
     cdd:	e9 9e 00 00 00       	jmp    d80 <_ftoa>
     ce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     ce8:	dd 45 b0             	fldl   -0x50(%rbp)
     ceb:	83 6d b8 01          	subl   $0x1,-0x48(%rbp)
     cef:	de f1                	fdivp  %st,%st(1)
     cf1:	dd 5d a8             	fstpl  -0x58(%rbp)
     cf4:	e9 28 fe ff ff       	jmp    b21 <_etoa+0x1f1>
     cf9:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
     d00:	45 31 c9             	xor    %r9d,%r9d
     d03:	45 31 db             	xor    %r11d,%r11d
     d06:	41 89 d2             	mov    %edx,%r10d
     d09:	c6 45 b0 00          	movb   $0x0,-0x50(%rbp)
     d0d:	45 31 ff             	xor    %r15d,%r15d
     d10:	dd 45 c0             	fldl   -0x40(%rbp)
     d13:	d9 e0                	fchs   
     d15:	dd 5d c0             	fstpl  -0x40(%rbp)
     d18:	e9 aa fe ff ff       	jmp    bc7 <_etoa+0x297>
     d1d:	0f 1f 00             	nopl   (%rax)
     d20:	29 f8                	sub    %edi,%eax
     d22:	44 89 d2             	mov    %r10d,%edx
     d25:	83 e8 01             	sub    $0x1,%eax
     d28:	41 39 f8             	cmp    %edi,%r8d
     d2b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
     d31:	44 0f 4f c0          	cmovg  %eax,%r8d
     d35:	80 ce 04             	or     $0x4,%dh
     d38:	85 db                	test   %ebx,%ebx
     d3a:	75 24                	jne    d60 <_etoa+0x430>
     d3c:	d9 ee                	fldz   
     d3e:	44 89 d0             	mov    %r10d,%eax
     d41:	80 e4 f7             	and    $0xf7,%ah
     d44:	80 cc 04             	or     $0x4,%ah
     d47:	df f1                	fcomip %st(1),%st
     d49:	dd d8                	fstp   %st(0)
     d4b:	77 ac                	ja     cf9 <_etoa+0x3c9>
     d4d:	89 45 10             	mov    %eax,0x10(%rbp)
     d50:	45 31 c9             	xor    %r9d,%r9d
     d53:	e9 6a ff ff ff       	jmp    cc2 <_etoa+0x392>
     d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     d5f:	00 
     d60:	c6 45 b0 00          	movb   $0x0,-0x50(%rbp)
     d64:	41 89 d2             	mov    %edx,%r10d
     d67:	41 89 d9             	mov    %ebx,%r9d
     d6a:	45 31 ff             	xor    %r15d,%r15d
     d6d:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
     d74:	45 31 db             	xor    %r11d,%r11d
     d77:	e9 39 fe ff ff       	jmp    bb5 <_etoa+0x285>
     d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000d80 <_ftoa>:
     d80:	55                   	push   %rbp
     d81:	49 89 fb             	mov    %rdi,%r11
     d84:	48 89 e5             	mov    %rsp,%rbp
     d87:	41 57                	push   %r15
     d89:	41 56                	push   %r14
     d8b:	41 55                	push   %r13
     d8d:	41 54                	push   %r12
     d8f:	49 89 cc             	mov    %rcx,%r12
     d92:	53                   	push   %rbx
     d93:	48 89 f3             	mov    %rsi,%rbx
     d96:	48 83 ec 48          	sub    $0x48,%rsp
     d9a:	0f 13 45 a0          	movlps %xmm0,-0x60(%rbp)
     d9e:	dd 45 a0             	fldl   -0x60(%rbp)
     da1:	44 8b 6d 10          	mov    0x10(%rbp),%r13d
     da5:	db e8                	fucomi %st(0),%st
     da7:	0f 8a ab 01 00 00    	jp     f58 <_ftoa+0x1d8>
     dad:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # db3 <_ftoa+0x33>
			daf: R_X86_64_PC32	.LC1-0x4
     db3:	df f1                	fcomip %st(1),%st
     db5:	0f 87 d5 02 00 00    	ja     1090 <_ftoa+0x310>
     dbb:	dd 05 00 00 00 00    	fldl   0x0(%rip)        # dc1 <_ftoa+0x41>
			dbd: R_X86_64_PC32	.LC0-0x4
     dc1:	d9 c9                	fxch   %st(1)
     dc3:	db f1                	fcomi  %st(1),%st
     dc5:	dd d9                	fstp   %st(1)
     dc7:	0f 87 3b 01 00 00    	ja     f08 <_ftoa+0x188>
     dcd:	d9 05 00 00 00 00    	flds   0x0(%rip)        # dd3 <_ftoa+0x53>
			dcf: R_X86_64_PC32	.LC22-0x4
     dd3:	d9 c9                	fxch   %st(1)
     dd5:	db f1                	fcomi  %st(1),%st
     dd7:	dd d9                	fstp   %st(1)
     dd9:	0f 87 81 02 00 00    	ja     1060 <_ftoa+0x2e0>
     ddf:	d9 05 00 00 00 00    	flds   0x0(%rip)        # de5 <_ftoa+0x65>
			de1: R_X86_64_PC32	.LC25-0x4
     de5:	df f1                	fcomip %st(1),%st
     de7:	0f 87 73 02 00 00    	ja     1060 <_ftoa+0x2e0>
     ded:	d9 ee                	fldz   
     def:	45 31 f6             	xor    %r14d,%r14d
     df2:	df f1                	fcomip %st(1),%st
     df4:	0f 87 ae 01 00 00    	ja     fa8 <_ftoa+0x228>
     dfa:	41 f7 c5 00 04 00 00 	test   $0x400,%r13d
     e01:	0f 85 69 01 00 00    	jne    f70 <_ftoa+0x1f0>
     e07:	d9 05 00 00 00 00    	flds   0x0(%rip)        # e0d <_ftoa+0x8d>
			e09: R_X86_64_PC32	.LC17-0x4
     e0d:	d9 c9                	fxch   %st(1)
     e0f:	31 c9                	xor    %ecx,%ecx
     e11:	41 b8 06 00 00 00    	mov    $0x6,%r8d
     e17:	d9 7d ae             	fnstcw -0x52(%rbp)
     e1a:	0f b7 45 ae          	movzwl -0x52(%rbp),%eax
     e1e:	80 cc 0c             	or     $0xc,%ah
     e21:	66 89 45 ac          	mov    %ax,-0x54(%rbp)
     e25:	d9 6d ac             	fldcw  -0x54(%rbp)
     e28:	db 55 a0             	fistl  -0x60(%rbp)
     e2b:	d9 6d ae             	fldcw  -0x52(%rbp)
     e2e:	8b 75 a0             	mov    -0x60(%rbp),%esi
     e31:	d9 c0                	fld    %st(0)
     e33:	db 45 a0             	fildl  -0x60(%rbp)
     e36:	de ea                	fsubrp %st,%st(2)
     e38:	d9 c9                	fxch   %st(1)
     e3a:	dd 5d a0             	fstpl  -0x60(%rbp)
     e3d:	dd 45 a0             	fldl   -0x60(%rbp)
     e40:	d8 ca                	fmul   %st(2),%st
     e42:	dd 5d a0             	fstpl  -0x60(%rbp)
     e45:	d9 05 00 00 00 00    	flds   0x0(%rip)        # e4b <_ftoa+0xcb>
			e47: R_X86_64_PC32	.LC27-0x4
     e4b:	dd 45 a0             	fldl   -0x60(%rbp)
     e4e:	db f1                	fcomi  %st(1),%st
     e50:	dd d9                	fstp   %st(1)
     e52:	0f 83 d8 02 00 00    	jae    1130 <_ftoa+0x3b0>
     e58:	d9 c0                	fld    %st(0)
     e5a:	d9 6d ac             	fldcw  -0x54(%rbp)
     e5d:	df 7d a0             	fistpll -0x60(%rbp)
     e60:	d9 6d ae             	fldcw  -0x52(%rbp)
     e63:	4c 8b 55 a0          	mov    -0x60(%rbp),%r10
     e67:	4c 89 55 a0          	mov    %r10,-0x60(%rbp)
     e6b:	df 6d a0             	fildll -0x60(%rbp)
     e6e:	4d 85 d2             	test   %r10,%r10
     e71:	79 06                	jns    e79 <_ftoa+0xf9>
     e73:	d8 05 00 00 00 00    	fadds  0x0(%rip)        # e79 <_ftoa+0xf9>
			e75: R_X86_64_PC32	.LC29-0x4
     e79:	dd 5d a0             	fstpl  -0x60(%rbp)
     e7c:	dd 45 a0             	fldl   -0x60(%rbp)
     e7f:	de e9                	fsubrp %st,%st(1)
     e81:	dd 5d a0             	fstpl  -0x60(%rbp)
     e84:	d9 05 00 00 00 00    	flds   0x0(%rip)        # e8a <_ftoa+0x10a>
			e86: R_X86_64_PC32	.LC30-0x4
     e8a:	dd 45 a0             	fldl   -0x60(%rbp)
     e8d:	db f1                	fcomi  %st(1),%st
     e8f:	0f 86 c3 02 00 00    	jbe    1158 <_ftoa+0x3d8>
     e95:	dd d8                	fstp   %st(0)
     e97:	dd d8                	fstp   %st(0)
     e99:	49 83 c2 01          	add    $0x1,%r10
     e9d:	4c 89 55 a0          	mov    %r10,-0x60(%rbp)
     ea1:	df 6d a0             	fildll -0x60(%rbp)
     ea4:	79 06                	jns    eac <_ftoa+0x12c>
     ea6:	d8 05 00 00 00 00    	fadds  0x0(%rip)        # eac <_ftoa+0x12c>
			ea8: R_X86_64_PC32	.LC29-0x4
     eac:	dd 5d a0             	fstpl  -0x60(%rbp)
     eaf:	dd 45 a0             	fldl   -0x60(%rbp)
     eb2:	df f2                	fcomip %st(2),%st
     eb4:	dd d9                	fstp   %st(1)
     eb6:	72 06                	jb     ebe <_ftoa+0x13e>
     eb8:	83 c6 01             	add    $0x1,%esi
     ebb:	45 31 d2             	xor    %r10d,%r10d
     ebe:	45 85 c0             	test   %r8d,%r8d
     ec1:	0f 85 e9 01 00 00    	jne    10b0 <_ftoa+0x330>
     ec7:	89 75 a0             	mov    %esi,-0x60(%rbp)
     eca:	db 45 a0             	fildl  -0x60(%rbp)
     ecd:	de e9                	fsubrp %st,%st(1)
     ecf:	dd 5d a0             	fstpl  -0x60(%rbp)
     ed2:	dd 45 a0             	fldl   -0x60(%rbp)
     ed5:	d9 05 00 00 00 00    	flds   0x0(%rip)        # edb <_ftoa+0x15b>
			ed7: R_X86_64_PC32	.LC30-0x4
     edb:	db f1                	fcomi  %st(1),%st
     edd:	76 11                	jbe    ef0 <_ftoa+0x170>
     edf:	d9 c9                	fxch   %st(1)
     ee1:	df f1                	fcomip %st(1),%st
     ee3:	dd d8                	fstp   %st(0)
     ee5:	0f 86 07 01 00 00    	jbe    ff2 <_ftoa+0x272>
     eeb:	eb 07                	jmp    ef4 <_ftoa+0x174>
     eed:	0f 1f 00             	nopl   (%rax)
     ef0:	dd d8                	fstp   %st(0)
     ef2:	dd d8                	fstp   %st(0)
     ef4:	89 f0                	mov    %esi,%eax
     ef6:	83 e0 01             	and    $0x1,%eax
     ef9:	83 f8 01             	cmp    $0x1,%eax
     efc:	83 de ff             	sbb    $0xffffffff,%esi
     eff:	e9 ee 00 00 00       	jmp    ff2 <_ftoa+0x272>
     f04:	0f 1f 40 00          	nopl   0x0(%rax)
     f08:	dd d8                	fstp   %st(0)
     f0a:	44 89 e8             	mov    %r13d,%eax
     f0d:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
			f10: R_X86_64_32S	.rodata.str1.1+0x1e
     f14:	41 55                	push   %r13
     f16:	83 e0 04             	and    $0x4,%eax
     f19:	41 51                	push   %r9
     f1b:	83 f8 01             	cmp    $0x1,%eax
     f1e:	48 19 c9             	sbb    %rcx,%rcx
     f21:	85 c0                	test   %eax,%eax
     f23:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			f26: R_X86_64_32S	.rodata.str1.1+0x19
     f2a:	4c 0f 45 c0          	cmovne %rax,%r8
     f2e:	4c 8d 49 04          	lea    0x4(%rcx),%r9
     f32:	4c 89 e1             	mov    %r12,%rcx
     f35:	48 89 de             	mov    %rbx,%rsi
     f38:	4c 89 df             	mov    %r11,%rdi
     f3b:	e8 30 f5 ff ff       	call   470 <_out_rev>
     f40:	5a                   	pop    %rdx
     f41:	59                   	pop    %rcx
     f42:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     f46:	5b                   	pop    %rbx
     f47:	41 5c                	pop    %r12
     f49:	41 5d                	pop    %r13
     f4b:	41 5e                	pop    %r14
     f4d:	41 5f                	pop    %r15
     f4f:	5d                   	pop    %rbp
     f50:	c3                   	ret    
     f51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     f58:	dd d8                	fstp   %st(0)
     f5a:	41 55                	push   %r13
     f5c:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
			f5f: R_X86_64_32S	.rodata.str1.1+0x22
     f63:	41 51                	push   %r9
     f65:	41 b9 03 00 00 00    	mov    $0x3,%r9d
     f6b:	eb c5                	jmp    f32 <_ftoa+0x1b2>
     f6d:	0f 1f 00             	nopl   (%rax)
     f70:	41 83 f8 09          	cmp    $0x9,%r8d
     f74:	0f 86 f3 02 00 00    	jbe    126d <_ftoa+0x4ed>
     f7a:	31 c9                	xor    %ecx,%ecx
     f7c:	48 8d 45 af          	lea    -0x51(%rbp),%rax
     f80:	48 83 c1 01          	add    $0x1,%rcx
     f84:	41 83 e8 01          	sub    $0x1,%r8d
     f88:	c6 04 08 30          	movb   $0x30,(%rax,%rcx,1)
     f8c:	48 83 f9 1f          	cmp    $0x1f,%rcx
     f90:	77 06                	ja     f98 <_ftoa+0x218>
     f92:	41 83 f8 09          	cmp    $0x9,%r8d
     f96:	77 e8                	ja     f80 <_ftoa+0x200>
     f98:	d9 05 00 00 00 00    	flds   0x0(%rip)        # f9e <_ftoa+0x21e>
			f9a: R_X86_64_PC32	.LC22-0x4
     f9e:	d9 c9                	fxch   %st(1)
     fa0:	e9 72 fe ff ff       	jmp    e17 <_ftoa+0x97>
     fa5:	0f 1f 00             	nopl   (%rax)
     fa8:	d9 ee                	fldz   
     faa:	41 be 01 00 00 00    	mov    $0x1,%r14d
     fb0:	de e1                	fsubp  %st,%st(1)
     fb2:	dd 5d a0             	fstpl  -0x60(%rbp)
     fb5:	dd 45 a0             	fldl   -0x60(%rbp)
     fb8:	e9 3d fe ff ff       	jmp    dfa <_ftoa+0x7a>
     fbd:	0f 1f 00             	nopl   (%rax)
     fc0:	48 63 c6             	movslq %esi,%rax
     fc3:	89 f7                	mov    %esi,%edi
     fc5:	48 83 c1 01          	add    $0x1,%rcx
     fc9:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
     fd0:	c1 ff 1f             	sar    $0x1f,%edi
     fd3:	48 c1 f8 22          	sar    $0x22,%rax
     fd7:	29 f8                	sub    %edi,%eax
     fd9:	8d 3c 80             	lea    (%rax,%rax,4),%edi
     fdc:	01 ff                	add    %edi,%edi
     fde:	29 fe                	sub    %edi,%esi
     fe0:	83 c6 30             	add    $0x30,%esi
     fe3:	40 88 74 0d af       	mov    %sil,-0x51(%rbp,%rcx,1)
     fe8:	89 c6                	mov    %eax,%esi
     fea:	85 c0                	test   %eax,%eax
     fec:	0f 84 8e 01 00 00    	je     1180 <_ftoa+0x400>
     ff2:	48 83 f9 20          	cmp    $0x20,%rcx
     ff6:	75 c8                	jne    fc0 <_ftoa+0x240>
     ff8:	44 89 e8             	mov    %r13d,%eax
     ffb:	83 e0 03             	and    $0x3,%eax
     ffe:	83 f8 01             	cmp    $0x1,%eax
    1001:	75 4d                	jne    1050 <_ftoa+0x2d0>
    1003:	45 85 c9             	test   %r9d,%r9d
    1006:	74 48                	je     1050 <_ftoa+0x2d0>
    1008:	45 84 f6             	test   %r14b,%r14b
    100b:	0f 85 3f 02 00 00    	jne    1250 <_ftoa+0x4d0>
    1011:	41 f6 c5 0c          	test   $0xc,%r13b
    1015:	0f 85 35 02 00 00    	jne    1250 <_ftoa+0x4d0>
    101b:	44 89 ce             	mov    %r9d,%esi
    101e:	48 39 f1             	cmp    %rsi,%rcx
    1021:	0f 83 df 01 00 00    	jae    1206 <_ftoa+0x486>
    1027:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    102b:	eb 14                	jmp    1041 <_ftoa+0x2c1>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	48 83 c1 01          	add    $0x1,%rcx
    1034:	c6 04 08 30          	movb   $0x30,(%rax,%rcx,1)
    1038:	48 39 f1             	cmp    %rsi,%rcx
    103b:	0f 84 4e 01 00 00    	je     118f <_ftoa+0x40f>
    1041:	48 83 f9 20          	cmp    $0x20,%rcx
    1045:	75 e9                	jne    1030 <_ftoa+0x2b0>
    1047:	b9 20 00 00 00       	mov    $0x20,%ecx
    104c:	0f 1f 40 00          	nopl   0x0(%rax)
    1050:	41 55                	push   %r13
    1052:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
    1056:	41 51                	push   %r9
    1058:	49 89 c9             	mov    %rcx,%r9
    105b:	e9 d2 fe ff ff       	jmp    f32 <_ftoa+0x1b2>
    1060:	44 89 6d 10          	mov    %r13d,0x10(%rbp)
    1064:	4c 89 e1             	mov    %r12,%rcx
    1067:	48 89 de             	mov    %rbx,%rsi
    106a:	4c 89 df             	mov    %r11,%rdi
    106d:	dd 5d a0             	fstpl  -0x60(%rbp)
    1070:	0f 12 45 a0          	movlps -0x60(%rbp),%xmm0
    1074:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1078:	5b                   	pop    %rbx
    1079:	41 5c                	pop    %r12
    107b:	41 5d                	pop    %r13
    107d:	41 5e                	pop    %r14
    107f:	41 5f                	pop    %r15
    1081:	5d                   	pop    %rbp
    1082:	e9 a9 f8 ff ff       	jmp    930 <_etoa>
    1087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    108e:	00 00 
    1090:	dd d8                	fstp   %st(0)
    1092:	41 55                	push   %r13
    1094:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
			1097: R_X86_64_32S	.rodata.str1.1+0x26
    109b:	41 51                	push   %r9
    109d:	41 b9 04 00 00 00    	mov    $0x4,%r9d
    10a3:	e9 8a fe ff ff       	jmp    f32 <_ftoa+0x1b2>
    10a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    10af:	00 
    10b0:	dd d8                	fstp   %st(0)
    10b2:	41 8d 44 08 e0       	lea    -0x20(%r8,%rcx,1),%eax
    10b7:	89 75 a8             	mov    %esi,-0x58(%rbp)
    10ba:	4c 89 5d 98          	mov    %r11,-0x68(%rbp)
    10be:	89 c6                	mov    %eax,%esi
    10c0:	49 89 d3             	mov    %rdx,%r11
    10c3:	44 88 75 a0          	mov    %r14b,-0x60(%rbp)
    10c7:	eb 47                	jmp    1110 <_ftoa+0x390>
    10c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d0:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    10d7:	cc cc cc 
    10da:	48 8d 79 01          	lea    0x1(%rcx),%rdi
    10de:	45 8d 78 ff          	lea    -0x1(%r8),%r15d
    10e2:	49 f7 e2             	mul    %r10
    10e5:	4c 89 d0             	mov    %r10,%rax
    10e8:	48 c1 ea 03          	shr    $0x3,%rdx
    10ec:	4c 8d 34 92          	lea    (%rdx,%rdx,4),%r14
    10f0:	4d 01 f6             	add    %r14,%r14
    10f3:	4c 29 f0             	sub    %r14,%rax
    10f6:	83 c0 30             	add    $0x30,%eax
    10f9:	88 44 3d af          	mov    %al,-0x51(%rbp,%rdi,1)
    10fd:	49 83 fa 09          	cmp    $0x9,%r10
    1101:	0f 86 a9 00 00 00    	jbe    11b0 <_ftoa+0x430>
    1107:	45 89 f8             	mov    %r15d,%r8d
    110a:	49 89 d2             	mov    %rdx,%r10
    110d:	48 89 f9             	mov    %rdi,%rcx
    1110:	41 39 f0             	cmp    %esi,%r8d
    1113:	75 bb                	jne    10d0 <_ftoa+0x350>
    1115:	4c 89 da             	mov    %r11,%rdx
    1118:	44 0f b6 75 a0       	movzbl -0x60(%rbp),%r14d
    111d:	8b 75 a8             	mov    -0x58(%rbp),%esi
    1120:	4c 8b 5d 98          	mov    -0x68(%rbp),%r11
    1124:	b9 20 00 00 00       	mov    $0x20,%ecx
    1129:	e9 c4 fe ff ff       	jmp    ff2 <_ftoa+0x272>
    112e:	66 90                	xchg   %ax,%ax
    1130:	d9 c0                	fld    %st(0)
    1132:	dc 25 00 00 00 00    	fsubl  0x0(%rip)        # 1138 <_ftoa+0x3b8>
			1134: R_X86_64_PC32	.LC28-0x4
    1138:	dd 5d a0             	fstpl  -0x60(%rbp)
    113b:	dd 45 a0             	fldl   -0x60(%rbp)
    113e:	d9 6d ac             	fldcw  -0x54(%rbp)
    1141:	df 7d a0             	fistpll -0x60(%rbp)
    1144:	d9 6d ae             	fldcw  -0x52(%rbp)
    1147:	4c 8b 55 a0          	mov    -0x60(%rbp),%r10
    114b:	49 0f ba fa 3f       	btc    $0x3f,%r10
    1150:	e9 12 fd ff ff       	jmp    e67 <_ftoa+0xe7>
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	dd db                	fstp   %st(3)
    115a:	d9 c9                	fxch   %st(1)
    115c:	d9 ca                	fxch   %st(2)
    115e:	d9 c9                	fxch   %st(1)
    1160:	df f1                	fcomip %st(1),%st
    1162:	dd d8                	fstp   %st(0)
    1164:	0f 87 54 fd ff ff    	ja     ebe <_ftoa+0x13e>
    116a:	4d 85 d2             	test   %r10,%r10
    116d:	0f 85 cd 00 00 00    	jne    1240 <_ftoa+0x4c0>
    1173:	49 83 c2 01          	add    $0x1,%r10
    1177:	e9 42 fd ff ff       	jmp    ebe <_ftoa+0x13e>
    117c:	0f 1f 40 00          	nopl   0x0(%rax)
    1180:	44 89 e8             	mov    %r13d,%eax
    1183:	83 e0 03             	and    $0x3,%eax
    1186:	83 f8 01             	cmp    $0x1,%eax
    1189:	0f 84 f1 00 00 00    	je     1280 <_ftoa+0x500>
    118f:	48 83 f9 20          	cmp    $0x20,%rcx
    1193:	0f 84 b7 fe ff ff    	je     1050 <_ftoa+0x2d0>
    1199:	45 84 f6             	test   %r14b,%r14b
    119c:	74 72                	je     1210 <_ftoa+0x490>
    119e:	c6 44 0d b0 2d       	movb   $0x2d,-0x50(%rbp,%rcx,1)
    11a3:	48 83 c1 01          	add    $0x1,%rcx
    11a7:	e9 a4 fe ff ff       	jmp    1050 <_ftoa+0x2d0>
    11ac:	0f 1f 40 00          	nopl   0x0(%rax)
    11b0:	4c 89 da             	mov    %r11,%rdx
    11b3:	44 0f b6 75 a0       	movzbl -0x60(%rbp),%r14d
    11b8:	8b 75 a8             	mov    -0x58(%rbp),%esi
    11bb:	4c 8b 5d 98          	mov    -0x68(%rbp),%r11
    11bf:	48 83 ff 20          	cmp    $0x20,%rdi
    11c3:	0f 84 5b ff ff ff    	je     1124 <_ftoa+0x3a4>
    11c9:	41 8d 40 fe          	lea    -0x2(%r8),%eax
    11cd:	48 8d 44 01 02       	lea    0x2(%rcx,%rax,1),%rax
    11d2:	45 85 ff             	test   %r15d,%r15d
    11d5:	0f 84 8d 00 00 00    	je     1268 <_ftoa+0x4e8>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    11e0:	48 83 c7 01          	add    $0x1,%rdi
    11e4:	c6 44 3d af 30       	movb   $0x30,-0x51(%rbp,%rdi,1)
    11e9:	48 83 ff 20          	cmp    $0x20,%rdi
    11ed:	0f 84 31 ff ff ff    	je     1124 <_ftoa+0x3a4>
    11f3:	48 39 c7             	cmp    %rax,%rdi
    11f6:	75 e8                	jne    11e0 <_ftoa+0x460>
    11f8:	c6 44 05 b0 2e       	movb   $0x2e,-0x50(%rbp,%rax,1)
    11fd:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1201:	e9 ec fd ff ff       	jmp    ff2 <_ftoa+0x272>
    1206:	48 83 f9 20          	cmp    $0x20,%rcx
    120a:	0f 84 40 fe ff ff    	je     1050 <_ftoa+0x2d0>
    1210:	41 f6 c5 04          	test   $0x4,%r13b
    1214:	75 1a                	jne    1230 <_ftoa+0x4b0>
    1216:	41 f6 c5 08          	test   $0x8,%r13b
    121a:	0f 84 30 fe ff ff    	je     1050 <_ftoa+0x2d0>
    1220:	c6 44 0d b0 20       	movb   $0x20,-0x50(%rbp,%rcx,1)
    1225:	48 83 c1 01          	add    $0x1,%rcx
    1229:	e9 22 fe ff ff       	jmp    1050 <_ftoa+0x2d0>
    122e:	66 90                	xchg   %ax,%ax
    1230:	c6 44 0d b0 2b       	movb   $0x2b,-0x50(%rbp,%rcx,1)
    1235:	48 83 c1 01          	add    $0x1,%rcx
    1239:	e9 12 fe ff ff       	jmp    1050 <_ftoa+0x2d0>
    123e:	66 90                	xchg   %ax,%ax
    1240:	41 f6 c2 01          	test   $0x1,%r10b
    1244:	0f 84 74 fc ff ff    	je     ebe <_ftoa+0x13e>
    124a:	e9 24 ff ff ff       	jmp    1173 <_ftoa+0x3f3>
    124f:	90                   	nop
    1250:	41 8d 71 ff          	lea    -0x1(%r9),%esi
    1254:	49 89 f1             	mov    %rsi,%r9
    1257:	48 39 f1             	cmp    %rsi,%rcx
    125a:	0f 82 c7 fd ff ff    	jb     1027 <_ftoa+0x2a7>
    1260:	e9 2a ff ff ff       	jmp    118f <_ftoa+0x40f>
    1265:	0f 1f 00             	nopl   (%rax)
    1268:	48 89 f8             	mov    %rdi,%rax
    126b:	eb 8b                	jmp    11f8 <_ftoa+0x478>
    126d:	44 89 c0             	mov    %r8d,%eax
    1270:	31 c9                	xor    %ecx,%ecx
    1272:	dd 04 c5 00 00 00 00 	fldl   0x0(,%rax,8)
			1275: R_X86_64_32S	.rodata+0x4c0
    1279:	d9 c9                	fxch   %st(1)
    127b:	e9 97 fb ff ff       	jmp    e17 <_ftoa+0x97>
    1280:	45 85 c9             	test   %r9d,%r9d
    1283:	0f 84 06 ff ff ff    	je     118f <_ftoa+0x40f>
    1289:	e9 7a fd ff ff       	jmp    1008 <_ftoa+0x288>
    128e:	66 90                	xchg   %ax,%ax

0000000000001290 <_out_char>:
    1290:	40 84 ff             	test   %dil,%dil
    1293:	75 0b                	jne    12a0 <_out_char+0x10>
    1295:	c3                   	ret    
    1296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    129d:	00 00 00 
    12a0:	40 0f be ff          	movsbl %dil,%edi
    12a4:	e9 00 00 00 00       	jmp    12a9 <_out_char+0x19>
			12a5: R_X86_64_PLT32	term_put_char-0x4
    12a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012b0 <_out_fct>:
    12b0:	40 84 ff             	test   %dil,%dil
    12b3:	74 13                	je     12c8 <_out_fct+0x18>
    12b5:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    12b9:	48 8b 06             	mov    (%rsi),%rax
    12bc:	40 0f be ff          	movsbl %dil,%edi
    12c0:	48 89 d6             	mov    %rdx,%rsi
    12c3:	ff e0                	jmp    *%rax
    12c5:	0f 1f 00             	nopl   (%rax)
    12c8:	c3                   	ret    
    12c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012d0 <_vsnprintf>:
    12d0:	55                   	push   %rbp
    12d1:	48 89 e5             	mov    %rsp,%rbp
    12d4:	41 57                	push   %r15
    12d6:	41 56                	push   %r14
    12d8:	41 55                	push   %r13
    12da:	41 54                	push   %r12
    12dc:	53                   	push   %rbx
    12dd:	48 89 cb             	mov    %rcx,%rbx
    12e0:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			12e3: R_X86_64_32S	.text+0x460
    12e7:	48 83 ec 48          	sub    $0x48,%rsp
    12eb:	48 85 f6             	test   %rsi,%rsi
    12ee:	48 0f 45 cf          	cmovne %rdi,%rcx
    12f2:	45 31 ed             	xor    %r13d,%r13d
    12f5:	49 89 cf             	mov    %rcx,%r15
    12f8:	0f b6 0b             	movzbl (%rbx),%ecx
    12fb:	84 c9                	test   %cl,%cl
    12fd:	0f 84 c2 07 00 00    	je     1ac5 <_vsnprintf+0x7f5>
    1303:	49 89 d6             	mov    %rdx,%r14
    1306:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    130a:	49 89 f4             	mov    %rsi,%r12
    130d:	4c 89 ea             	mov    %r13,%rdx
    1310:	eb 24                	jmp    1336 <_vsnprintf+0x66>
    1312:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1318:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    131c:	0f be f9             	movsbl %cl,%edi
    131f:	4c 89 e6             	mov    %r12,%rsi
    1322:	4c 89 f1             	mov    %r14,%rcx
    1325:	41 ff d7             	call   *%r15
    1328:	4c 89 ea             	mov    %r13,%rdx
    132b:	0f b6 0b             	movzbl (%rbx),%ecx
    132e:	84 c9                	test   %cl,%cl
    1330:	0f 84 1a 01 00 00    	je     1450 <_vsnprintf+0x180>
    1336:	48 83 c3 01          	add    $0x1,%rbx
    133a:	80 f9 25             	cmp    $0x25,%cl
    133d:	75 d9                	jne    1318 <_vsnprintf+0x48>
    133f:	31 ff                	xor    %edi,%edi
    1341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1348:	0f be 03             	movsbl (%rbx),%eax
    134b:	48 8d 73 01          	lea    0x1(%rbx),%rsi
    134f:	8d 48 e0             	lea    -0x20(%rax),%ecx
    1352:	80 f9 10             	cmp    $0x10,%cl
    1355:	77 11                	ja     1368 <_vsnprintf+0x98>
    1357:	0f b6 c9             	movzbl %cl,%ecx
    135a:	ff 24 cd 00 00 00 00 	jmp    *0x0(,%rcx,8)
			135d: R_X86_64_32S	.rodata+0x180
    1361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1368:	8d 48 d0             	lea    -0x30(%rax),%ecx
    136b:	80 f9 09             	cmp    $0x9,%cl
    136e:	0f 86 14 01 00 00    	jbe    1488 <_vsnprintf+0x1b8>
    1374:	45 31 c9             	xor    %r9d,%r9d
    1377:	3c 2a                	cmp    $0x2a,%al
    1379:	0f 84 91 01 00 00    	je     1510 <_vsnprintf+0x240>
    137f:	45 31 c0             	xor    %r8d,%r8d
    1382:	3c 2e                	cmp    $0x2e,%al
    1384:	0f 84 2d 01 00 00    	je     14b7 <_vsnprintf+0x1e7>
    138a:	8d 48 98             	lea    -0x68(%rax),%ecx
    138d:	80 f9 12             	cmp    $0x12,%cl
    1390:	77 4c                	ja     13de <_vsnprintf+0x10e>
    1392:	0f b6 c9             	movzbl %cl,%ecx
    1395:	ff 24 cd 00 00 00 00 	jmp    *0x0(,%rcx,8)
			1398: R_X86_64_32S	.rodata+0x208
    139c:	0f 1f 40 00          	nopl   0x0(%rax)
    13a0:	83 cf 01             	or     $0x1,%edi
    13a3:	48 89 f3             	mov    %rsi,%rbx
    13a6:	eb a0                	jmp    1348 <_vsnprintf+0x78>
    13a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    13af:	00 
    13b0:	83 cf 02             	or     $0x2,%edi
    13b3:	eb ee                	jmp    13a3 <_vsnprintf+0xd3>
    13b5:	0f 1f 00             	nopl   (%rax)
    13b8:	83 cf 04             	or     $0x4,%edi
    13bb:	eb e6                	jmp    13a3 <_vsnprintf+0xd3>
    13bd:	0f 1f 00             	nopl   (%rax)
    13c0:	83 cf 10             	or     $0x10,%edi
    13c3:	eb de                	jmp    13a3 <_vsnprintf+0xd3>
    13c5:	0f 1f 00             	nopl   (%rax)
    13c8:	83 cf 08             	or     $0x8,%edi
    13cb:	eb d6                	jmp    13a3 <_vsnprintf+0xd3>
    13cd:	0f 1f 00             	nopl   (%rax)
    13d0:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    13d4:	81 cf 00 01 00 00    	or     $0x100,%edi
    13da:	48 83 c6 01          	add    $0x1,%rsi
    13de:	48 89 f3             	mov    %rsi,%rbx
    13e1:	3c 67                	cmp    $0x67,%al
    13e3:	7f 1b                	jg     1400 <_vsnprintf+0x130>
    13e5:	3c 24                	cmp    $0x24,%al
    13e7:	7e 45                	jle    142e <_vsnprintf+0x15e>
    13e9:	8d 48 db             	lea    -0x25(%rax),%ecx
    13ec:	80 f9 42             	cmp    $0x42,%cl
    13ef:	77 3d                	ja     142e <_vsnprintf+0x15e>
    13f1:	0f b6 c9             	movzbl %cl,%ecx
    13f4:	ff 24 cd 00 00 00 00 	jmp    *0x0(,%rcx,8)
			13f7: R_X86_64_32S	.rodata+0x2a0
    13fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1400:	8d 48 97             	lea    -0x69(%rax),%ecx
    1403:	80 f9 0f             	cmp    $0xf,%cl
    1406:	77 26                	ja     142e <_vsnprintf+0x15e>
    1408:	be 01 00 00 00       	mov    $0x1,%esi
    140d:	48 d3 e6             	shl    %cl,%rsi
    1410:	f7 c6 41 90 00 00    	test   $0x9041,%esi
    1416:	0f 85 d4 05 00 00    	jne    19f0 <_vsnprintf+0x720>
    141c:	80 f9 0a             	cmp    $0xa,%cl
    141f:	0f 84 17 03 00 00    	je     173c <_vsnprintf+0x46c>
    1425:	80 f9 07             	cmp    $0x7,%cl
    1428:	0f 84 c7 02 00 00    	je     16f5 <_vsnprintf+0x425>
    142e:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    1432:	0f be f8             	movsbl %al,%edi
    1435:	4c 89 f1             	mov    %r14,%rcx
    1438:	4c 89 e6             	mov    %r12,%rsi
    143b:	41 ff d7             	call   *%r15
    143e:	0f b6 0b             	movzbl (%rbx),%ecx
    1441:	4c 89 ea             	mov    %r13,%rdx
    1444:	84 c9                	test   %cl,%cl
    1446:	0f 85 ea fe ff ff    	jne    1336 <_vsnprintf+0x66>
    144c:	0f 1f 40 00          	nopl   0x0(%rax)
    1450:	49 89 d5             	mov    %rdx,%r13
    1453:	4c 89 e6             	mov    %r12,%rsi
    1456:	4c 89 f2             	mov    %r14,%rdx
    1459:	44 89 eb             	mov    %r13d,%ebx
    145c:	49 39 d5             	cmp    %rdx,%r13
    145f:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    1463:	4c 0f 43 e9          	cmovae %rcx,%r13
    1467:	48 89 d1             	mov    %rdx,%rcx
    146a:	31 ff                	xor    %edi,%edi
    146c:	4c 89 ea             	mov    %r13,%rdx
    146f:	41 ff d7             	call   *%r15
    1472:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1476:	89 d8                	mov    %ebx,%eax
    1478:	5b                   	pop    %rbx
    1479:	41 5c                	pop    %r12
    147b:	41 5d                	pop    %r13
    147d:	41 5e                	pop    %r14
    147f:	41 5f                	pop    %r15
    1481:	5d                   	pop    %rbp
    1482:	c3                   	ret    
    1483:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1488:	45 31 c9             	xor    %r9d,%r9d
    148b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1490:	43 8d 0c 89          	lea    (%r9,%r9,4),%ecx
    1494:	48 89 f3             	mov    %rsi,%rbx
    1497:	48 83 c6 01          	add    $0x1,%rsi
    149b:	44 8d 4c 48 d0       	lea    -0x30(%rax,%rcx,2),%r9d
    14a0:	0f be 46 ff          	movsbl -0x1(%rsi),%eax
    14a4:	8d 48 d0             	lea    -0x30(%rax),%ecx
    14a7:	80 f9 09             	cmp    $0x9,%cl
    14aa:	76 e4                	jbe    1490 <_vsnprintf+0x1c0>
    14ac:	45 31 c0             	xor    %r8d,%r8d
    14af:	3c 2e                	cmp    $0x2e,%al
    14b1:	0f 85 d3 fe ff ff    	jne    138a <_vsnprintf+0xba>
    14b7:	0f be 43 01          	movsbl 0x1(%rbx),%eax
    14bb:	48 89 f1             	mov    %rsi,%rcx
    14be:	81 cf 00 04 00 00    	or     $0x400,%edi
    14c4:	44 8d 58 d0          	lea    -0x30(%rax),%r11d
    14c8:	41 80 fb 09          	cmp    $0x9,%r11b
    14cc:	76 1a                	jbe    14e8 <_vsnprintf+0x218>
    14ce:	3c 2a                	cmp    $0x2a,%al
    14d0:	0f 84 cd 03 00 00    	je     18a3 <_vsnprintf+0x5d3>
    14d6:	48 89 f3             	mov    %rsi,%rbx
    14d9:	48 83 c6 01          	add    $0x1,%rsi
    14dd:	e9 a8 fe ff ff       	jmp    138a <_vsnprintf+0xba>
    14e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14e8:	43 8d 34 80          	lea    (%r8,%r8,4),%esi
    14ec:	48 83 c1 01          	add    $0x1,%rcx
    14f0:	44 8d 44 70 d0       	lea    -0x30(%rax,%rsi,2),%r8d
    14f5:	0f be 01             	movsbl (%rcx),%eax
    14f8:	8d 70 d0             	lea    -0x30(%rax),%esi
    14fb:	40 80 fe 09          	cmp    $0x9,%sil
    14ff:	76 e7                	jbe    14e8 <_vsnprintf+0x218>
    1501:	48 89 cb             	mov    %rcx,%rbx
    1504:	48 8d 71 01          	lea    0x1(%rcx),%rsi
    1508:	e9 7d fe ff ff       	jmp    138a <_vsnprintf+0xba>
    150d:	0f 1f 00             	nopl   (%rax)
    1510:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1514:	41 8b 02             	mov    (%r10),%eax
    1517:	83 f8 2f             	cmp    $0x2f,%eax
    151a:	77 34                	ja     1550 <_vsnprintf+0x280>
    151c:	89 c1                	mov    %eax,%ecx
    151e:	83 c0 08             	add    $0x8,%eax
    1521:	49 03 4a 10          	add    0x10(%r10),%rcx
    1525:	41 89 02             	mov    %eax,(%r10)
    1528:	44 8b 09             	mov    (%rcx),%r9d
    152b:	45 85 c9             	test   %r9d,%r9d
    152e:	79 06                	jns    1536 <_vsnprintf+0x266>
    1530:	83 cf 02             	or     $0x2,%edi
    1533:	41 f7 d9             	neg    %r9d
    1536:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    153a:	48 89 f3             	mov    %rsi,%rbx
    153d:	48 83 c6 01          	add    $0x1,%rsi
    1541:	e9 39 fe ff ff       	jmp    137f <_vsnprintf+0xaf>
    1546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    154d:	00 00 00 
    1550:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1554:	49 8b 4b 08          	mov    0x8(%r11),%rcx
    1558:	48 8d 41 08          	lea    0x8(%rcx),%rax
    155c:	49 89 43 08          	mov    %rax,0x8(%r11)
    1560:	eb c6                	jmp    1528 <_vsnprintf+0x258>
    1562:	89 c6                	mov    %eax,%esi
    1564:	89 f9                	mov    %edi,%ecx
    1566:	83 e6 df             	and    $0xffffffdf,%esi
    1569:	80 cd 08             	or     $0x8,%ch
    156c:	40 80 fe 47          	cmp    $0x47,%sil
    1570:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1574:	0f 44 f9             	cmove  %ecx,%edi
    1577:	83 e0 fd             	and    $0xfffffffd,%eax
    157a:	89 f9                	mov    %edi,%ecx
    157c:	83 c9 20             	or     $0x20,%ecx
    157f:	3c 45                	cmp    $0x45,%al
    1581:	8b 46 04             	mov    0x4(%rsi),%eax
    1584:	0f 44 f9             	cmove  %ecx,%edi
    1587:	3d af 00 00 00       	cmp    $0xaf,%eax
    158c:	0f 87 87 03 00 00    	ja     1919 <_vsnprintf+0x649>
    1592:	89 c1                	mov    %eax,%ecx
    1594:	83 c0 10             	add    $0x10,%eax
    1597:	48 03 4e 10          	add    0x10(%rsi),%rcx
    159b:	89 46 04             	mov    %eax,0x4(%rsi)
    159e:	48 83 ec 08          	sub    $0x8,%rsp
    15a2:	0f 12 01             	movlps (%rcx),%xmm0
    15a5:	4c 89 e6             	mov    %r12,%rsi
    15a8:	4c 89 f1             	mov    %r14,%rcx
    15ab:	57                   	push   %rdi
    15ac:	4c 89 ff             	mov    %r15,%rdi
    15af:	e8 7c f3 ff ff       	call   930 <_etoa>
    15b4:	59                   	pop    %rcx
    15b5:	5e                   	pop    %rsi
    15b6:	48 89 c2             	mov    %rax,%rdx
    15b9:	e9 6d fd ff ff       	jmp    132b <_vsnprintf+0x5b>
    15be:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    15c2:	3c 6c                	cmp    $0x6c,%al
    15c4:	0f 84 cf 04 00 00    	je     1a99 <_vsnprintf+0x7c9>
    15ca:	81 cf 00 01 00 00    	or     $0x100,%edi
    15d0:	48 83 c6 01          	add    $0x1,%rsi
    15d4:	e9 05 fe ff ff       	jmp    13de <_vsnprintf+0x10e>
    15d9:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    15dd:	3c 68                	cmp    $0x68,%al
    15df:	0f 84 a3 04 00 00    	je     1a88 <_vsnprintf+0x7b8>
    15e5:	40 80 cf 80          	or     $0x80,%dil
    15e9:	48 83 c6 01          	add    $0x1,%rsi
    15ed:	e9 ec fd ff ff       	jmp    13de <_vsnprintf+0x10e>
    15f2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    15f6:	89 f9                	mov    %edi,%ecx
    15f8:	83 c9 20             	or     $0x20,%ecx
    15fb:	3c 46                	cmp    $0x46,%al
    15fd:	8b 46 04             	mov    0x4(%rsi),%eax
    1600:	0f 44 f9             	cmove  %ecx,%edi
    1603:	3d af 00 00 00       	cmp    $0xaf,%eax
    1608:	0f 87 20 03 00 00    	ja     192e <_vsnprintf+0x65e>
    160e:	89 c1                	mov    %eax,%ecx
    1610:	83 c0 10             	add    $0x10,%eax
    1613:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1617:	89 46 04             	mov    %eax,0x4(%rsi)
    161a:	48 83 ec 08          	sub    $0x8,%rsp
    161e:	0f 12 01             	movlps (%rcx),%xmm0
    1621:	4c 89 e6             	mov    %r12,%rsi
    1624:	4c 89 f1             	mov    %r14,%rcx
    1627:	57                   	push   %rdi
    1628:	4c 89 ff             	mov    %r15,%rdi
    162b:	e8 50 f7 ff ff       	call   d80 <_ftoa>
    1630:	5f                   	pop    %rdi
    1631:	41 58                	pop    %r8
    1633:	48 89 c2             	mov    %rax,%rdx
    1636:	e9 f0 fc ff ff       	jmp    132b <_vsnprintf+0x5b>
    163b:	83 e7 02             	and    $0x2,%edi
    163e:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    1645:	89 7d b8             	mov    %edi,-0x48(%rbp)
    1648:	0f 84 3c 05 00 00    	je     1b8a <_vsnprintf+0x8ba>
    164e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1652:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    1656:	8b 08                	mov    (%rax),%ecx
    1658:	83 f9 2f             	cmp    $0x2f,%ecx
    165b:	0f 87 8e 02 00 00    	ja     18ef <_vsnprintf+0x61f>
    1661:	89 ce                	mov    %ecx,%esi
    1663:	83 c1 08             	add    $0x8,%ecx
    1666:	48 03 70 10          	add    0x10(%rax),%rsi
    166a:	89 08                	mov    %ecx,(%rax)
    166c:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
    1670:	0f be 3e             	movsbl (%rsi),%edi
    1673:	4c 89 f1             	mov    %r14,%rcx
    1676:	4c 89 e6             	mov    %r12,%rsi
    1679:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    167d:	41 ff d7             	call   *%r15
    1680:	8b 55 b8             	mov    -0x48(%rbp),%edx
    1683:	44 8b 4d b0          	mov    -0x50(%rbp),%r9d
    1687:	85 d2                	test   %edx,%edx
    1689:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    168d:	0f 84 ab fd ff ff    	je     143e <_vsnprintf+0x16e>
    1693:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1696:	44 39 c8             	cmp    %r9d,%eax
    1699:	0f 83 9f fd ff ff    	jae    143e <_vsnprintf+0x16e>
    169f:	41 83 e9 01          	sub    $0x1,%r9d
    16a3:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
    16a7:	41 29 c1             	sub    %eax,%r9d
    16aa:	4a 8d 44 0a 02       	lea    0x2(%rdx,%r9,1),%rax
    16af:	48 89 c3             	mov    %rax,%rbx
    16b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    16b8:	4c 89 ea             	mov    %r13,%rdx
    16bb:	49 83 c5 01          	add    $0x1,%r13
    16bf:	4c 89 f1             	mov    %r14,%rcx
    16c2:	4c 89 e6             	mov    %r12,%rsi
    16c5:	bf 20 00 00 00       	mov    $0x20,%edi
    16ca:	41 ff d7             	call   *%r15
    16cd:	49 39 dd             	cmp    %rbx,%r13
    16d0:	75 e6                	jne    16b8 <_vsnprintf+0x3e8>
    16d2:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    16d6:	e9 63 fd ff ff       	jmp    143e <_vsnprintf+0x16e>
    16db:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    16df:	4c 89 f1             	mov    %r14,%rcx
    16e2:	4c 89 e6             	mov    %r12,%rsi
    16e5:	bf 25 00 00 00       	mov    $0x25,%edi
    16ea:	41 ff d7             	call   *%r15
    16ed:	4c 89 ea             	mov    %r13,%rdx
    16f0:	e9 36 fc ff ff       	jmp    132b <_vsnprintf+0x5b>
    16f5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    16f9:	83 cf 21             	or     $0x21,%edi
    16fc:	8b 06                	mov    (%rsi),%eax
    16fe:	83 f8 2f             	cmp    $0x2f,%eax
    1701:	0f 87 d3 01 00 00    	ja     18da <_vsnprintf+0x60a>
    1707:	89 c1                	mov    %eax,%ecx
    1709:	83 c0 08             	add    $0x8,%eax
    170c:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1710:	89 06                	mov    %eax,(%rsi)
    1712:	48 8b 01             	mov    (%rcx),%rax
    1715:	57                   	push   %rdi
    1716:	6a 10                	push   $0x10
    1718:	41 50                	push   %r8
    171a:	6a 10                	push   $0x10
    171c:	45 31 c9             	xor    %r9d,%r9d
    171f:	49 89 c0             	mov    %rax,%r8
    1722:	4c 89 f1             	mov    %r14,%rcx
    1725:	4c 89 e6             	mov    %r12,%rsi
    1728:	4c 89 ff             	mov    %r15,%rdi
    172b:	e8 40 ee ff ff       	call   570 <_ntoa_long>
    1730:	48 83 c4 20          	add    $0x20,%rsp
    1734:	48 89 c2             	mov    %rax,%rdx
    1737:	e9 ef fb ff ff       	jmp    132b <_vsnprintf+0x5b>
    173c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1740:	8b 06                	mov    (%rsi),%eax
    1742:	83 f8 2f             	cmp    $0x2f,%eax
    1745:	0f 87 b9 01 00 00    	ja     1904 <_vsnprintf+0x634>
    174b:	89 c1                	mov    %eax,%ecx
    174d:	83 c0 08             	add    $0x8,%eax
    1750:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1754:	89 06                	mov    %eax,(%rsi)
    1756:	4c 8b 29             	mov    (%rcx),%r13
    1759:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1760:	44 89 c6             	mov    %r8d,%esi
    1763:	45 85 c0             	test   %r8d,%r8d
    1766:	48 0f 44 f0          	cmove  %rax,%rsi
    176a:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    176f:	84 c0                	test   %al,%al
    1771:	0f 84 2f 06 00 00    	je     1da6 <_vsnprintf+0xad6>
    1777:	4c 01 ee             	add    %r13,%rsi
    177a:	4c 89 e9             	mov    %r13,%rcx
    177d:	eb 0a                	jmp    1789 <_vsnprintf+0x4b9>
    177f:	90                   	nop
    1780:	48 39 ce             	cmp    %rcx,%rsi
    1783:	0f 84 23 03 00 00    	je     1aac <_vsnprintf+0x7dc>
    1789:	48 83 c1 01          	add    $0x1,%rcx
    178d:	80 39 00             	cmpb   $0x0,(%rcx)
    1790:	75 ee                	jne    1780 <_vsnprintf+0x4b0>
    1792:	89 ce                	mov    %ecx,%esi
    1794:	44 29 ee             	sub    %r13d,%esi
    1797:	44 39 c6             	cmp    %r8d,%esi
    179a:	44 89 c1             	mov    %r8d,%ecx
    179d:	41 89 fa             	mov    %edi,%r10d
    17a0:	0f 46 ce             	cmovbe %esi,%ecx
    17a3:	41 81 e2 00 04 00 00 	and    $0x400,%r10d
    17aa:	44 89 55 b8          	mov    %r10d,-0x48(%rbp)
    17ae:	0f 45 f1             	cmovne %ecx,%esi
    17b1:	83 e7 02             	and    $0x2,%edi
    17b4:	89 7d a8             	mov    %edi,-0x58(%rbp)
    17b7:	0f 84 4c 03 00 00    	je     1b09 <_vsnprintf+0x839>
    17bd:	84 c0                	test   %al,%al
    17bf:	0f 84 84 00 00 00    	je     1849 <_vsnprintf+0x579>
    17c5:	49 29 d5             	sub    %rdx,%r13
    17c8:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    17cc:	44 8b 65 b8          	mov    -0x48(%rbp),%r12d
    17d0:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    17d4:	44 89 c3             	mov    %r8d,%ebx
    17d7:	4c 89 75 b8          	mov    %r14,-0x48(%rbp)
    17db:	49 89 d6             	mov    %rdx,%r14
    17de:	4c 89 6d b0          	mov    %r13,-0x50(%rbp)
    17e2:	89 75 a4             	mov    %esi,-0x5c(%rbp)
    17e5:	44 89 4d a0          	mov    %r9d,-0x60(%rbp)
    17e9:	eb 08                	jmp    17f3 <_vsnprintf+0x523>
    17eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    17f0:	4d 89 ee             	mov    %r13,%r14
    17f3:	45 85 e4             	test   %r12d,%r12d
    17f6:	74 0d                	je     1805 <_vsnprintf+0x535>
    17f8:	8d 4b ff             	lea    -0x1(%rbx),%ecx
    17fb:	85 db                	test   %ebx,%ebx
    17fd:	0f 84 d3 02 00 00    	je     1ad6 <_vsnprintf+0x806>
    1803:	89 cb                	mov    %ecx,%ebx
    1805:	0f be f8             	movsbl %al,%edi
    1808:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    180c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1810:	4c 89 f2             	mov    %r14,%rdx
    1813:	41 ff d7             	call   *%r15
    1816:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    181a:	4d 8d 6e 01          	lea    0x1(%r14),%r13
    181e:	41 0f b6 44 06 01    	movzbl 0x1(%r14,%rax,1),%eax
    1824:	84 c0                	test   %al,%al
    1826:	75 c8                	jne    17f0 <_vsnprintf+0x520>
    1828:	8b 75 a4             	mov    -0x5c(%rbp),%esi
    182b:	44 8b 4d a0          	mov    -0x60(%rbp),%r9d
    182f:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    1833:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    1837:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    183b:	8b 45 a8             	mov    -0x58(%rbp),%eax
    183e:	85 c0                	test   %eax,%eax
    1840:	0f 84 f8 fb ff ff    	je     143e <_vsnprintf+0x16e>
    1846:	4c 89 ea             	mov    %r13,%rdx
    1849:	44 39 ce             	cmp    %r9d,%esi
    184c:	0f 83 30 03 00 00    	jae    1b82 <_vsnprintf+0x8b2>
    1852:	41 83 e9 01          	sub    $0x1,%r9d
    1856:	48 8d 42 01          	lea    0x1(%rdx),%rax
    185a:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    185e:	41 29 f1             	sub    %esi,%r9d
    1861:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
    1865:	49 89 c4             	mov    %rax,%r12
    1868:	48 89 d3             	mov    %rdx,%rbx
    186b:	4d 8d 2c 01          	lea    (%r9,%rax,1),%r13
    186f:	eb 0b                	jmp    187c <_vsnprintf+0x5ac>
    1871:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1878:	49 83 c4 01          	add    $0x1,%r12
    187c:	48 89 da             	mov    %rbx,%rdx
    187f:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1883:	4c 89 e3             	mov    %r12,%rbx
    1886:	4c 89 f1             	mov    %r14,%rcx
    1889:	bf 20 00 00 00       	mov    $0x20,%edi
    188e:	41 ff d7             	call   *%r15
    1891:	4d 39 ec             	cmp    %r13,%r12
    1894:	75 e2                	jne    1878 <_vsnprintf+0x5a8>
    1896:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    189a:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    189e:	e9 9b fb ff ff       	jmp    143e <_vsnprintf+0x16e>
    18a3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    18a7:	8b 06                	mov    (%rsi),%eax
    18a9:	83 f8 2f             	cmp    $0x2f,%eax
    18ac:	0f 87 42 02 00 00    	ja     1af4 <_vsnprintf+0x824>
    18b2:	89 c1                	mov    %eax,%ecx
    18b4:	83 c0 08             	add    $0x8,%eax
    18b7:	48 03 4e 10          	add    0x10(%rsi),%rcx
    18bb:	89 06                	mov    %eax,(%rsi)
    18bd:	44 8b 01             	mov    (%rcx),%r8d
    18c0:	31 c0                	xor    %eax,%eax
    18c2:	45 85 c0             	test   %r8d,%r8d
    18c5:	44 0f 48 c0          	cmovs  %eax,%r8d
    18c9:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
    18cd:	48 83 c3 02          	add    $0x2,%rbx
    18d1:	48 8d 73 01          	lea    0x1(%rbx),%rsi
    18d5:	e9 b0 fa ff ff       	jmp    138a <_vsnprintf+0xba>
    18da:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    18de:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    18e2:	48 8d 41 08          	lea    0x8(%rcx),%rax
    18e6:	48 89 46 08          	mov    %rax,0x8(%rsi)
    18ea:	e9 23 fe ff ff       	jmp    1712 <_vsnprintf+0x442>
    18ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    18f3:	48 8b 70 08          	mov    0x8(%rax),%rsi
    18f7:	48 8d 4e 08          	lea    0x8(%rsi),%rcx
    18fb:	48 89 48 08          	mov    %rcx,0x8(%rax)
    18ff:	e9 68 fd ff ff       	jmp    166c <_vsnprintf+0x39c>
    1904:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1908:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    190c:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1910:	48 89 46 08          	mov    %rax,0x8(%rsi)
    1914:	e9 3d fe ff ff       	jmp    1756 <_vsnprintf+0x486>
    1919:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    191d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1921:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1925:	48 89 46 08          	mov    %rax,0x8(%rsi)
    1929:	e9 70 fc ff ff       	jmp    159e <_vsnprintf+0x2ce>
    192e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1932:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1936:	48 8d 41 08          	lea    0x8(%rcx),%rax
    193a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    193e:	e9 d7 fc ff ff       	jmp    161a <_vsnprintf+0x34a>
    1943:	89 c1                	mov    %eax,%ecx
    1945:	83 e1 df             	and    $0xffffffdf,%ecx
    1948:	80 f9 58             	cmp    $0x58,%cl
    194b:	0f 84 63 01 00 00    	je     1ab4 <_vsnprintf+0x7e4>
    1951:	3c 62                	cmp    $0x62,%al
    1953:	0f 84 98 02 00 00    	je     1bf1 <_vsnprintf+0x921>
    1959:	83 e7 ef             	and    $0xffffffef,%edi
    195c:	be 0a 00 00 00       	mov    $0xa,%esi
    1961:	3c 69                	cmp    $0x69,%al
    1963:	74 0b                	je     1970 <_vsnprintf+0x6a0>
    1965:	3c 64                	cmp    $0x64,%al
    1967:	0f 85 9e 00 00 00    	jne    1a0b <_vsnprintf+0x73b>
    196d:	0f 1f 00             	nopl   (%rax)
    1970:	89 f9                	mov    %edi,%ecx
    1972:	83 e1 fe             	and    $0xfffffffe,%ecx
    1975:	f7 c7 00 04 00 00    	test   $0x400,%edi
    197b:	0f 45 f9             	cmovne %ecx,%edi
    197e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1982:	41 89 fb             	mov    %edi,%r11d
    1985:	8b 09                	mov    (%rcx),%ecx
    1987:	41 81 e3 00 02 00 00 	and    $0x200,%r11d
    198e:	3c 69                	cmp    $0x69,%al
    1990:	0f 84 7d 00 00 00    	je     1a13 <_vsnprintf+0x743>
    1996:	3c 64                	cmp    $0x64,%al
    1998:	74 79                	je     1a13 <_vsnprintf+0x743>
    199a:	45 85 db             	test   %r11d,%r11d
    199d:	0f 85 d2 02 00 00    	jne    1c75 <_vsnprintf+0x9a5>
    19a3:	f7 c7 00 01 00 00    	test   $0x100,%edi
    19a9:	0f 85 25 03 00 00    	jne    1cd4 <_vsnprintf+0xa04>
    19af:	40 f6 c7 40          	test   $0x40,%dil
    19b3:	0f 85 63 02 00 00    	jne    1c1c <_vsnprintf+0x94c>
    19b9:	40 f6 c7 80          	test   $0x80,%dil
    19bd:	0f 84 7d 03 00 00    	je     1d40 <_vsnprintf+0xa70>
    19c3:	83 f9 2f             	cmp    $0x2f,%ecx
    19c6:	0f 87 4d 04 00 00    	ja     1e19 <_vsnprintf+0xb49>
    19cc:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    19d0:	89 c8                	mov    %ecx,%eax
    19d2:	83 c1 08             	add    $0x8,%ecx
    19d5:	41 89 0b             	mov    %ecx,(%r11)
    19d8:	49 03 43 10          	add    0x10(%r11),%rax
    19dc:	0f b7 00             	movzwl (%rax),%eax
    19df:	57                   	push   %rdi
    19e0:	41 51                	push   %r9
    19e2:	45 31 c9             	xor    %r9d,%r9d
    19e5:	41 50                	push   %r8
    19e7:	41 89 c0             	mov    %eax,%r8d
    19ea:	56                   	push   %rsi
    19eb:	e9 7e 00 00 00       	jmp    1a6e <_vsnprintf+0x79e>
    19f0:	89 c1                	mov    %eax,%ecx
    19f2:	83 e1 df             	and    $0xffffffdf,%ecx
    19f5:	80 f9 58             	cmp    $0x58,%cl
    19f8:	0f 84 ce 00 00 00    	je     1acc <_vsnprintf+0x7fc>
    19fe:	be 08 00 00 00       	mov    $0x8,%esi
    1a03:	3c 6f                	cmp    $0x6f,%al
    1a05:	0f 85 4e ff ff ff    	jne    1959 <_vsnprintf+0x689>
    1a0b:	83 e7 f3             	and    $0xfffffff3,%edi
    1a0e:	e9 5d ff ff ff       	jmp    1970 <_vsnprintf+0x6a0>
    1a13:	45 85 db             	test   %r11d,%r11d
    1a16:	0f 85 21 02 00 00    	jne    1c3d <_vsnprintf+0x96d>
    1a1c:	f7 c7 00 01 00 00    	test   $0x100,%edi
    1a22:	0f 85 74 02 00 00    	jne    1c9c <_vsnprintf+0x9cc>
    1a28:	40 f6 c7 40          	test   $0x40,%dil
    1a2c:	0f 85 c9 01 00 00    	jne    1bfb <_vsnprintf+0x92b>
    1a32:	40 f6 c7 80          	test   $0x80,%dil
    1a36:	0f 84 24 03 00 00    	je     1d60 <_vsnprintf+0xa90>
    1a3c:	83 f9 2f             	cmp    $0x2f,%ecx
    1a3f:	0f 87 a8 03 00 00    	ja     1ded <_vsnprintf+0xb1d>
    1a45:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1a49:	89 c8                	mov    %ecx,%eax
    1a4b:	83 c1 08             	add    $0x8,%ecx
    1a4e:	41 89 0a             	mov    %ecx,(%r10)
    1a51:	49 03 42 10          	add    0x10(%r10),%rax
    1a55:	0f bf 00             	movswl (%rax),%eax
    1a58:	89 c1                	mov    %eax,%ecx
    1a5a:	57                   	push   %rdi
    1a5b:	f7 d9                	neg    %ecx
    1a5d:	41 51                	push   %r9
    1a5f:	0f 48 c8             	cmovs  %eax,%ecx
    1a62:	41 50                	push   %r8
    1a64:	c1 e8 1f             	shr    $0x1f,%eax
    1a67:	56                   	push   %rsi
    1a68:	41 89 c1             	mov    %eax,%r9d
    1a6b:	4c 63 c1             	movslq %ecx,%r8
    1a6e:	4c 89 f1             	mov    %r14,%rcx
    1a71:	4c 89 e6             	mov    %r12,%rsi
    1a74:	4c 89 ff             	mov    %r15,%rdi
    1a77:	e8 f4 ea ff ff       	call   570 <_ntoa_long>
    1a7c:	48 83 c4 20          	add    $0x20,%rsp
    1a80:	48 89 c2             	mov    %rax,%rdx
    1a83:	e9 a3 f8 ff ff       	jmp    132b <_vsnprintf+0x5b>
    1a88:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
    1a8c:	40 80 cf c0          	or     $0xc0,%dil
    1a90:	48 8d 73 03          	lea    0x3(%rbx),%rsi
    1a94:	e9 45 f9 ff ff       	jmp    13de <_vsnprintf+0x10e>
    1a99:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
    1a9d:	81 cf 00 03 00 00    	or     $0x300,%edi
    1aa3:	48 8d 73 03          	lea    0x3(%rbx),%rsi
    1aa7:	e9 32 f9 ff ff       	jmp    13de <_vsnprintf+0x10e>
    1aac:	44 29 ee             	sub    %r13d,%esi
    1aaf:	e9 e3 fc ff ff       	jmp    1797 <_vsnprintf+0x4c7>
    1ab4:	3c 58                	cmp    $0x58,%al
    1ab6:	75 14                	jne    1acc <_vsnprintf+0x7fc>
    1ab8:	83 cf 20             	or     $0x20,%edi
    1abb:	be 10 00 00 00       	mov    $0x10,%esi
    1ac0:	e9 46 ff ff ff       	jmp    1a0b <_vsnprintf+0x73b>
    1ac5:	31 db                	xor    %ebx,%ebx
    1ac7:	e9 90 f9 ff ff       	jmp    145c <_vsnprintf+0x18c>
    1acc:	be 10 00 00 00       	mov    $0x10,%esi
    1ad1:	e9 35 ff ff ff       	jmp    1a0b <_vsnprintf+0x73b>
    1ad6:	4c 89 f2             	mov    %r14,%rdx
    1ad9:	8b 75 a4             	mov    -0x5c(%rbp),%esi
    1adc:	44 8b 4d a0          	mov    -0x60(%rbp),%r9d
    1ae0:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    1ae4:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    1ae8:	49 89 d5             	mov    %rdx,%r13
    1aeb:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    1aef:	e9 47 fd ff ff       	jmp    183b <_vsnprintf+0x56b>
    1af4:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1af8:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1afc:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1b00:	48 89 46 08          	mov    %rax,0x8(%rsi)
    1b04:	e9 b4 fd ff ff       	jmp    18bd <_vsnprintf+0x5ed>
    1b09:	44 39 ce             	cmp    %r9d,%esi
    1b0c:	0f 83 bc 02 00 00    	jae    1dce <_vsnprintf+0xafe>
    1b12:	41 8d 49 ff          	lea    -0x1(%r9),%ecx
    1b16:	48 8d 42 01          	lea    0x1(%rdx),%rax
    1b1a:	4c 89 6d b0          	mov    %r13,-0x50(%rbp)
    1b1e:	29 f1                	sub    %esi,%ecx
    1b20:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    1b24:	49 89 c5             	mov    %rax,%r13
    1b27:	48 89 d3             	mov    %rdx,%rbx
    1b2a:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
    1b2e:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
    1b32:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    1b36:	44 89 45 a0          	mov    %r8d,-0x60(%rbp)
    1b3a:	eb 08                	jmp    1b44 <_vsnprintf+0x874>
    1b3c:	0f 1f 40 00          	nopl   0x0(%rax)
    1b40:	49 83 c5 01          	add    $0x1,%r13
    1b44:	48 89 da             	mov    %rbx,%rdx
    1b47:	4c 89 f1             	mov    %r14,%rcx
    1b4a:	4c 89 eb             	mov    %r13,%rbx
    1b4d:	4c 89 e6             	mov    %r12,%rsi
    1b50:	bf 20 00 00 00       	mov    $0x20,%edi
    1b55:	41 ff d7             	call   *%r15
    1b58:	4c 39 6d c0          	cmp    %r13,-0x40(%rbp)
    1b5c:	75 e2                	jne    1b40 <_vsnprintf+0x870>
    1b5e:	4c 8b 6d b0          	mov    -0x50(%rbp),%r13
    1b62:	44 8b 4d a4          	mov    -0x5c(%rbp),%r9d
    1b66:	48 89 da             	mov    %rbx,%rdx
    1b69:	44 8b 45 a0          	mov    -0x60(%rbp),%r8d
    1b6d:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    1b71:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    1b76:	41 8d 71 01          	lea    0x1(%r9),%esi
    1b7a:	84 c0                	test   %al,%al
    1b7c:	0f 85 43 fc ff ff    	jne    17c5 <_vsnprintf+0x4f5>
    1b82:	49 89 d5             	mov    %rdx,%r13
    1b85:	e9 b4 f8 ff ff       	jmp    143e <_vsnprintf+0x16e>
    1b8a:	41 83 f9 01          	cmp    $0x1,%r9d
    1b8e:	0f 86 2e 02 00 00    	jbe    1dc2 <_vsnprintf+0xaf2>
    1b94:	48 8d 42 01          	lea    0x1(%rdx),%rax
    1b98:	45 8d 69 fe          	lea    -0x2(%r9),%r13d
    1b9c:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    1ba0:	48 89 d3             	mov    %rdx,%rbx
    1ba3:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
    1ba7:	49 01 c5             	add    %rax,%r13
    1baa:	49 89 c4             	mov    %rax,%r12
    1bad:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    1bb1:	eb 09                	jmp    1bbc <_vsnprintf+0x8ec>
    1bb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1bb8:	49 83 c4 01          	add    $0x1,%r12
    1bbc:	48 89 da             	mov    %rbx,%rdx
    1bbf:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1bc3:	4c 89 e3             	mov    %r12,%rbx
    1bc6:	4c 89 f1             	mov    %r14,%rcx
    1bc9:	bf 20 00 00 00       	mov    $0x20,%edi
    1bce:	41 ff d7             	call   *%r15
    1bd1:	4d 39 ec             	cmp    %r13,%r12
    1bd4:	75 e2                	jne    1bb8 <_vsnprintf+0x8e8>
    1bd6:	44 8b 4d b0          	mov    -0x50(%rbp),%r9d
    1bda:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    1bde:	4c 89 e2             	mov    %r12,%rdx
    1be1:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    1be5:	41 8d 41 01          	lea    0x1(%r9),%eax
    1be9:	89 45 a8             	mov    %eax,-0x58(%rbp)
    1bec:	e9 5d fa ff ff       	jmp    164e <_vsnprintf+0x37e>
    1bf1:	be 02 00 00 00       	mov    $0x2,%esi
    1bf6:	e9 10 fe ff ff       	jmp    1a0b <_vsnprintf+0x73b>
    1bfb:	83 f9 2f             	cmp    $0x2f,%ecx
    1bfe:	0f 87 78 01 00 00    	ja     1d7c <_vsnprintf+0xaac>
    1c04:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1c08:	89 c8                	mov    %ecx,%eax
    1c0a:	83 c1 08             	add    $0x8,%ecx
    1c0d:	41 89 0a             	mov    %ecx,(%r10)
    1c10:	49 03 42 10          	add    0x10(%r10),%rax
    1c14:	0f be 00             	movsbl (%rax),%eax
    1c17:	e9 3c fe ff ff       	jmp    1a58 <_vsnprintf+0x788>
    1c1c:	83 f9 2f             	cmp    $0x2f,%ecx
    1c1f:	0f 87 88 01 00 00    	ja     1dad <_vsnprintf+0xadd>
    1c25:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1c29:	89 c8                	mov    %ecx,%eax
    1c2b:	83 c1 08             	add    $0x8,%ecx
    1c2e:	41 89 0b             	mov    %ecx,(%r11)
    1c31:	49 03 43 10          	add    0x10(%r11),%rax
    1c35:	0f b6 00             	movzbl (%rax),%eax
    1c38:	e9 a2 fd ff ff       	jmp    19df <_vsnprintf+0x70f>
    1c3d:	83 f9 2f             	cmp    $0x2f,%ecx
    1c40:	0f 87 d0 00 00 00    	ja     1d16 <_vsnprintf+0xa46>
    1c46:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1c4a:	89 c8                	mov    %ecx,%eax
    1c4c:	83 c1 08             	add    $0x8,%ecx
    1c4f:	41 89 0a             	mov    %ecx,(%r10)
    1c52:	49 03 42 10          	add    0x10(%r10),%rax
    1c56:	48 8b 00             	mov    (%rax),%rax
    1c59:	57                   	push   %rdi
    1c5a:	41 51                	push   %r9
    1c5c:	49 89 c1             	mov    %rax,%r9
    1c5f:	41 50                	push   %r8
    1c61:	49 89 c0             	mov    %rax,%r8
    1c64:	49 c1 e9 3f          	shr    $0x3f,%r9
    1c68:	49 f7 d8             	neg    %r8
    1c6b:	56                   	push   %rsi
    1c6c:	4c 0f 48 c0          	cmovs  %rax,%r8
    1c70:	e9 ad fa ff ff       	jmp    1722 <_vsnprintf+0x452>
    1c75:	83 f9 2f             	cmp    $0x2f,%ecx
    1c78:	0f 87 83 00 00 00    	ja     1d01 <_vsnprintf+0xa31>
    1c7e:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1c82:	89 c8                	mov    %ecx,%eax
    1c84:	83 c1 08             	add    $0x8,%ecx
    1c87:	41 89 0a             	mov    %ecx,(%r10)
    1c8a:	49 03 42 10          	add    0x10(%r10),%rax
    1c8e:	48 8b 00             	mov    (%rax),%rax
    1c91:	57                   	push   %rdi
    1c92:	41 51                	push   %r9
    1c94:	41 50                	push   %r8
    1c96:	56                   	push   %rsi
    1c97:	e9 80 fa ff ff       	jmp    171c <_vsnprintf+0x44c>
    1c9c:	83 f9 2f             	cmp    $0x2f,%ecx
    1c9f:	0f 87 86 00 00 00    	ja     1d2b <_vsnprintf+0xa5b>
    1ca5:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1ca9:	89 c8                	mov    %ecx,%eax
    1cab:	83 c1 08             	add    $0x8,%ecx
    1cae:	41 89 0a             	mov    %ecx,(%r10)
    1cb1:	49 03 42 10          	add    0x10(%r10),%rax
    1cb5:	48 8b 00             	mov    (%rax),%rax
    1cb8:	57                   	push   %rdi
    1cb9:	41 51                	push   %r9
    1cbb:	49 89 c1             	mov    %rax,%r9
    1cbe:	41 50                	push   %r8
    1cc0:	49 89 c0             	mov    %rax,%r8
    1cc3:	49 c1 e9 3f          	shr    $0x3f,%r9
    1cc7:	49 f7 d8             	neg    %r8
    1cca:	56                   	push   %rsi
    1ccb:	4c 0f 48 c0          	cmovs  %rax,%r8
    1ccf:	e9 9a fd ff ff       	jmp    1a6e <_vsnprintf+0x79e>
    1cd4:	83 f9 2f             	cmp    $0x2f,%ecx
    1cd7:	0f 87 b4 00 00 00    	ja     1d91 <_vsnprintf+0xac1>
    1cdd:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1ce1:	89 c8                	mov    %ecx,%eax
    1ce3:	83 c1 08             	add    $0x8,%ecx
    1ce6:	41 89 0b             	mov    %ecx,(%r11)
    1ce9:	49 03 43 10          	add    0x10(%r11),%rax
    1ced:	48 8b 00             	mov    (%rax),%rax
    1cf0:	57                   	push   %rdi
    1cf1:	41 51                	push   %r9
    1cf3:	45 31 c9             	xor    %r9d,%r9d
    1cf6:	41 50                	push   %r8
    1cf8:	49 89 c0             	mov    %rax,%r8
    1cfb:	56                   	push   %rsi
    1cfc:	e9 6d fd ff ff       	jmp    1a6e <_vsnprintf+0x79e>
    1d01:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d05:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d09:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d0d:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d11:	e9 78 ff ff ff       	jmp    1c8e <_vsnprintf+0x9be>
    1d16:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d1a:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d1e:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d22:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d26:	e9 2b ff ff ff       	jmp    1c56 <_vsnprintf+0x986>
    1d2b:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d2f:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d33:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d37:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d3b:	e9 75 ff ff ff       	jmp    1cb5 <_vsnprintf+0x9e5>
    1d40:	83 f9 2f             	cmp    $0x2f,%ecx
    1d43:	0f 87 b9 00 00 00    	ja     1e02 <_vsnprintf+0xb32>
    1d49:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1d4d:	89 c8                	mov    %ecx,%eax
    1d4f:	83 c1 08             	add    $0x8,%ecx
    1d52:	49 03 43 10          	add    0x10(%r11),%rax
    1d56:	41 89 0b             	mov    %ecx,(%r11)
    1d59:	8b 00                	mov    (%rax),%eax
    1d5b:	e9 7f fc ff ff       	jmp    19df <_vsnprintf+0x70f>
    1d60:	83 f9 2f             	cmp    $0x2f,%ecx
    1d63:	77 71                	ja     1dd6 <_vsnprintf+0xb06>
    1d65:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d69:	89 c8                	mov    %ecx,%eax
    1d6b:	83 c1 08             	add    $0x8,%ecx
    1d6e:	49 03 42 10          	add    0x10(%r10),%rax
    1d72:	41 89 0a             	mov    %ecx,(%r10)
    1d75:	8b 00                	mov    (%rax),%eax
    1d77:	e9 dc fc ff ff       	jmp    1a58 <_vsnprintf+0x788>
    1d7c:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d80:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d84:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d88:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d8c:	e9 83 fe ff ff       	jmp    1c14 <_vsnprintf+0x944>
    1d91:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d95:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d99:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d9d:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1da1:	e9 47 ff ff ff       	jmp    1ced <_vsnprintf+0xa1d>
    1da6:	31 f6                	xor    %esi,%esi
    1da8:	e9 ea f9 ff ff       	jmp    1797 <_vsnprintf+0x4c7>
    1dad:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1db1:	49 8b 42 08          	mov    0x8(%r10),%rax
    1db5:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1db9:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1dbd:	e9 73 fe ff ff       	jmp    1c35 <_vsnprintf+0x965>
    1dc2:	c7 45 a8 02 00 00 00 	movl   $0x2,-0x58(%rbp)
    1dc9:	e9 80 f8 ff ff       	jmp    164e <_vsnprintf+0x37e>
    1dce:	83 c6 01             	add    $0x1,%esi
    1dd1:	e9 a4 fd ff ff       	jmp    1b7a <_vsnprintf+0x8aa>
    1dd6:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1dda:	49 8b 42 08          	mov    0x8(%r10),%rax
    1dde:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1de2:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1de6:	8b 00                	mov    (%rax),%eax
    1de8:	e9 6b fc ff ff       	jmp    1a58 <_vsnprintf+0x788>
    1ded:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1df1:	49 8b 42 08          	mov    0x8(%r10),%rax
    1df5:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1df9:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1dfd:	e9 53 fc ff ff       	jmp    1a55 <_vsnprintf+0x785>
    1e02:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1e06:	49 8b 42 08          	mov    0x8(%r10),%rax
    1e0a:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1e0e:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1e12:	8b 00                	mov    (%rax),%eax
    1e14:	e9 c6 fb ff ff       	jmp    19df <_vsnprintf+0x70f>
    1e19:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1e1d:	49 8b 42 08          	mov    0x8(%r10),%rax
    1e21:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1e25:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1e29:	e9 ae fb ff ff       	jmp    19dc <_vsnprintf+0x70c>
    1e2e:	66 90                	xchg   %ax,%ax

0000000000001e30 <printf_>:
    1e30:	55                   	push   %rbp
    1e31:	48 89 e5             	mov    %rsp,%rbp
    1e34:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1e3b:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    1e42:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    1e49:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1e50:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1e57:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1e5e:	84 c0                	test   %al,%al
    1e60:	74 20                	je     1e82 <printf_+0x52>
    1e62:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1e66:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1e6a:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1e6e:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1e72:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1e76:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1e7a:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1e7e:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1e82:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1e86:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1e8d:	48 89 f9             	mov    %rdi,%rcx
    1e90:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    1e97:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1e9e:	48 8d b5 37 ff ff ff 	lea    -0xc9(%rbp),%rsi
    1ea5:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1eac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1eaf: R_X86_64_32S	.text+0x1290
    1eb3:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
    1eba:	00 00 00 
    1ebd:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    1ec4:	00 00 00 
    1ec7:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1ece:	e8 fd f3 ff ff       	call   12d0 <_vsnprintf>
    1ed3:	c9                   	leave  
    1ed4:	c3                   	ret    
    1ed5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1edc:	00 00 00 00 

0000000000001ee0 <sprintf_>:
    1ee0:	55                   	push   %rbp
    1ee1:	48 89 e5             	mov    %rsp,%rbp
    1ee4:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1eeb:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    1ef2:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1ef9:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1f00:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1f07:	84 c0                	test   %al,%al
    1f09:	74 20                	je     1f2b <sprintf_+0x4b>
    1f0b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1f0f:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1f13:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1f17:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1f1b:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1f1f:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1f23:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1f27:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1f2b:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1f2f:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1f36:	48 89 f1             	mov    %rsi,%rcx
    1f39:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    1f40:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1f47:	48 89 fe             	mov    %rdi,%rsi
    1f4a:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1f51:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f54: R_X86_64_32S	.text+0x450
    1f58:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    1f5f:	00 00 00 
    1f62:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    1f69:	00 00 00 
    1f6c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1f73:	e8 58 f3 ff ff       	call   12d0 <_vsnprintf>
    1f78:	c9                   	leave  
    1f79:	c3                   	ret    
    1f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001f80 <snprintf_>:
    1f80:	55                   	push   %rbp
    1f81:	48 89 e5             	mov    %rsp,%rbp
    1f84:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1f8b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1f92:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1f99:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1fa0:	84 c0                	test   %al,%al
    1fa2:	74 20                	je     1fc4 <snprintf_+0x44>
    1fa4:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1fa8:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1fac:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1fb0:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1fb4:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1fb8:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1fbc:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1fc0:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1fc4:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1fc8:	48 89 d1             	mov    %rdx,%rcx
    1fcb:	48 89 f2             	mov    %rsi,%rdx
    1fce:	48 89 fe             	mov    %rdi,%rsi
    1fd1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1fd8:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1fdf:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1fe6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fe9: R_X86_64_32S	.text+0x450
    1fed:	c7 85 38 ff ff ff 18 	movl   $0x18,-0xc8(%rbp)
    1ff4:	00 00 00 
    1ff7:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    1ffe:	00 00 00 
    2001:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    2008:	e8 c3 f2 ff ff       	call   12d0 <_vsnprintf>
    200d:	c9                   	leave  
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <vprintf_>:
    2010:	55                   	push   %rbp
    2011:	48 89 f9             	mov    %rdi,%rcx
    2014:	49 89 f0             	mov    %rsi,%r8
    2017:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    201e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2021: R_X86_64_32S	.text+0x1290
    2025:	48 89 e5             	mov    %rsp,%rbp
    2028:	48 83 ec 10          	sub    $0x10,%rsp
    202c:	48 8d 75 ff          	lea    -0x1(%rbp),%rsi
    2030:	e8 9b f2 ff ff       	call   12d0 <_vsnprintf>
    2035:	c9                   	leave  
    2036:	c3                   	ret    
    2037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    203e:	00 00 

0000000000002040 <vsnprintf_>:
    2040:	49 89 c8             	mov    %rcx,%r8
    2043:	48 89 d1             	mov    %rdx,%rcx
    2046:	48 89 f2             	mov    %rsi,%rdx
    2049:	48 89 fe             	mov    %rdi,%rsi
    204c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			204f: R_X86_64_32S	.text+0x450
    2053:	e9 78 f2 ff ff       	jmp    12d0 <_vsnprintf>
    2058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    205f:	00 

0000000000002060 <fctprintf>:
    2060:	55                   	push   %rbp
    2061:	48 89 e5             	mov    %rsp,%rbp
    2064:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    206b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    2072:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    2079:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    2080:	84 c0                	test   %al,%al
    2082:	74 20                	je     20a4 <fctprintf+0x44>
    2084:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    2088:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    208c:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    2090:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    2094:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    2098:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    209c:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    20a0:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    20a4:	48 8d 45 10          	lea    0x10(%rbp),%rax
    20a8:	48 89 bd 20 ff ff ff 	mov    %rdi,-0xe0(%rbp)
    20af:	48 89 d1             	mov    %rdx,%rcx
    20b2:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    20b9:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    20c0:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    20c7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    20ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d1: R_X86_64_32S	.text+0x12b0
    20d5:	48 89 b5 28 ff ff ff 	mov    %rsi,-0xd8(%rbp)
    20dc:	48 8d b5 20 ff ff ff 	lea    -0xe0(%rbp),%rsi
    20e3:	c7 85 38 ff ff ff 18 	movl   $0x18,-0xc8(%rbp)
    20ea:	00 00 00 
    20ed:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    20f4:	00 00 00 
    20f7:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    20fe:	e8 cd f1 ff ff       	call   12d0 <_vsnprintf>
    2103:	c9                   	leave  
    2104:	c3                   	ret    
    2105:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    210c:	00 00 00 00 

0000000000002110 <_putchar>:
    2110:	40 0f be ff          	movsbl %dil,%edi
    2114:	e9 00 00 00 00       	jmp    2119 <_putchar+0x9>
			2115: R_X86_64_PLT32	term_put_char-0x4
    2119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002120 <malloc>:
    2120:	55                   	push   %rbp
    2121:	48 89 e5             	mov    %rsp,%rbp
    2124:	e8 00 00 00 00       	call   2129 <malloc+0x9>
			2125: R_X86_64_PLT32	kmalloc-0x4
    2129:	5d                   	pop    %rbp
    212a:	48 98                	cltq   
    212c:	c3                   	ret    
    212d:	0f 1f 00             	nopl   (%rax)

0000000000002130 <free>:
    2130:	e9 00 00 00 00       	jmp    2135 <free+0x5>
			2131: R_X86_64_PLT32	kfree-0x4
    2135:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    213c:	00 00 00 
    213f:	90                   	nop

0000000000002140 <asprintf>:
    2140:	55                   	push   %rbp
    2141:	48 89 e5             	mov    %rsp,%rbp
    2144:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    214b:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    2152:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    2159:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    2160:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    2167:	84 c0                	test   %al,%al
    2169:	74 20                	je     218b <asprintf+0x4b>
    216b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    216f:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    2173:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    2177:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    217b:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    217f:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    2183:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    2187:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    218b:	48 8d 45 10          	lea    0x10(%rbp),%rax
    218f:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
    2196:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    219d:	00 00 00 
    21a0:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    21a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    21ae:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    21b5:	00 00 00 
    21b8:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    21bf:	e8 00 00 00 00       	call   21c4 <asprintf+0x84>
			21c0: R_X86_64_PLT32	vasprintf-0x4
    21c4:	c9                   	leave  
    21c5:	c3                   	ret    
    21c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21cd:	00 00 00 

00000000000021d0 <putchar>:
    21d0:	55                   	push   %rbp
    21d1:	48 89 e5             	mov    %rsp,%rbp
    21d4:	53                   	push   %rbx
    21d5:	89 fb                	mov    %edi,%ebx
    21d7:	40 0f be ff          	movsbl %dil,%edi
    21db:	48 83 ec 08          	sub    $0x8,%rsp
    21df:	e8 00 00 00 00       	call   21e4 <putchar+0x14>
			21e0: R_X86_64_PLT32	_putchar-0x4
    21e4:	89 d8                	mov    %ebx,%eax
    21e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    21ea:	c9                   	leave  
    21eb:	c3                   	ret    
    21ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000021f0 <puts>:
    21f0:	55                   	push   %rbp
    21f1:	48 89 e5             	mov    %rsp,%rbp
    21f4:	41 55                	push   %r13
    21f6:	41 54                	push   %r12
    21f8:	49 89 fc             	mov    %rdi,%r12
    21fb:	53                   	push   %rbx
    21fc:	48 83 ec 08          	sub    $0x8,%rsp
    2200:	0f be 3f             	movsbl (%rdi),%edi
    2203:	40 84 ff             	test   %dil,%dil
    2206:	74 38                	je     2240 <puts+0x50>
    2208:	31 db                	xor    %ebx,%ebx
    220a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2210:	e8 00 00 00 00       	call   2215 <puts+0x25>
			2211: R_X86_64_PLT32	putchar-0x4
    2215:	49 89 dd             	mov    %rbx,%r13
    2218:	48 83 c3 01          	add    $0x1,%rbx
    221c:	41 0f be 3c 1c       	movsbl (%r12,%rbx,1),%edi
    2221:	40 84 ff             	test   %dil,%dil
    2224:	75 ea                	jne    2210 <puts+0x20>
    2226:	bf 0a 00 00 00       	mov    $0xa,%edi
    222b:	e8 00 00 00 00       	call   2230 <puts+0x40>
			222c: R_X86_64_PLT32	putchar-0x4
    2230:	48 83 c4 08          	add    $0x8,%rsp
    2234:	41 8d 45 02          	lea    0x2(%r13),%eax
    2238:	5b                   	pop    %rbx
    2239:	41 5c                	pop    %r12
    223b:	41 5d                	pop    %r13
    223d:	5d                   	pop    %rbp
    223e:	c3                   	ret    
    223f:	90                   	nop
    2240:	48 83 c4 08          	add    $0x8,%rsp
    2244:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2249:	5b                   	pop    %rbx
    224a:	41 5c                	pop    %r12
    224c:	41 5d                	pop    %r13
    224e:	5d                   	pop    %rbp
    224f:	c3                   	ret    

0000000000002250 <vasprintf>:
    2250:	55                   	push   %rbp
    2251:	48 89 e5             	mov    %rsp,%rbp
    2254:	41 56                	push   %r14
    2256:	49 89 d6             	mov    %rdx,%r14
    2259:	41 55                	push   %r13
    225b:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    225f:	49 89 fd             	mov    %rdi,%r13
    2262:	31 ff                	xor    %edi,%edi
    2264:	41 54                	push   %r12
    2266:	49 89 f4             	mov    %rsi,%r12
    2269:	53                   	push   %rbx
    226a:	48 83 ec 20          	sub    $0x20,%rsp
    226e:	48 8b 02             	mov    (%rdx),%rax
    2271:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2275:	48 8b 42 08          	mov    0x8(%rdx),%rax
    2279:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    227d:	48 8b 42 10          	mov    0x10(%rdx),%rax
    2281:	48 89 f2             	mov    %rsi,%rdx
    2284:	31 f6                	xor    %esi,%esi
    2286:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    228a:	e8 00 00 00 00       	call   228f <vasprintf+0x3f>
			228b: R_X86_64_PLT32	vsnprintf_-0x4
    228f:	85 c0                	test   %eax,%eax
    2291:	78 3d                	js     22d0 <vasprintf+0x80>
    2293:	48 98                	cltq   
    2295:	48 8d 58 01          	lea    0x1(%rax),%rbx
    2299:	48 89 df             	mov    %rbx,%rdi
    229c:	e8 00 00 00 00       	call   22a1 <vasprintf+0x51>
			229d: R_X86_64_PLT32	malloc-0x4
    22a1:	49 89 45 00          	mov    %rax,0x0(%r13)
    22a5:	48 89 c7             	mov    %rax,%rdi
    22a8:	48 85 c0             	test   %rax,%rax
    22ab:	74 23                	je     22d0 <vasprintf+0x80>
    22ad:	4c 89 f1             	mov    %r14,%rcx
    22b0:	4c 89 e2             	mov    %r12,%rdx
    22b3:	48 89 de             	mov    %rbx,%rsi
    22b6:	e8 00 00 00 00       	call   22bb <vasprintf+0x6b>
			22b7: R_X86_64_PLT32	vsnprintf_-0x4
    22bb:	48 83 c4 20          	add    $0x20,%rsp
    22bf:	5b                   	pop    %rbx
    22c0:	41 5c                	pop    %r12
    22c2:	41 5d                	pop    %r13
    22c4:	41 5e                	pop    %r14
    22c6:	5d                   	pop    %rbp
    22c7:	c3                   	ret    
    22c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    22cf:	00 
    22d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    22d5:	eb e4                	jmp    22bb <vasprintf+0x6b>
    22d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    22de:	00 00 

00000000000022e0 <abs>:
    22e0:	89 f8                	mov    %edi,%eax
    22e2:	f7 d8                	neg    %eax
    22e4:	0f 48 c7             	cmovs  %edi,%eax
    22e7:	c3                   	ret    
    22e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    22ef:	00 

00000000000022f0 <atoi>:
    22f0:	55                   	push   %rbp
    22f1:	48 89 e5             	mov    %rsp,%rbp
    22f4:	41 55                	push   %r13
    22f6:	45 31 ed             	xor    %r13d,%r13d
    22f9:	41 54                	push   %r12
    22fb:	53                   	push   %rbx
    22fc:	48 89 fb             	mov    %rdi,%rbx
    22ff:	48 83 ec 08          	sub    $0x8,%rsp
    2303:	0f b6 07             	movzbl (%rdi),%eax
    2306:	3c 2b                	cmp    $0x2b,%al
    2308:	74 0a                	je     2314 <atoi+0x24>
    230a:	3c 2d                	cmp    $0x2d,%al
    230c:	75 0a                	jne    2318 <atoi+0x28>
    230e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    2314:	48 83 c3 01          	add    $0x1,%rbx
    2318:	45 31 e4             	xor    %r12d,%r12d
    231b:	eb 13                	jmp    2330 <atoi+0x40>
    231d:	0f 1f 00             	nopl   (%rax)
    2320:	0f be 03             	movsbl (%rbx),%eax
    2323:	43 8d 14 a4          	lea    (%r12,%r12,4),%edx
    2327:	48 83 c3 01          	add    $0x1,%rbx
    232b:	44 8d 64 50 d0       	lea    -0x30(%rax,%rdx,2),%r12d
    2330:	0f be 3b             	movsbl (%rbx),%edi
    2333:	e8 00 00 00 00       	call   2338 <atoi+0x48>
			2334: R_X86_64_PLT32	isdigit-0x4
    2338:	85 c0                	test   %eax,%eax
    233a:	75 e4                	jne    2320 <atoi+0x30>
    233c:	44 89 e0             	mov    %r12d,%eax
    233f:	f7 d8                	neg    %eax
    2341:	45 84 ed             	test   %r13b,%r13b
    2344:	44 0f 45 e0          	cmovne %eax,%r12d
    2348:	48 83 c4 08          	add    $0x8,%rsp
    234c:	5b                   	pop    %rbx
    234d:	44 89 e0             	mov    %r12d,%eax
    2350:	41 5c                	pop    %r12
    2352:	41 5d                	pop    %r13
    2354:	5d                   	pop    %rbp
    2355:	c3                   	ret    
    2356:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    235d:	00 00 00 

0000000000002360 <atol>:
    2360:	55                   	push   %rbp
    2361:	48 89 e5             	mov    %rsp,%rbp
    2364:	41 55                	push   %r13
    2366:	41 54                	push   %r12
    2368:	53                   	push   %rbx
    2369:	48 89 fb             	mov    %rdi,%rbx
    236c:	48 83 ec 08          	sub    $0x8,%rsp
    2370:	eb 0a                	jmp    237c <atol+0x1c>
    2372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2378:	48 83 c3 01          	add    $0x1,%rbx
    237c:	0f be 3b             	movsbl (%rbx),%edi
    237f:	e8 00 00 00 00       	call   2384 <atol+0x24>
			2380: R_X86_64_PLT32	isspace-0x4
    2384:	85 c0                	test   %eax,%eax
    2386:	75 f0                	jne    2378 <atol+0x18>
    2388:	0f b6 03             	movzbl (%rbx),%eax
    238b:	45 31 e4             	xor    %r12d,%r12d
    238e:	3c 2b                	cmp    $0x2b,%al
    2390:	74 0a                	je     239c <atol+0x3c>
    2392:	3c 2d                	cmp    $0x2d,%al
    2394:	75 0a                	jne    23a0 <atol+0x40>
    2396:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    239c:	48 83 c3 01          	add    $0x1,%rbx
    23a0:	45 31 ed             	xor    %r13d,%r13d
    23a3:	eb 18                	jmp    23bd <atol+0x5d>
    23a5:	0f 1f 00             	nopl   (%rax)
    23a8:	0f be 03             	movsbl (%rbx),%eax
    23ab:	4b 8d 54 ad 00       	lea    0x0(%r13,%r13,4),%rdx
    23b0:	48 83 c3 01          	add    $0x1,%rbx
    23b4:	83 e8 30             	sub    $0x30,%eax
    23b7:	48 98                	cltq   
    23b9:	4c 8d 2c 50          	lea    (%rax,%rdx,2),%r13
    23bd:	0f be 3b             	movsbl (%rbx),%edi
    23c0:	e8 00 00 00 00       	call   23c5 <atol+0x65>
			23c1: R_X86_64_PLT32	isdigit-0x4
    23c5:	85 c0                	test   %eax,%eax
    23c7:	75 df                	jne    23a8 <atol+0x48>
    23c9:	4c 89 e8             	mov    %r13,%rax
    23cc:	48 f7 d8             	neg    %rax
    23cf:	45 84 e4             	test   %r12b,%r12b
    23d2:	4c 0f 45 e8          	cmovne %rax,%r13
    23d6:	48 83 c4 08          	add    $0x8,%rsp
    23da:	5b                   	pop    %rbx
    23db:	41 5c                	pop    %r12
    23dd:	4c 89 e8             	mov    %r13,%rax
    23e0:	41 5d                	pop    %r13
    23e2:	5d                   	pop    %rbp
    23e3:	c3                   	ret    
    23e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23eb:	00 00 00 
    23ee:	66 90                	xchg   %ax,%ax

00000000000023f0 <atoll>:
    23f0:	55                   	push   %rbp
    23f1:	48 89 e5             	mov    %rsp,%rbp
    23f4:	41 55                	push   %r13
    23f6:	41 54                	push   %r12
    23f8:	53                   	push   %rbx
    23f9:	48 89 fb             	mov    %rdi,%rbx
    23fc:	48 83 ec 08          	sub    $0x8,%rsp
    2400:	eb 0a                	jmp    240c <atoll+0x1c>
    2402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2408:	48 83 c3 01          	add    $0x1,%rbx
    240c:	0f be 3b             	movsbl (%rbx),%edi
    240f:	e8 00 00 00 00       	call   2414 <atoll+0x24>
			2410: R_X86_64_PLT32	isspace-0x4
    2414:	85 c0                	test   %eax,%eax
    2416:	75 f0                	jne    2408 <atoll+0x18>
    2418:	0f b6 03             	movzbl (%rbx),%eax
    241b:	45 31 e4             	xor    %r12d,%r12d
    241e:	3c 2b                	cmp    $0x2b,%al
    2420:	74 0a                	je     242c <atoll+0x3c>
    2422:	3c 2d                	cmp    $0x2d,%al
    2424:	75 0a                	jne    2430 <atoll+0x40>
    2426:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    242c:	48 83 c3 01          	add    $0x1,%rbx
    2430:	45 31 ed             	xor    %r13d,%r13d
    2433:	eb 18                	jmp    244d <atoll+0x5d>
    2435:	0f 1f 00             	nopl   (%rax)
    2438:	0f be 03             	movsbl (%rbx),%eax
    243b:	4b 8d 54 ad 00       	lea    0x0(%r13,%r13,4),%rdx
    2440:	48 83 c3 01          	add    $0x1,%rbx
    2444:	83 e8 30             	sub    $0x30,%eax
    2447:	48 98                	cltq   
    2449:	4c 8d 2c 50          	lea    (%rax,%rdx,2),%r13
    244d:	0f be 3b             	movsbl (%rbx),%edi
    2450:	e8 00 00 00 00       	call   2455 <atoll+0x65>
			2451: R_X86_64_PLT32	isdigit-0x4
    2455:	85 c0                	test   %eax,%eax
    2457:	75 df                	jne    2438 <atoll+0x48>
    2459:	4c 89 e8             	mov    %r13,%rax
    245c:	48 f7 d8             	neg    %rax
    245f:	45 84 e4             	test   %r12b,%r12b
    2462:	4c 0f 45 e8          	cmovne %rax,%r13
    2466:	48 83 c4 08          	add    $0x8,%rsp
    246a:	5b                   	pop    %rbx
    246b:	41 5c                	pop    %r12
    246d:	4c 89 e8             	mov    %r13,%rax
    2470:	41 5d                	pop    %r13
    2472:	5d                   	pop    %rbp
    2473:	c3                   	ret    
    2474:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    247b:	00 00 00 
    247e:	66 90                	xchg   %ax,%ax

0000000000002480 <bsearch>:
    2480:	55                   	push   %rbp
    2481:	48 89 e5             	mov    %rsp,%rbp
    2484:	41 57                	push   %r15
    2486:	41 56                	push   %r14
    2488:	41 55                	push   %r13
    248a:	49 89 f5             	mov    %rsi,%r13
    248d:	41 54                	push   %r12
    248f:	49 89 cc             	mov    %rcx,%r12
    2492:	53                   	push   %rbx
    2493:	48 89 d3             	mov    %rdx,%rbx
    2496:	48 83 ec 18          	sub    $0x18,%rsp
    249a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    249e:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    24a2:	48 85 d2             	test   %rdx,%rdx
    24a5:	75 19                	jne    24c0 <bsearch+0x40>
    24a7:	eb 44                	jmp    24ed <bsearch+0x6d>
    24a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    24b0:	48 83 eb 01          	sub    $0x1,%rbx
    24b4:	4f 8d 2c 27          	lea    (%r15,%r12,1),%r13
    24b8:	48 d1 eb             	shr    %rbx
    24bb:	48 85 db             	test   %rbx,%rbx
    24be:	74 2d                	je     24ed <bsearch+0x6d>
    24c0:	49 89 de             	mov    %rbx,%r14
    24c3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    24c7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    24cb:	49 d1 ee             	shr    %r14
    24ce:	4c 89 f2             	mov    %r14,%rdx
    24d1:	49 0f af d4          	imul   %r12,%rdx
    24d5:	4d 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%r15
    24da:	4c 89 fe             	mov    %r15,%rsi
    24dd:	ff d0                	call   *%rax
    24df:	85 c0                	test   %eax,%eax
    24e1:	74 0d                	je     24f0 <bsearch+0x70>
    24e3:	7f cb                	jg     24b0 <bsearch+0x30>
    24e5:	4c 89 f3             	mov    %r14,%rbx
    24e8:	48 85 db             	test   %rbx,%rbx
    24eb:	75 d3                	jne    24c0 <bsearch+0x40>
    24ed:	45 31 ff             	xor    %r15d,%r15d
    24f0:	48 83 c4 18          	add    $0x18,%rsp
    24f4:	4c 89 f8             	mov    %r15,%rax
    24f7:	5b                   	pop    %rbx
    24f8:	41 5c                	pop    %r12
    24fa:	41 5d                	pop    %r13
    24fc:	41 5e                	pop    %r14
    24fe:	41 5f                	pop    %r15
    2500:	5d                   	pop    %rbp
    2501:	c3                   	ret    
    2502:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2509:	00 00 00 
    250c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002510 <calloc>:
    2510:	55                   	push   %rbp
    2511:	48 89 f8             	mov    %rdi,%rax
    2514:	48 09 f0             	or     %rsi,%rax
    2517:	48 c1 e8 20          	shr    $0x20,%rax
    251b:	48 89 e5             	mov    %rsp,%rbp
    251e:	41 54                	push   %r12
    2520:	53                   	push   %rbx
    2521:	74 0d                	je     2530 <calloc+0x20>
    2523:	48 85 ff             	test   %rdi,%rdi
    2526:	74 08                	je     2530 <calloc+0x20>
    2528:	48 89 f8             	mov    %rdi,%rax
    252b:	48 f7 e6             	mul    %rsi
    252e:	70 30                	jo     2560 <calloc+0x50>
    2530:	48 89 fb             	mov    %rdi,%rbx
    2533:	48 0f af de          	imul   %rsi,%rbx
    2537:	48 89 df             	mov    %rbx,%rdi
    253a:	e8 00 00 00 00       	call   253f <calloc+0x2f>
			253b: R_X86_64_PLT32	malloc-0x4
    253f:	49 89 c4             	mov    %rax,%r12
    2542:	48 85 c0             	test   %rax,%rax
    2545:	74 19                	je     2560 <calloc+0x50>
    2547:	48 89 da             	mov    %rbx,%rdx
    254a:	31 f6                	xor    %esi,%esi
    254c:	48 89 c7             	mov    %rax,%rdi
    254f:	e8 00 00 00 00       	call   2554 <calloc+0x44>
			2550: R_X86_64_PLT32	memset-0x4
    2554:	4c 89 e0             	mov    %r12,%rax
    2557:	5b                   	pop    %rbx
    2558:	41 5c                	pop    %r12
    255a:	5d                   	pop    %rbp
    255b:	c3                   	ret    
    255c:	0f 1f 40 00          	nopl   0x0(%rax)
    2560:	45 31 e4             	xor    %r12d,%r12d
    2563:	eb ef                	jmp    2554 <calloc+0x44>
    2565:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    256c:	00 00 00 
    256f:	90                   	nop

0000000000002570 <div>:
    2570:	89 f8                	mov    %edi,%eax
    2572:	99                   	cltd   
    2573:	f7 fe                	idiv   %esi
    2575:	48 c1 e2 20          	shl    $0x20,%rdx
    2579:	48 09 d0             	or     %rdx,%rax
    257c:	c3                   	ret    
    257d:	0f 1f 00             	nopl   (%rax)

0000000000002580 <heapsort>:
    2580:	55                   	push   %rbp
    2581:	48 89 e5             	mov    %rsp,%rbp
    2584:	41 57                	push   %r15
    2586:	41 56                	push   %r14
    2588:	41 55                	push   %r13
    258a:	41 54                	push   %r12
    258c:	53                   	push   %rbx
    258d:	48 83 ec 48          	sub    $0x48,%rsp
    2591:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    2595:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    2599:	48 83 fe 01          	cmp    $0x1,%rsi
    259d:	0f 86 cc 02 00 00    	jbe    286f <heapsort+0x2ef>
    25a3:	49 89 d6             	mov    %rdx,%r14
    25a6:	48 85 d2             	test   %rdx,%rdx
    25a9:	0f 84 d1 02 00 00    	je     2880 <heapsort+0x300>
    25af:	48 89 d7             	mov    %rdx,%rdi
    25b2:	49 89 f4             	mov    %rsi,%r12
    25b5:	e8 00 00 00 00       	call   25ba <heapsort+0x3a>
			25b6: R_X86_64_PLT32	malloc-0x4
    25ba:	49 89 c5             	mov    %rax,%r13
    25bd:	48 85 c0             	test   %rax,%rax
    25c0:	0f 84 ba 02 00 00    	je     2880 <heapsort+0x300>
    25c6:	4c 89 e0             	mov    %r12,%rax
    25c9:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    25cd:	48 d1 e8             	shr    %rax
    25d0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    25d4:	4c 29 f3             	sub    %r14,%rbx
    25d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    25de:	00 00 
    25e0:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    25e4:	4c 8d 3c 09          	lea    (%rcx,%rcx,1),%r15
    25e8:	4d 39 fc             	cmp    %r15,%r12
    25eb:	0f 82 af 00 00 00    	jb     26a0 <heapsort+0x120>
    25f1:	4c 89 f2             	mov    %r14,%rdx
    25f4:	49 0f af d7          	imul   %r15,%rdx
    25f8:	48 01 da             	add    %rbx,%rdx
    25fb:	4d 39 e7             	cmp    %r12,%r15
    25fe:	72 66                	jb     2666 <heapsort+0xe6>
    2600:	4d 89 f9             	mov    %r15,%r9
    2603:	49 0f af ce          	imul   %r14,%rcx
    2607:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    260b:	48 89 d7             	mov    %rdx,%rdi
    260e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2612:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    2616:	4c 8d 3c 0b          	lea    (%rbx,%rcx,1),%r15
    261a:	4c 89 fe             	mov    %r15,%rsi
    261d:	ff d0                	call   *%rax
    261f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    2623:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2627:	85 c0                	test   %eax,%eax
    2629:	7e 75                	jle    26a0 <heapsort+0x120>
    262b:	4a 8d 3c 32          	lea    (%rdx,%r14,1),%rdi
    262f:	90                   	nop
    2630:	41 0f b6 07          	movzbl (%r15),%eax
    2634:	0f b6 32             	movzbl (%rdx),%esi
    2637:	48 83 c2 01          	add    $0x1,%rdx
    263b:	49 83 c7 01          	add    $0x1,%r15
    263f:	41 88 77 ff          	mov    %sil,-0x1(%r15)
    2643:	88 42 ff             	mov    %al,-0x1(%rdx)
    2646:	48 39 d7             	cmp    %rdx,%rdi
    2649:	75 e5                	jne    2630 <heapsort+0xb0>
    264b:	4f 8d 3c 09          	lea    (%r9,%r9,1),%r15
    264f:	4d 39 fc             	cmp    %r15,%r12
    2652:	72 4c                	jb     26a0 <heapsort+0x120>
    2654:	4c 89 f2             	mov    %r14,%rdx
    2657:	4c 89 c9             	mov    %r9,%rcx
    265a:	49 0f af d7          	imul   %r15,%rdx
    265e:	48 01 da             	add    %rbx,%rdx
    2661:	4d 39 e7             	cmp    %r12,%r15
    2664:	73 9a                	jae    2600 <heapsort+0x80>
    2666:	4a 8d 04 32          	lea    (%rdx,%r14,1),%rax
    266a:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    266e:	48 89 d7             	mov    %rdx,%rdi
    2671:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    2675:	48 89 c6             	mov    %rax,%rsi
    2678:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    267c:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    2680:	ff d0                	call   *%rax
    2682:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    2686:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    268a:	85 c0                	test   %eax,%eax
    268c:	0f 89 6e ff ff ff    	jns    2600 <heapsort+0x80>
    2692:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    2696:	4d 8d 4f 01          	lea    0x1(%r15),%r9
    269a:	e9 64 ff ff ff       	jmp    2603 <heapsort+0x83>
    269f:	90                   	nop
    26a0:	48 83 6d a0 01       	subq   $0x1,-0x60(%rbp)
    26a5:	0f 85 35 ff ff ff    	jne    25e0 <heapsort+0x60>
    26ab:	4d 89 e1             	mov    %r12,%r9
    26ae:	4d 0f af ce          	imul   %r14,%r9
    26b2:	4e 8d 3c 0b          	lea    (%rbx,%r9,1),%r15
    26b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26bd:	00 00 00 
    26c0:	31 c0                	xor    %eax,%eax
    26c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    26c8:	41 0f b6 14 07       	movzbl (%r15,%rax,1),%edx
    26cd:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    26d2:	48 83 c0 01          	add    $0x1,%rax
    26d6:	4c 39 f0             	cmp    %r14,%rax
    26d9:	75 ed                	jne    26c8 <heapsort+0x148>
    26db:	31 c0                	xor    %eax,%eax
    26dd:	0f 1f 00             	nopl   (%rax)
    26e0:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    26e4:	0f b6 14 07          	movzbl (%rdi,%rax,1),%edx
    26e8:	41 88 14 07          	mov    %dl,(%r15,%rax,1)
    26ec:	48 83 c0 01          	add    $0x1,%rax
    26f0:	4c 39 f0             	cmp    %r14,%rax
    26f3:	75 eb                	jne    26e0 <heapsort+0x160>
    26f5:	49 83 ec 01          	sub    $0x1,%r12
    26f9:	49 83 fc 01          	cmp    $0x1,%r12
    26fd:	0f 84 36 01 00 00    	je     2839 <heapsort+0x2b9>
    2703:	41 ba 02 00 00 00    	mov    $0x2,%r10d
    2709:	b9 01 00 00 00       	mov    $0x1,%ecx
    270e:	66 90                	xchg   %ax,%ax
    2710:	4c 89 f2             	mov    %r14,%rdx
    2713:	49 0f af d2          	imul   %r10,%rdx
    2717:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    271b:	48 8d 3c 13          	lea    (%rbx,%rdx,1),%rdi
    271f:	4d 39 e2             	cmp    %r12,%r10
    2722:	0f 82 c8 00 00 00    	jb     27f0 <heapsort+0x270>
    2728:	48 89 fa             	mov    %rdi,%rdx
    272b:	4c 89 d6             	mov    %r10,%rsi
    272e:	49 0f af ce          	imul   %r14,%rcx
    2732:	31 c0                	xor    %eax,%eax
    2734:	48 01 d9             	add    %rbx,%rcx
    2737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    273e:	00 00 
    2740:	44 0f b6 14 07       	movzbl (%rdi,%rax,1),%r10d
    2745:	44 88 14 01          	mov    %r10b,(%rcx,%rax,1)
    2749:	48 83 c0 01          	add    $0x1,%rax
    274d:	4c 39 f0             	cmp    %r14,%rax
    2750:	75 ee                	jne    2740 <heapsort+0x1c0>
    2752:	4c 8d 14 36          	lea    (%rsi,%rsi,1),%r10
    2756:	48 89 f1             	mov    %rsi,%rcx
    2759:	4d 39 d4             	cmp    %r10,%r12
    275c:	73 b2                	jae    2710 <heapsort+0x190>
    275e:	48 d1 e9             	shr    %rcx
    2761:	4d 89 f2             	mov    %r14,%r10
    2764:	4c 0f af d1          	imul   %rcx,%r10
    2768:	49 01 da             	add    %rbx,%r10
    276b:	48 83 fe 01          	cmp    $0x1,%rsi
    276f:	0f 84 cb 00 00 00    	je     2840 <heapsort+0x2c0>
    2775:	0f 1f 00             	nopl   (%rax)
    2778:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    277c:	4c 89 d6             	mov    %r10,%rsi
    277f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2783:	4c 89 ef             	mov    %r13,%rdi
    2786:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    278a:	4c 89 55 c0          	mov    %r10,-0x40(%rbp)
    278e:	ff d0                	call   *%rax
    2790:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    2794:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    2798:	85 c0                	test   %eax,%eax
    279a:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    279e:	0f 88 9c 00 00 00    	js     2840 <heapsort+0x2c0>
    27a4:	31 c0                	xor    %eax,%eax
    27a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ad:	00 00 00 
    27b0:	41 0f b6 34 02       	movzbl (%r10,%rax,1),%esi
    27b5:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
    27b9:	48 83 c0 01          	add    $0x1,%rax
    27bd:	49 39 c6             	cmp    %rax,%r14
    27c0:	75 ee                	jne    27b0 <heapsort+0x230>
    27c2:	48 89 c8             	mov    %rcx,%rax
    27c5:	4c 89 f2             	mov    %r14,%rdx
    27c8:	4d 89 f2             	mov    %r14,%r10
    27cb:	48 d1 e8             	shr    %rax
    27ce:	48 0f af d1          	imul   %rcx,%rdx
    27d2:	4c 0f af d0          	imul   %rax,%r10
    27d6:	48 01 da             	add    %rbx,%rdx
    27d9:	49 01 da             	add    %rbx,%r10
    27dc:	48 83 f9 01          	cmp    $0x1,%rcx
    27e0:	74 5e                	je     2840 <heapsort+0x2c0>
    27e2:	48 89 c1             	mov    %rax,%rcx
    27e5:	eb 91                	jmp    2778 <heapsort+0x1f8>
    27e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    27ee:	00 00 
    27f0:	4a 8d 04 37          	lea    (%rdi,%r14,1),%rax
    27f4:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    27f8:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    27fc:	48 89 c6             	mov    %rax,%rsi
    27ff:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    2803:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2807:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    280b:	ff d0                	call   *%rax
    280d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    2811:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    2815:	85 c0                	test   %eax,%eax
    2817:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    281b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    281f:	0f 89 03 ff ff ff    	jns    2728 <heapsort+0x1a8>
    2825:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2829:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    282d:	49 8d 72 01          	lea    0x1(%r10),%rsi
    2831:	48 01 c2             	add    %rax,%rdx
    2834:	e9 f5 fe ff ff       	jmp    272e <heapsort+0x1ae>
    2839:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    283d:	0f 1f 00             	nopl   (%rax)
    2840:	31 c0                	xor    %eax,%eax
    2842:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2848:	41 0f b6 4c 05 00    	movzbl 0x0(%r13,%rax,1),%ecx
    284e:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
    2851:	48 83 c0 01          	add    $0x1,%rax
    2855:	49 39 c6             	cmp    %rax,%r14
    2858:	75 ee                	jne    2848 <heapsort+0x2c8>
    285a:	4d 29 f7             	sub    %r14,%r15
    285d:	49 83 fc 01          	cmp    $0x1,%r12
    2861:	0f 85 59 fe ff ff    	jne    26c0 <heapsort+0x140>
    2867:	4c 89 ef             	mov    %r13,%rdi
    286a:	e8 00 00 00 00       	call   286f <heapsort+0x2ef>
			286b: R_X86_64_PLT32	free-0x4
    286f:	31 c0                	xor    %eax,%eax
    2871:	48 83 c4 48          	add    $0x48,%rsp
    2875:	5b                   	pop    %rbx
    2876:	41 5c                	pop    %r12
    2878:	41 5d                	pop    %r13
    287a:	41 5e                	pop    %r14
    287c:	41 5f                	pop    %r15
    287e:	5d                   	pop    %rbp
    287f:	c3                   	ret    
    2880:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2885:	eb ea                	jmp    2871 <heapsort+0x2f1>
    2887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    288e:	00 00 

0000000000002890 <heapsort_r>:
    2890:	55                   	push   %rbp
    2891:	48 89 e5             	mov    %rsp,%rbp
    2894:	41 57                	push   %r15
    2896:	41 56                	push   %r14
    2898:	41 55                	push   %r13
    289a:	41 54                	push   %r12
    289c:	53                   	push   %rbx
    289d:	48 83 ec 48          	sub    $0x48,%rsp
    28a1:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    28a5:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    28a9:	48 83 fe 01          	cmp    $0x1,%rsi
    28ad:	0f 86 33 03 00 00    	jbe    2be6 <heapsort_r+0x356>
    28b3:	49 89 d6             	mov    %rdx,%r14
    28b6:	48 85 d2             	test   %rdx,%rdx
    28b9:	0f 84 3d 03 00 00    	je     2bfc <heapsort_r+0x36c>
    28bf:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    28c3:	48 89 d7             	mov    %rdx,%rdi
    28c6:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    28ca:	e8 00 00 00 00       	call   28cf <heapsort_r+0x3f>
			28cb: R_X86_64_PLT32	malloc-0x4
    28cf:	48 85 c0             	test   %rax,%rax
    28d2:	0f 84 24 03 00 00    	je     2bfc <heapsort_r+0x36c>
    28d8:	4c 8b 5d b8          	mov    -0x48(%rbp),%r11
    28dc:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    28e0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    28e4:	4c 89 f0             	mov    %r14,%rax
    28e7:	4c 89 d3             	mov    %r10,%rbx
    28ea:	4c 89 5d 98          	mov    %r11,-0x68(%rbp)
    28ee:	4d 89 dd             	mov    %r11,%r13
    28f1:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
    28f5:	48 d1 eb             	shr    %rbx
    28f8:	4d 29 f5             	sub    %r14,%r13
    28fb:	49 89 de             	mov    %rbx,%r14
    28fe:	48 89 c3             	mov    %rax,%rbx
    2901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2908:	4f 8d 14 36          	lea    (%r14,%r14,1),%r10
    290c:	4d 89 f3             	mov    %r14,%r11
    290f:	4c 39 55 b8          	cmp    %r10,-0x48(%rbp)
    2913:	0f 82 be 00 00 00    	jb     29d7 <heapsort_r+0x147>
    2919:	4c 89 75 a8          	mov    %r14,-0x58(%rbp)
    291d:	49 89 df             	mov    %rbx,%r15
    2920:	4d 89 d6             	mov    %r10,%r14
    2923:	4c 89 db             	mov    %r11,%rbx
    2926:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    292d:	00 00 00 
    2930:	4c 89 f9             	mov    %r15,%rcx
    2933:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2937:	49 0f af ce          	imul   %r14,%rcx
    293b:	4d 8d 64 0d 00       	lea    0x0(%r13,%rcx,1),%r12
    2940:	49 39 c6             	cmp    %rax,%r14
    2943:	72 5b                	jb     29a0 <heapsort_r+0x110>
    2945:	4c 89 f1             	mov    %r14,%rcx
    2948:	49 0f af df          	imul   %r15,%rbx
    294c:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    2950:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2954:	4c 89 e6             	mov    %r12,%rsi
    2957:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    295b:	4c 01 eb             	add    %r13,%rbx
    295e:	48 89 da             	mov    %rbx,%rdx
    2961:	ff d0                	call   *%rax
    2963:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    2967:	85 c0                	test   %eax,%eax
    2969:	7e 65                	jle    29d0 <heapsort_r+0x140>
    296b:	4b 8d 34 3c          	lea    (%r12,%r15,1),%rsi
    296f:	90                   	nop
    2970:	0f b6 03             	movzbl (%rbx),%eax
    2973:	41 0f b6 14 24       	movzbl (%r12),%edx
    2978:	49 83 c4 01          	add    $0x1,%r12
    297c:	48 83 c3 01          	add    $0x1,%rbx
    2980:	88 53 ff             	mov    %dl,-0x1(%rbx)
    2983:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
    2988:	4c 39 e6             	cmp    %r12,%rsi
    298b:	75 e3                	jne    2970 <heapsort_r+0xe0>
    298d:	4c 8d 34 09          	lea    (%rcx,%rcx,1),%r14
    2991:	4c 39 75 b8          	cmp    %r14,-0x48(%rbp)
    2995:	72 39                	jb     29d0 <heapsort_r+0x140>
    2997:	48 89 cb             	mov    %rcx,%rbx
    299a:	eb 94                	jmp    2930 <heapsort_r+0xa0>
    299c:	0f 1f 40 00          	nopl   0x0(%rax)
    29a0:	4b 8d 04 3c          	lea    (%r12,%r15,1),%rax
    29a4:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    29a8:	4c 89 e6             	mov    %r12,%rsi
    29ab:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    29af:	48 89 c2             	mov    %rax,%rdx
    29b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    29b6:	ff d0                	call   *%rax
    29b8:	85 c0                	test   %eax,%eax
    29ba:	79 89                	jns    2945 <heapsort_r+0xb5>
    29bc:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    29c0:	49 8d 4e 01          	lea    0x1(%r14),%rcx
    29c4:	eb 82                	jmp    2948 <heapsort_r+0xb8>
    29c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29cd:	00 00 00 
    29d0:	4c 8b 75 a8          	mov    -0x58(%rbp),%r14
    29d4:	4c 89 fb             	mov    %r15,%rbx
    29d7:	49 83 ee 01          	sub    $0x1,%r14
    29db:	0f 85 27 ff ff ff    	jne    2908 <heapsort_r+0x78>
    29e1:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
    29e5:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    29e9:	49 89 de             	mov    %rbx,%r14
    29ec:	4d 89 ec             	mov    %r13,%r12
    29ef:	4c 8b 5d 98          	mov    -0x68(%rbp),%r11
    29f3:	4c 89 d2             	mov    %r10,%rdx
    29f6:	49 89 ff             	mov    %rdi,%r15
    29f9:	48 0f af d3          	imul   %rbx,%rdx
    29fd:	4c 01 ea             	add    %r13,%rdx
    2a00:	31 c0                	xor    %eax,%eax
    2a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2a08:	0f b6 0c 02          	movzbl (%rdx,%rax,1),%ecx
    2a0c:	41 88 0c 07          	mov    %cl,(%r15,%rax,1)
    2a10:	48 83 c0 01          	add    $0x1,%rax
    2a14:	4c 39 f0             	cmp    %r14,%rax
    2a17:	75 ef                	jne    2a08 <heapsort_r+0x178>
    2a19:	31 c0                	xor    %eax,%eax
    2a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2a20:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
    2a25:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
    2a28:	48 83 c0 01          	add    $0x1,%rax
    2a2c:	4c 39 f0             	cmp    %r14,%rax
    2a2f:	75 ef                	jne    2a20 <heapsort_r+0x190>
    2a31:	49 83 ea 01          	sub    $0x1,%r10
    2a35:	49 83 fa 01          	cmp    $0x1,%r10
    2a39:	0f 84 b8 01 00 00    	je     2bf7 <heapsort_r+0x367>
    2a3f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    2a43:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    2a49:	4c 89 f3             	mov    %r14,%rbx
    2a4c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    2a52:	4c 89 5d a0          	mov    %r11,-0x60(%rbp)
    2a56:	4d 89 e6             	mov    %r12,%r14
    2a59:	4d 89 d4             	mov    %r10,%r12
    2a5c:	4c 89 7d 90          	mov    %r15,-0x70(%rbp)
    2a60:	4d 89 c7             	mov    %r8,%r15
    2a63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2a68:	49 89 d9             	mov    %rbx,%r9
    2a6b:	4d 0f af cf          	imul   %r15,%r9
    2a6f:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2a73:	4b 8d 34 0e          	lea    (%r14,%r9,1),%rsi
    2a77:	4d 39 e7             	cmp    %r12,%r15
    2a7a:	72 34                	jb     2ab0 <heapsort_r+0x220>
    2a7c:	49 89 f1             	mov    %rsi,%r9
    2a7f:	4c 89 f8             	mov    %r15,%rax
    2a82:	4c 0f af eb          	imul   %rbx,%r13
    2a86:	31 d2                	xor    %edx,%edx
    2a88:	4d 01 f5             	add    %r14,%r13
    2a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2a90:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
    2a94:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
    2a99:	48 83 c2 01          	add    $0x1,%rdx
    2a9d:	48 39 da             	cmp    %rbx,%rdx
    2aa0:	75 ee                	jne    2a90 <heapsort_r+0x200>
    2aa2:	4c 8d 3c 00          	lea    (%rax,%rax,1),%r15
    2aa6:	4d 39 fc             	cmp    %r15,%r12
    2aa9:	72 45                	jb     2af0 <heapsort_r+0x260>
    2aab:	49 89 c5             	mov    %rax,%r13
    2aae:	eb b8                	jmp    2a68 <heapsort_r+0x1d8>
    2ab0:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    2ab4:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    2ab8:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2abc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    2ac0:	48 89 c2             	mov    %rax,%rdx
    2ac3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2ac7:	ff d0                	call   *%rax
    2ac9:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    2acd:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2ad1:	85 c0                	test   %eax,%eax
    2ad3:	79 a7                	jns    2a7c <heapsort_r+0x1ec>
    2ad5:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    2ad9:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    2add:	49 8d 47 01          	lea    0x1(%r15),%rax
    2ae1:	49 01 f9             	add    %rdi,%r9
    2ae4:	eb 9c                	jmp    2a82 <heapsort_r+0x1f2>
    2ae6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aed:	00 00 00 
    2af0:	4d 89 e2             	mov    %r12,%r10
    2af3:	49 89 c5             	mov    %rax,%r13
    2af6:	4d 89 f4             	mov    %r14,%r12
    2af9:	49 89 de             	mov    %rbx,%r14
    2afc:	49 d1 ed             	shr    %r13
    2aff:	4c 89 f1             	mov    %r14,%rcx
    2b02:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    2b06:	4c 8b 7d 90          	mov    -0x70(%rbp),%r15
    2b0a:	49 0f af cd          	imul   %r13,%rcx
    2b0e:	4c 8b 5d a0          	mov    -0x60(%rbp),%r11
    2b12:	4c 89 cb             	mov    %r9,%rbx
    2b15:	4c 01 e1             	add    %r12,%rcx
    2b18:	48 83 f8 01          	cmp    $0x1,%rax
    2b1c:	0f 84 9a 00 00 00    	je     2bbc <heapsort_r+0x32c>
    2b22:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    2b26:	4c 89 e3             	mov    %r12,%rbx
    2b29:	4d 89 cc             	mov    %r9,%r12
    2b2c:	4c 89 5d a8          	mov    %r11,-0x58(%rbp)
    2b30:	4c 89 55 a0          	mov    %r10,-0x60(%rbp)
    2b34:	4c 89 7d b8          	mov    %r15,-0x48(%rbp)
    2b38:	4d 89 f7             	mov    %r14,%r15
    2b3b:	49 89 ce             	mov    %rcx,%r14
    2b3e:	66 90                	xchg   %ax,%ax
    2b40:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    2b44:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2b48:	4c 89 f2             	mov    %r14,%rdx
    2b4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2b4f:	ff d0                	call   *%rax
    2b51:	85 c0                	test   %eax,%eax
    2b53:	78 4b                	js     2ba0 <heapsort_r+0x310>
    2b55:	31 c0                	xor    %eax,%eax
    2b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2b5e:	00 00 
    2b60:	41 0f b6 14 06       	movzbl (%r14,%rax,1),%edx
    2b65:	41 88 14 04          	mov    %dl,(%r12,%rax,1)
    2b69:	48 83 c0 01          	add    $0x1,%rax
    2b6d:	49 39 c7             	cmp    %rax,%r15
    2b70:	75 ee                	jne    2b60 <heapsort_r+0x2d0>
    2b72:	4c 89 e8             	mov    %r13,%rax
    2b75:	4d 89 f8             	mov    %r15,%r8
    2b78:	4c 89 f9             	mov    %r15,%rcx
    2b7b:	48 d1 e8             	shr    %rax
    2b7e:	4d 0f af c5          	imul   %r13,%r8
    2b82:	48 0f af c8          	imul   %rax,%rcx
    2b86:	4e 8d 24 03          	lea    (%rbx,%r8,1),%r12
    2b8a:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
    2b8e:	49 83 fd 01          	cmp    $0x1,%r13
    2b92:	74 0c                	je     2ba0 <heapsort_r+0x310>
    2b94:	49 89 c5             	mov    %rax,%r13
    2b97:	eb a7                	jmp    2b40 <heapsort_r+0x2b0>
    2b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2ba0:	4c 89 e0             	mov    %r12,%rax
    2ba3:	4d 89 fe             	mov    %r15,%r14
    2ba6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    2baa:	4c 8b 5d a8          	mov    -0x58(%rbp),%r11
    2bae:	4c 8b 55 a0          	mov    -0x60(%rbp),%r10
    2bb2:	4c 8b 7d b8          	mov    -0x48(%rbp),%r15
    2bb6:	49 89 dc             	mov    %rbx,%r12
    2bb9:	48 89 c3             	mov    %rax,%rbx
    2bbc:	31 c0                	xor    %eax,%eax
    2bbe:	66 90                	xchg   %ax,%ax
    2bc0:	41 0f b6 0c 07       	movzbl (%r15,%rax,1),%ecx
    2bc5:	88 0c 03             	mov    %cl,(%rbx,%rax,1)
    2bc8:	48 83 c0 01          	add    $0x1,%rax
    2bcc:	49 39 c6             	cmp    %rax,%r14
    2bcf:	75 ef                	jne    2bc0 <heapsort_r+0x330>
    2bd1:	4c 29 f2             	sub    %r14,%rdx
    2bd4:	49 83 fa 01          	cmp    $0x1,%r10
    2bd8:	0f 85 22 fe ff ff    	jne    2a00 <heapsort_r+0x170>
    2bde:	4c 89 ff             	mov    %r15,%rdi
    2be1:	e8 00 00 00 00       	call   2be6 <heapsort_r+0x356>
			2be2: R_X86_64_PLT32	free-0x4
    2be6:	31 c0                	xor    %eax,%eax
    2be8:	48 83 c4 48          	add    $0x48,%rsp
    2bec:	5b                   	pop    %rbx
    2bed:	41 5c                	pop    %r12
    2bef:	41 5d                	pop    %r13
    2bf1:	41 5e                	pop    %r14
    2bf3:	41 5f                	pop    %r15
    2bf5:	5d                   	pop    %rbp
    2bf6:	c3                   	ret    
    2bf7:	4c 89 db             	mov    %r11,%rbx
    2bfa:	eb c0                	jmp    2bbc <heapsort_r+0x32c>
    2bfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2c01:	eb e5                	jmp    2be8 <heapsort_r+0x358>
    2c03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c0a:	00 00 00 
    2c0d:	0f 1f 00             	nopl   (%rax)

0000000000002c10 <imaxabs>:
    2c10:	48 89 f8             	mov    %rdi,%rax
    2c13:	48 f7 d8             	neg    %rax
    2c16:	48 0f 48 c7          	cmovs  %rdi,%rax
    2c1a:	c3                   	ret    
    2c1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002c20 <imaxdiv>:
    2c20:	48 89 f8             	mov    %rdi,%rax
    2c23:	48 99                	cqto   
    2c25:	48 f7 fe             	idiv   %rsi
    2c28:	c3                   	ret    
    2c29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002c30 <labs>:
    2c30:	48 89 f8             	mov    %rdi,%rax
    2c33:	48 f7 d8             	neg    %rax
    2c36:	48 0f 48 c7          	cmovs  %rdi,%rax
    2c3a:	c3                   	ret    
    2c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002c40 <ldiv>:
    2c40:	48 89 f8             	mov    %rdi,%rax
    2c43:	48 99                	cqto   
    2c45:	48 f7 fe             	idiv   %rsi
    2c48:	c3                   	ret    
    2c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002c50 <llabs>:
    2c50:	48 89 f8             	mov    %rdi,%rax
    2c53:	48 f7 d8             	neg    %rax
    2c56:	48 0f 48 c7          	cmovs  %rdi,%rax
    2c5a:	c3                   	ret    
    2c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002c60 <lldiv>:
    2c60:	48 89 f8             	mov    %rdi,%rax
    2c63:	48 99                	cqto   
    2c65:	48 f7 fe             	idiv   %rsi
    2c68:	c3                   	ret    
    2c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002c70 <_qsort>:
    2c70:	55                   	push   %rbp
    2c71:	49 89 d3             	mov    %rdx,%r11
    2c74:	48 89 e5             	mov    %rsp,%rbp
    2c77:	41 57                	push   %r15
    2c79:	41 56                	push   %r14
    2c7b:	41 55                	push   %r13
    2c7d:	49 89 cd             	mov    %rcx,%r13
    2c80:	41 54                	push   %r12
    2c82:	49 89 fc             	mov    %rdi,%r12
    2c85:	41 8d 78 ff          	lea    -0x1(%r8),%edi
    2c89:	53                   	push   %rbx
    2c8a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    2c91:	89 7d 84             	mov    %edi,-0x7c(%rbp)
    2c94:	48 89 d7             	mov    %rdx,%rdi
    2c97:	48 c1 ef 03          	shr    $0x3,%rdi
    2c9b:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
    2c9f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    2ca3:	48 89 d7             	mov    %rdx,%rdi
    2ca6:	48 f7 df             	neg    %rdi
    2ca9:	45 85 c0             	test   %r8d,%r8d
    2cac:	0f 8e b7 03 00 00    	jle    3069 <_qsort+0x3f9>
    2cb2:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    2cb6:	48 89 fb             	mov    %rdi,%rbx
    2cb9:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    2cbd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2cc1:	c7 45 c0 02 00 00 00 	movl   $0x2,-0x40(%rbp)
    2cc8:	4c 09 e0             	or     %r12,%rax
    2ccb:	a8 07                	test   $0x7,%al
    2ccd:	0f 84 e1 07 00 00    	je     34b4 <_qsort+0x844>
    2cd3:	48 83 7d 88 06       	cmpq   $0x6,-0x78(%rbp)
    2cd8:	0f 86 ee 07 00 00    	jbe    34cc <_qsort+0x85c>
    2cde:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2ce2:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    2ce6:	48 89 c2             	mov    %rax,%rdx
    2ce9:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    2ced:	48 d1 ea             	shr    %rdx
    2cf0:	4c 0f af cf          	imul   %rdi,%r9
    2cf4:	48 0f af d7          	imul   %rdi,%rdx
    2cf8:	4d 01 e1             	add    %r12,%r9
    2cfb:	4d 8d 2c 14          	lea    (%r12,%rdx,1),%r13
    2cff:	48 83 f8 07          	cmp    $0x7,%rax
    2d03:	0f 84 47 01 00 00    	je     2e50 <_qsort+0x1e0>
    2d09:	48 83 f8 28          	cmp    $0x28,%rax
    2d0d:	0f 86 8e 05 00 00    	jbe    32a1 <_qsort+0x631>
    2d13:	48 c1 e8 03          	shr    $0x3,%rax
    2d17:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    2d1b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    2d1f:	48 0f af f8          	imul   %rax,%rdi
    2d23:	49 8d 04 7c          	lea    (%r12,%rdi,2),%rax
    2d27:	4d 8d 3c 3c          	lea    (%r12,%rdi,1),%r15
    2d2b:	49 89 fe             	mov    %rdi,%r14
    2d2e:	4c 89 e7             	mov    %r12,%rdi
    2d31:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2d35:	4c 89 fe             	mov    %r15,%rsi
    2d38:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
    2d3c:	ff d2                	call   *%rdx
    2d3e:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    2d42:	85 c0                	test   %eax,%eax
    2d44:	0f 88 62 09 00 00    	js     36ac <_qsort+0xa3c>
    2d4a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    2d4e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2d52:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    2d56:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    2d5a:	41 ff d7             	call   *%r15
    2d5d:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    2d61:	85 c0                	test   %eax,%eax
    2d63:	0f 8e 06 0a 00 00    	jle    376f <_qsort+0xaff>
    2d69:	4c 89 f7             	mov    %r14,%rdi
    2d6c:	4d 89 ef             	mov    %r13,%r15
    2d6f:	4b 8d 44 35 00       	lea    0x0(%r13,%r14,1),%rax
    2d74:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
    2d78:	48 f7 df             	neg    %rdi
    2d7b:	4d 29 f7             	sub    %r14,%r15
    2d7e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2d82:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    2d86:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    2d8a:	4c 89 ee             	mov    %r13,%rsi
    2d8d:	4c 89 ff             	mov    %r15,%rdi
    2d90:	ff d2                	call   *%rdx
    2d92:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    2d96:	85 c0                	test   %eax,%eax
    2d98:	0f 88 7e 09 00 00    	js     371c <_qsort+0xaac>
    2d9e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    2da2:	4c 8b 75 a8          	mov    -0x58(%rbp),%r14
    2da6:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
    2daa:	4c 89 ef             	mov    %r13,%rdi
    2dad:	41 ff d6             	call   *%r14
    2db0:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    2db4:	85 c0                	test   %eax,%eax
    2db6:	0f 8e 98 09 00 00    	jle    3754 <_qsort+0xae4>
    2dbc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2dc0:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2dc4:	4d 8d 34 01          	lea    (%r9,%rax,1),%r14
    2dc8:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
    2dcc:	4c 89 f6             	mov    %r14,%rsi
    2dcf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2dd3:	4c 89 ff             	mov    %r15,%rdi
    2dd6:	ff d0                	call   *%rax
    2dd8:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2ddc:	85 c0                	test   %eax,%eax
    2dde:	4c 89 ce             	mov    %r9,%rsi
    2de1:	0f 88 02 09 00 00    	js     36e9 <_qsort+0xa79>
    2de7:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2deb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2def:	4c 89 f7             	mov    %r14,%rdi
    2df2:	ff d0                	call   *%rax
    2df4:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2df8:	85 c0                	test   %eax,%eax
    2dfa:	7f 19                	jg     2e15 <_qsort+0x1a5>
    2dfc:	4c 89 ce             	mov    %r9,%rsi
    2dff:	4c 89 ff             	mov    %r15,%rdi
    2e02:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2e06:	ff d0                	call   *%rax
    2e08:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2e0c:	85 c0                	test   %eax,%eax
    2e0e:	4d 0f 49 f9          	cmovns %r9,%r15
    2e12:	4d 89 fe             	mov    %r15,%r14
    2e15:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2e19:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    2e1d:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2e21:	4c 89 ee             	mov    %r13,%rsi
    2e24:	41 ff d7             	call   *%r15
    2e27:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2e2b:	85 c0                	test   %eax,%eax
    2e2d:	0f 88 4d 06 00 00    	js     3480 <_qsort+0x810>
    2e33:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2e37:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    2e3b:	4c 89 f6             	mov    %r14,%rsi
    2e3e:	4c 89 ef             	mov    %r13,%rdi
    2e41:	41 ff d7             	call   *%r15
    2e44:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2e48:	85 c0                	test   %eax,%eax
    2e4a:	0f 8e 3e 08 00 00    	jle    368e <_qsort+0xa1e>
    2e50:	8b 7d c0             	mov    -0x40(%rbp),%edi
    2e53:	85 ff                	test   %edi,%edi
    2e55:	0f 85 fd 03 00 00    	jne    3258 <_qsort+0x5e8>
    2e5b:	49 8b 04 24          	mov    (%r12),%rax
    2e5f:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    2e63:	49 89 0c 24          	mov    %rcx,(%r12)
    2e67:	49 89 45 00          	mov    %rax,0x0(%r13)
    2e6b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2e6f:	4c 01 e0             	add    %r12,%rax
    2e72:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    2e79:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    2e80:	45 31 f6             	xor    %r14d,%r14d
    2e83:	4d 89 cd             	mov    %r9,%r13
    2e86:	4c 89 75 b8          	mov    %r14,-0x48(%rbp)
    2e8a:	4d 89 ce             	mov    %r9,%r14
    2e8d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    2e94:	49 89 c7             	mov    %rax,%r15
    2e97:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    2e9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ea0:	4c 89 f9             	mov    %r15,%rcx
    2ea3:	4d 39 fe             	cmp    %r15,%r14
    2ea6:	0f 82 d4 00 00 00    	jb     2f80 <_qsort+0x310>
    2eac:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
    2eb0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2eb4:	4c 89 e6             	mov    %r12,%rsi
    2eb7:	4c 89 ff             	mov    %r15,%rdi
    2eba:	ff d0                	call   *%rax
    2ebc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2ec0:	85 c0                	test   %eax,%eax
    2ec2:	0f 8e 70 02 00 00    	jle    3138 <_qsort+0x4c8>
    2ec8:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    2ecc:	4d 89 ec             	mov    %r13,%r12
    2ecf:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    2ed3:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    2ed7:	eb 2c                	jmp    2f05 <_qsort+0x295>
    2ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2ee0:	49 8b 06             	mov    (%r14),%rax
    2ee3:	49 8b 0c 24          	mov    (%r12),%rcx
    2ee7:	49 89 0e             	mov    %rcx,(%r14)
    2eea:	49 89 04 24          	mov    %rax,(%r12)
    2eee:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    2ef5:	00 
    2ef6:	49 01 dc             	add    %rbx,%r12
    2ef9:	49 01 de             	add    %rbx,%r14
    2efc:	4d 39 fe             	cmp    %r15,%r14
    2eff:	0f 82 db 01 00 00    	jb     30e0 <_qsort+0x470>
    2f05:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2f09:	4c 89 f7             	mov    %r14,%rdi
    2f0c:	41 ff d5             	call   *%r13
    2f0f:	85 c0                	test   %eax,%eax
    2f11:	0f 88 79 01 00 00    	js     3090 <_qsort+0x420>
    2f17:	75 e0                	jne    2ef9 <_qsort+0x289>
    2f19:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    2f1c:	85 c9                	test   %ecx,%ecx
    2f1e:	74 c0                	je     2ee0 <_qsort+0x270>
    2f20:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    2f24:	74 32                	je     2f58 <_qsort+0x2e8>
    2f26:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    2f2a:	4c 89 e1             	mov    %r12,%rcx
    2f2d:	4c 89 f0             	mov    %r14,%rax
    2f30:	4d 8d 0c 3e          	lea    (%r14,%rdi,1),%r9
    2f34:	0f 1f 40 00          	nopl   0x0(%rax)
    2f38:	0f b6 10             	movzbl (%rax),%edx
    2f3b:	0f b6 31             	movzbl (%rcx),%esi
    2f3e:	48 83 c0 01          	add    $0x1,%rax
    2f42:	48 83 c1 01          	add    $0x1,%rcx
    2f46:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    2f4a:	88 51 ff             	mov    %dl,-0x1(%rcx)
    2f4d:	4c 39 c8             	cmp    %r9,%rax
    2f50:	75 e6                	jne    2f38 <_qsort+0x2c8>
    2f52:	eb 9a                	jmp    2eee <_qsort+0x27e>
    2f54:	0f 1f 40 00          	nopl   0x0(%rax)
    2f58:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    2f5c:	31 c0                	xor    %eax,%eax
    2f5e:	66 90                	xchg   %ax,%ax
    2f60:	49 8b 14 c6          	mov    (%r14,%rax,8),%rdx
    2f64:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    2f68:	49 89 0c c6          	mov    %rcx,(%r14,%rax,8)
    2f6c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    2f70:	48 83 c0 01          	add    $0x1,%rax
    2f74:	48 39 f0             	cmp    %rsi,%rax
    2f77:	75 e7                	jne    2f60 <_qsort+0x2f0>
    2f79:	e9 70 ff ff ff       	jmp    2eee <_qsort+0x27e>
    2f7e:	66 90                	xchg   %ax,%ax
    2f80:	4c 89 e8             	mov    %r13,%rax
    2f83:	4d 89 f1             	mov    %r14,%r9
    2f86:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    2f8a:	4d 89 fd             	mov    %r15,%r13
    2f8d:	49 89 c7             	mov    %rax,%r15
    2f90:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    2f94:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    2f98:	4d 89 e8             	mov    %r13,%r8
    2f9b:	48 89 d0             	mov    %rdx,%rax
    2f9e:	48 0f af c7          	imul   %rdi,%rax
    2fa2:	4d 8d 14 04          	lea    (%r12,%rax,1),%r10
    2fa6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2faa:	49 29 c0             	sub    %rax,%r8
    2fad:	4c 29 e0             	sub    %r12,%rax
    2fb0:	4c 39 c0             	cmp    %r8,%rax
    2fb3:	49 0f 47 c0          	cmova  %r8,%rax
    2fb7:	48 85 c0             	test   %rax,%rax
    2fba:	0f 85 2f 02 00 00    	jne    31ef <_qsort+0x57f>
    2fc0:	4c 89 d6             	mov    %r10,%rsi
    2fc3:	4d 89 fb             	mov    %r15,%r11
    2fc6:	48 89 df             	mov    %rbx,%rdi
    2fc9:	48 29 d6             	sub    %rdx,%rsi
    2fcc:	4d 29 cb             	sub    %r9,%r11
    2fcf:	4c 29 fe             	sub    %r15,%rsi
    2fd2:	4c 39 de             	cmp    %r11,%rsi
    2fd5:	49 0f 47 f3          	cmova  %r11,%rsi
    2fd9:	48 85 f6             	test   %rsi,%rsi
    2fdc:	74 41                	je     301f <_qsort+0x3af>
    2fde:	4c 89 d0             	mov    %r10,%rax
    2fe1:	48 29 f0             	sub    %rsi,%rax
    2fe4:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    2fe8:	0f 87 09 06 00 00    	ja     35f7 <_qsort+0x987>
    2fee:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2ff2:	48 c1 ee 03          	shr    $0x3,%rsi
    2ff6:	48 89 f1             	mov    %rsi,%rcx
    2ff9:	31 f6                	xor    %esi,%esi
    2ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3000:	49 8b 54 f5 00       	mov    0x0(%r13,%rsi,8),%rdx
    3005:	48 8b 3c f0          	mov    (%rax,%rsi,8),%rdi
    3009:	49 89 7c f5 00       	mov    %rdi,0x0(%r13,%rsi,8)
    300e:	48 89 14 f0          	mov    %rdx,(%rax,%rsi,8)
    3012:	48 83 c6 01          	add    $0x1,%rsi
    3016:	48 39 ce             	cmp    %rcx,%rsi
    3019:	75 e5                	jne    3000 <_qsort+0x390>
    301b:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    301f:	4d 85 f6             	test   %r14,%r14
    3022:	0f 84 85 02 00 00    	je     32ad <_qsort+0x63d>
    3028:	4c 39 45 b0          	cmp    %r8,-0x50(%rbp)
    302c:	0f 82 a9 03 00 00    	jb     33db <_qsort+0x76b>
    3032:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3036:	4c 39 df             	cmp    %r11,%rdi
    3039:	0f 83 e3 03 00 00    	jae    3422 <_qsort+0x7b2>
    303f:	4c 89 d8             	mov    %r11,%rax
    3042:	31 d2                	xor    %edx,%edx
    3044:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
    3048:	4d 29 f9             	sub    %r15,%r9
    304b:	48 f7 f7             	div    %rdi
    304e:	4f 8d 24 0a          	lea    (%r10,%r9,1),%r12
    3052:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    3056:	8b 45 84             	mov    -0x7c(%rbp),%eax
    3059:	83 f8 ff             	cmp    $0xffffffff,%eax
    305c:	0f 85 5b fc ff ff    	jne    2cbd <_qsort+0x4d>
    3062:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    3066:	49 89 fb             	mov    %rdi,%r11
    3069:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    306d:	4c 89 e9             	mov    %r13,%rcx
    3070:	4c 89 e7             	mov    %r12,%rdi
    3073:	4c 89 da             	mov    %r11,%rdx
    3076:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    307d:	5b                   	pop    %rbx
    307e:	41 5c                	pop    %r12
    3080:	41 5d                	pop    %r13
    3082:	41 5e                	pop    %r14
    3084:	41 5f                	pop    %r15
    3086:	5d                   	pop    %rbp
    3087:	e9 00 00 00 00       	jmp    308c <_qsort+0x41c>
			3088: R_X86_64_PLT32	heapsort-0x4
    308c:	0f 1f 40 00          	nopl   0x0(%rax)
    3090:	4d 89 e5             	mov    %r12,%r13
    3093:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    3097:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
    309b:	4d 39 fe             	cmp    %r15,%r14
    309e:	0f 82 dc fe ff ff    	jb     2f80 <_qsort+0x310>
    30a4:	8b 55 c0             	mov    -0x40(%rbp),%edx
    30a7:	85 d2                	test   %edx,%edx
    30a9:	75 55                	jne    3100 <_qsort+0x490>
    30ab:	49 8b 07             	mov    (%r15),%rax
    30ae:	49 8b 16             	mov    (%r14),%rdx
    30b1:	49 89 17             	mov    %rdx,(%r15)
    30b4:	49 89 06             	mov    %rax,(%r14)
    30b7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    30bb:	4d 8d 14 07          	lea    (%r15,%rax,1),%r10
    30bf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    30c3:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    30ca:	00 
    30cb:	49 29 c6             	sub    %rax,%r14
    30ce:	4d 89 d7             	mov    %r10,%r15
    30d1:	e9 ca fd ff ff       	jmp    2ea0 <_qsort+0x230>
    30d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    30dd:	00 00 00 
    30e0:	4d 89 fd             	mov    %r15,%r13
    30e3:	4d 89 f1             	mov    %r14,%r9
    30e6:	4d 89 e7             	mov    %r12,%r15
    30e9:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    30ed:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    30f1:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
    30f5:	e9 96 fe ff ff       	jmp    2f90 <_qsort+0x320>
    30fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3100:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3104:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3108:	4c 89 f0             	mov    %r14,%rax
    310b:	4d 8d 14 3f          	lea    (%r15,%rdi,1),%r10
    310f:	74 6f                	je     3180 <_qsort+0x510>
    3111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3118:	0f b6 11             	movzbl (%rcx),%edx
    311b:	0f b6 30             	movzbl (%rax),%esi
    311e:	48 83 c1 01          	add    $0x1,%rcx
    3122:	48 83 c0 01          	add    $0x1,%rax
    3126:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
    312a:	88 50 ff             	mov    %dl,-0x1(%rax)
    312d:	4c 39 d1             	cmp    %r10,%rcx
    3130:	75 e6                	jne    3118 <_qsort+0x4a8>
    3132:	eb 8b                	jmp    30bf <_qsort+0x44f>
    3134:	0f 1f 40 00          	nopl   0x0(%rax)
    3138:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    313c:	4d 8d 14 3f          	lea    (%r15,%rdi,1),%r10
    3140:	75 8c                	jne    30ce <_qsort+0x45e>
    3142:	8b 75 c0             	mov    -0x40(%rbp),%esi
    3145:	85 f6                	test   %esi,%esi
    3147:	75 6d                	jne    31b6 <_qsort+0x546>
    3149:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    314d:	49 8b 17             	mov    (%r15),%rdx
    3150:	48 8b 06             	mov    (%rsi),%rax
    3153:	48 89 16             	mov    %rdx,(%rsi)
    3156:	4c 8d 14 3e          	lea    (%rsi,%rdi,1),%r10
    315a:	49 89 07             	mov    %rax,(%r15)
    315d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3161:	4c 89 55 90          	mov    %r10,-0x70(%rbp)
    3165:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    316c:	00 
    316d:	4d 8d 14 07          	lea    (%r15,%rax,1),%r10
    3171:	e9 58 ff ff ff       	jmp    30ce <_qsort+0x45e>
    3176:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    317d:	00 00 00 
    3180:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    3184:	31 c0                	xor    %eax,%eax
    3186:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    318d:	00 00 00 
    3190:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    3194:	49 8b 0c c6          	mov    (%r14,%rax,8),%rcx
    3198:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    319c:	49 89 14 c6          	mov    %rdx,(%r14,%rax,8)
    31a0:	48 83 c0 01          	add    $0x1,%rax
    31a4:	48 39 c6             	cmp    %rax,%rsi
    31a7:	75 e7                	jne    3190 <_qsort+0x520>
    31a9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    31ad:	4d 8d 14 07          	lea    (%r15,%rax,1),%r10
    31b1:	e9 09 ff ff ff       	jmp    30bf <_qsort+0x44f>
    31b6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    31ba:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    31be:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    31c2:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    31c6:	0f 84 55 04 00 00    	je     3621 <_qsort+0x9b1>
    31cc:	0f 1f 40 00          	nopl   0x0(%rax)
    31d0:	0f b6 10             	movzbl (%rax),%edx
    31d3:	0f b6 31             	movzbl (%rcx),%esi
    31d6:	48 83 c0 01          	add    $0x1,%rax
    31da:	48 83 c1 01          	add    $0x1,%rcx
    31de:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    31e2:	88 51 ff             	mov    %dl,-0x1(%rcx)
    31e5:	49 39 c2             	cmp    %rax,%r10
    31e8:	75 e6                	jne    31d0 <_qsort+0x560>
    31ea:	e9 6e ff ff ff       	jmp    315d <_qsort+0x4ed>
    31ef:	4c 89 ee             	mov    %r13,%rsi
    31f2:	48 29 c6             	sub    %rax,%rsi
    31f5:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    31f9:	0f 87 a5 03 00 00    	ja     35a4 <_qsort+0x934>
    31ff:	48 c1 e8 03          	shr    $0x3,%rax
    3203:	31 c9                	xor    %ecx,%ecx
    3205:	0f 1f 00             	nopl   (%rax)
    3208:	49 8b 14 cc          	mov    (%r12,%rcx,8),%rdx
    320c:	48 8b 3c ce          	mov    (%rsi,%rcx,8),%rdi
    3210:	49 89 3c cc          	mov    %rdi,(%r12,%rcx,8)
    3214:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    3218:	48 83 c1 01          	add    $0x1,%rcx
    321c:	48 39 c8             	cmp    %rcx,%rax
    321f:	75 e7                	jne    3208 <_qsort+0x598>
    3221:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3225:	4c 89 d1             	mov    %r10,%rcx
    3228:	4d 89 fb             	mov    %r15,%r11
    322b:	4d 29 cb             	sub    %r9,%r11
    322e:	48 29 c1             	sub    %rax,%rcx
    3231:	48 89 c7             	mov    %rax,%rdi
    3234:	4c 29 f9             	sub    %r15,%rcx
    3237:	48 f7 df             	neg    %rdi
    323a:	48 89 ce             	mov    %rcx,%rsi
    323d:	4c 39 d9             	cmp    %r11,%rcx
    3240:	49 0f 47 f3          	cmova  %r11,%rsi
    3244:	48 85 f6             	test   %rsi,%rsi
    3247:	0f 84 d2 fd ff ff    	je     301f <_qsort+0x3af>
    324d:	4c 89 d0             	mov    %r10,%rax
    3250:	48 29 f0             	sub    %rsi,%rax
    3253:	e9 96 fd ff ff       	jmp    2fee <_qsort+0x37e>
    3258:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    325c:	4c 01 e0             	add    %r12,%rax
    325f:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3263:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    326a:	4c 89 e0             	mov    %r12,%rax
    326d:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
    3274:	0f 84 e0 03 00 00    	je     365a <_qsort+0x9ea>
    327a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3280:	0f b6 10             	movzbl (%rax),%edx
    3283:	41 0f b6 4d 00       	movzbl 0x0(%r13),%ecx
    3288:	48 83 c0 01          	add    $0x1,%rax
    328c:	49 83 c5 01          	add    $0x1,%r13
    3290:	88 48 ff             	mov    %cl,-0x1(%rax)
    3293:	41 88 55 ff          	mov    %dl,-0x1(%r13)
    3297:	48 39 f0             	cmp    %rsi,%rax
    329a:	75 e4                	jne    3280 <_qsort+0x610>
    329c:	e9 d8 fb ff ff       	jmp    2e79 <_qsort+0x209>
    32a1:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    32a5:	4d 89 ce             	mov    %r9,%r14
    32a8:	e9 68 fb ff ff       	jmp    2e15 <_qsort+0x1a5>
    32ad:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    32b1:	48 c1 e8 02          	shr    $0x2,%rax
    32b5:	48 83 c0 01          	add    $0x1,%rax
    32b9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    32bd:	4c 39 95 78 ff ff ff 	cmp    %r10,-0x88(%rbp)
    32c4:	0f 83 58 01 00 00    	jae    3422 <_qsort+0x7b2>
    32ca:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    32d1:	4c 89 55 88          	mov    %r10,-0x78(%rbp)
    32d5:	45 31 ed             	xor    %r13d,%r13d
    32d8:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
    32df:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
    32e6:	4c 89 bd 60 ff ff ff 	mov    %r15,-0xa0(%rbp)
    32ed:	4c 89 9d 70 ff ff ff 	mov    %r11,-0x90(%rbp)
    32f4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    32f8:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
    32ff:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    3303:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    3307:	4d 89 ec             	mov    %r13,%r12
    330a:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
    330e:	4d 89 e6             	mov    %r12,%r14
    3311:	49 89 df             	mov    %rbx,%r15
    3314:	48 89 d3             	mov    %rdx,%rbx
    3317:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    331b:	49 89 c4             	mov    %rax,%r12
    331e:	eb 22                	jmp    3342 <_qsort+0x6d2>
    3320:	4b 8b 44 3d 00       	mov    0x0(%r13,%r15,1),%rax
    3325:	49 8b 55 00          	mov    0x0(%r13),%rdx
    3329:	4b 89 54 3d 00       	mov    %rdx,0x0(%r13,%r15,1)
    332e:	49 89 45 00          	mov    %rax,0x0(%r13)
    3332:	49 83 c6 01          	add    $0x1,%r14
    3336:	4d 29 fc             	sub    %r15,%r12
    3339:	4c 39 75 a0          	cmp    %r14,-0x60(%rbp)
    333d:	72 67                	jb     33a6 <_qsort+0x736>
    333f:	4c 89 eb             	mov    %r13,%rbx
    3342:	48 39 5d c8          	cmp    %rbx,-0x38(%rbp)
    3346:	0f 83 14 01 00 00    	jae    3460 <_qsort+0x7f0>
    334c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3350:	48 89 de             	mov    %rbx,%rsi
    3353:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
    3357:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    335b:	4c 89 ef             	mov    %r13,%rdi
    335e:	ff d0                	call   *%rax
    3360:	85 c0                	test   %eax,%eax
    3362:	0f 8e f8 00 00 00    	jle    3460 <_qsort+0x7f0>
    3368:	8b 45 c0             	mov    -0x40(%rbp),%eax
    336b:	85 c0                	test   %eax,%eax
    336d:	74 b1                	je     3320 <_qsort+0x6b0>
    336f:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3373:	4c 89 e8             	mov    %r13,%rax
    3376:	0f 84 b8 00 00 00    	je     3434 <_qsort+0x7c4>
    337c:	0f 1f 40 00          	nopl   0x0(%rax)
    3380:	0f b6 13             	movzbl (%rbx),%edx
    3383:	0f b6 08             	movzbl (%rax),%ecx
    3386:	48 83 c3 01          	add    $0x1,%rbx
    338a:	48 83 c0 01          	add    $0x1,%rax
    338e:	88 4b ff             	mov    %cl,-0x1(%rbx)
    3391:	88 50 ff             	mov    %dl,-0x1(%rax)
    3394:	4c 39 e3             	cmp    %r12,%rbx
    3397:	75 e7                	jne    3380 <_qsort+0x710>
    3399:	49 83 c6 01          	add    $0x1,%r14
    339d:	4d 29 fc             	sub    %r15,%r12
    33a0:	4c 39 75 a0          	cmp    %r14,-0x60(%rbp)
    33a4:	73 99                	jae    333f <_qsort+0x6cf>
    33a6:	4c 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%r8
    33ad:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
    33b4:	4c 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%r15
    33bb:	4c 8b 55 88          	mov    -0x78(%rbp),%r10
    33bf:	4c 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%r11
    33c6:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
    33ca:	48 8b 9d 58 ff ff ff 	mov    -0xa8(%rbp),%rbx
    33d1:	4c 39 45 b0          	cmp    %r8,-0x50(%rbp)
    33d5:	0f 83 57 fc ff ff    	jae    3032 <_qsort+0x3c2>
    33db:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    33df:	4c 89 c0             	mov    %r8,%rax
    33e2:	31 d2                	xor    %edx,%edx
    33e4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
    33e8:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    33ec:	4c 89 5d b8          	mov    %r11,-0x48(%rbp)
    33f0:	48 f7 f7             	div    %rdi
    33f3:	4c 89 55 c0          	mov    %r10,-0x40(%rbp)
    33f7:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    33fb:	48 89 fa             	mov    %rdi,%rdx
    33fe:	4c 89 e7             	mov    %r12,%rdi
    3401:	48 89 c6             	mov    %rax,%rsi
    3404:	e8 67 f8 ff ff       	call   2c70 <_qsort>
    3409:	4c 8b 5d b8          	mov    -0x48(%rbp),%r11
    340d:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3411:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    3415:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    3419:	4c 39 df             	cmp    %r11,%rdi
    341c:	0f 82 1d fc ff ff    	jb     303f <_qsort+0x3cf>
    3422:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3429:	5b                   	pop    %rbx
    342a:	41 5c                	pop    %r12
    342c:	41 5d                	pop    %r13
    342e:	41 5e                	pop    %r14
    3430:	41 5f                	pop    %r15
    3432:	5d                   	pop    %rbp
    3433:	c3                   	ret    
    3434:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    3438:	31 c0                	xor    %eax,%eax
    343a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3440:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    3444:	49 8b 4c c5 00       	mov    0x0(%r13,%rax,8),%rcx
    3449:	48 89 0c c3          	mov    %rcx,(%rbx,%rax,8)
    344d:	49 89 54 c5 00       	mov    %rdx,0x0(%r13,%rax,8)
    3452:	48 83 c0 01          	add    $0x1,%rax
    3456:	48 39 c6             	cmp    %rax,%rsi
    3459:	75 e5                	jne    3440 <_qsort+0x7d0>
    345b:	e9 d2 fe ff ff       	jmp    3332 <_qsort+0x6c2>
    3460:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3464:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3468:	4d 89 f4             	mov    %r14,%r12
    346b:	4c 89 fb             	mov    %r15,%rbx
    346e:	48 39 c2             	cmp    %rax,%rdx
    3471:	0f 82 93 fe ff ff    	jb     330a <_qsort+0x69a>
    3477:	eb a9                	jmp    3422 <_qsort+0x7b2>
    3479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3480:	4c 89 f6             	mov    %r14,%rsi
    3483:	4c 89 ef             	mov    %r13,%rdi
    3486:	41 ff d7             	call   *%r15
    3489:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    348d:	85 c0                	test   %eax,%eax
    348f:	0f 88 bb f9 ff ff    	js     2e50 <_qsort+0x1e0>
    3495:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3499:	4c 89 f6             	mov    %r14,%rsi
    349c:	41 ff d7             	call   *%r15
    349f:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    34a3:	85 c0                	test   %eax,%eax
    34a5:	0f 88 f9 01 00 00    	js     36a4 <_qsort+0xa34>
    34ab:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
    34af:	e9 9c f9 ff ff       	jmp    2e50 <_qsort+0x1e0>
    34b4:	31 c0                	xor    %eax,%eax
    34b6:	48 83 7d b0 08       	cmpq   $0x8,-0x50(%rbp)
    34bb:	0f 95 c0             	setne  %al
    34be:	48 83 7d 88 06       	cmpq   $0x6,-0x78(%rbp)
    34c3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    34c6:	0f 87 12 f8 ff ff    	ja     2cde <_qsort+0x6e>
    34cc:	4c 8b 5d b0          	mov    -0x50(%rbp),%r11
    34d0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    34d4:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    34d8:	49 0f af c3          	imul   %r11,%rax
    34dc:	4b 8d 3c 1c          	lea    (%r12,%r11,1),%rdi
    34e0:	4c 89 db             	mov    %r11,%rbx
    34e3:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    34e7:	48 f7 db             	neg    %rbx
    34ea:	4c 01 e0             	add    %r12,%rax
    34ed:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    34f1:	48 39 c7             	cmp    %rax,%rdi
    34f4:	0f 83 28 ff ff ff    	jae    3422 <_qsort+0x7b2>
    34fa:	4c 89 6d b8          	mov    %r13,-0x48(%rbp)
    34fe:	4c 8b 75 98          	mov    -0x68(%rbp),%r14
    3502:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    3506:	4d 89 dc             	mov    %r11,%r12
    3509:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    350d:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    3511:	73 77                	jae    358a <_qsort+0x91a>
    3513:	49 89 c5             	mov    %rax,%r13
    3516:	eb 1c                	jmp    3534 <_qsort+0x8c4>
    3518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    351f:	00 
    3520:	49 8b 07             	mov    (%r15),%rax
    3523:	49 8b 34 1f          	mov    (%r15,%rbx,1),%rsi
    3527:	49 89 37             	mov    %rsi,(%r15)
    352a:	49 89 04 1f          	mov    %rax,(%r15,%rbx,1)
    352e:	4c 39 6d c8          	cmp    %r13,-0x38(%rbp)
    3532:	73 56                	jae    358a <_qsort+0x91a>
    3534:	4d 89 ef             	mov    %r13,%r15
    3537:	4d 29 e5             	sub    %r12,%r13
    353a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    353e:	4c 89 fe             	mov    %r15,%rsi
    3541:	4c 89 ef             	mov    %r13,%rdi
    3544:	ff d0                	call   *%rax
    3546:	85 c0                	test   %eax,%eax
    3548:	7e 40                	jle    358a <_qsort+0x91a>
    354a:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
    354e:	45 85 c0             	test   %r8d,%r8d
    3551:	74 cd                	je     3520 <_qsort+0x8b0>
    3553:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3557:	4c 89 e8             	mov    %r13,%rax
    355a:	4f 8d 04 27          	lea    (%r15,%r12,1),%r8
    355e:	0f 84 3c 02 00 00    	je     37a0 <_qsort+0xb30>
    3564:	0f 1f 40 00          	nopl   0x0(%rax)
    3568:	41 0f b6 37          	movzbl (%r15),%esi
    356c:	0f b6 38             	movzbl (%rax),%edi
    356f:	49 83 c7 01          	add    $0x1,%r15
    3573:	48 83 c0 01          	add    $0x1,%rax
    3577:	41 88 7f ff          	mov    %dil,-0x1(%r15)
    357b:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    357f:	4d 39 c7             	cmp    %r8,%r15
    3582:	75 e4                	jne    3568 <_qsort+0x8f8>
    3584:	4c 39 6d c8          	cmp    %r13,-0x38(%rbp)
    3588:	72 aa                	jb     3534 <_qsort+0x8c4>
    358a:	4c 01 65 b0          	add    %r12,-0x50(%rbp)
    358e:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3592:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3596:	48 39 f8             	cmp    %rdi,%rax
    3599:	0f 82 6a ff ff ff    	jb     3509 <_qsort+0x899>
    359f:	e9 7e fe ff ff       	jmp    3422 <_qsort+0x7b2>
    35a4:	4c 01 e0             	add    %r12,%rax
    35a7:	4c 89 e7             	mov    %r12,%rdi
    35aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    35b0:	0f b6 17             	movzbl (%rdi),%edx
    35b3:	44 0f b6 1e          	movzbl (%rsi),%r11d
    35b7:	48 83 c7 01          	add    $0x1,%rdi
    35bb:	48 83 c6 01          	add    $0x1,%rsi
    35bf:	44 88 5f ff          	mov    %r11b,-0x1(%rdi)
    35c3:	88 56 ff             	mov    %dl,-0x1(%rsi)
    35c6:	48 39 f8             	cmp    %rdi,%rax
    35c9:	75 e5                	jne    35b0 <_qsort+0x940>
    35cb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    35cf:	4c 89 d6             	mov    %r10,%rsi
    35d2:	4d 89 fb             	mov    %r15,%r11
    35d5:	48 89 df             	mov    %rbx,%rdi
    35d8:	4d 29 cb             	sub    %r9,%r11
    35db:	48 29 c6             	sub    %rax,%rsi
    35de:	4c 29 fe             	sub    %r15,%rsi
    35e1:	4c 39 de             	cmp    %r11,%rsi
    35e4:	49 0f 47 f3          	cmova  %r11,%rsi
    35e8:	48 85 f6             	test   %rsi,%rsi
    35eb:	0f 84 2e fa ff ff    	je     301f <_qsort+0x3af>
    35f1:	4c 89 d0             	mov    %r10,%rax
    35f4:	48 29 f0             	sub    %rsi,%rax
    35f7:	49 8d 54 35 00       	lea    0x0(%r13,%rsi,1),%rdx
    35fc:	0f 1f 40 00          	nopl   0x0(%rax)
    3600:	0f b6 31             	movzbl (%rcx),%esi
    3603:	44 0f b6 28          	movzbl (%rax),%r13d
    3607:	48 83 c1 01          	add    $0x1,%rcx
    360b:	48 83 c0 01          	add    $0x1,%rax
    360f:	44 88 69 ff          	mov    %r13b,-0x1(%rcx)
    3613:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3617:	48 39 ca             	cmp    %rcx,%rdx
    361a:	75 e4                	jne    3600 <_qsort+0x990>
    361c:	e9 fe f9 ff ff       	jmp    301f <_qsort+0x3af>
    3621:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3625:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    3629:	31 c0                	xor    %eax,%eax
    362b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3630:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    3634:	49 8b 34 c7          	mov    (%r15,%rax,8),%rsi
    3638:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    363c:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    3640:	48 83 c0 01          	add    $0x1,%rax
    3644:	48 39 c7             	cmp    %rax,%rdi
    3647:	75 e7                	jne    3630 <_qsort+0x9c0>
    3649:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    364d:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3651:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    3655:	e9 03 fb ff ff       	jmp    315d <_qsort+0x4ed>
    365a:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    365e:	31 c0                	xor    %eax,%eax
    3660:	49 8b 14 c4          	mov    (%r12,%rax,8),%rdx
    3664:	49 8b 4c c5 00       	mov    0x0(%r13,%rax,8),%rcx
    3669:	49 89 0c c4          	mov    %rcx,(%r12,%rax,8)
    366d:	49 89 54 c5 00       	mov    %rdx,0x0(%r13,%rax,8)
    3672:	48 83 c0 01          	add    $0x1,%rax
    3676:	48 39 c6             	cmp    %rax,%rsi
    3679:	75 e5                	jne    3660 <_qsort+0x9f0>
    367b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    367f:	4c 01 e0             	add    %r12,%rax
    3682:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    3689:	e9 eb f7 ff ff       	jmp    2e79 <_qsort+0x209>
    368e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3692:	4c 89 f6             	mov    %r14,%rsi
    3695:	41 ff d7             	call   *%r15
    3698:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    369c:	85 c0                	test   %eax,%eax
    369e:	0f 88 07 fe ff ff    	js     34ab <_qsort+0x83b>
    36a4:	4d 89 f5             	mov    %r14,%r13
    36a7:	e9 a4 f7 ff ff       	jmp    2e50 <_qsort+0x1e0>
    36ac:	4c 89 ff             	mov    %r15,%rdi
    36af:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    36b3:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    36b7:	41 ff d7             	call   *%r15
    36ba:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    36be:	85 c0                	test   %eax,%eax
    36c0:	0f 88 a3 f6 ff ff    	js     2d69 <_qsort+0xf9>
    36c6:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    36ca:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    36ce:	4c 89 e7             	mov    %r12,%rdi
    36d1:	41 ff d7             	call   *%r15
    36d4:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    36d8:	85 c0                	test   %eax,%eax
    36da:	0f 88 a9 00 00 00    	js     3789 <_qsort+0xb19>
    36e0:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    36e4:	e9 80 f6 ff ff       	jmp    2d69 <_qsort+0xf9>
    36e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    36ed:	4c 89 f7             	mov    %r14,%rdi
    36f0:	ff d0                	call   *%rax
    36f2:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    36f6:	85 c0                	test   %eax,%eax
    36f8:	0f 88 17 f7 ff ff    	js     2e15 <_qsort+0x1a5>
    36fe:	4c 89 ce             	mov    %r9,%rsi
    3701:	4c 89 ff             	mov    %r15,%rdi
    3704:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3708:	ff d0                	call   *%rax
    370a:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    370e:	85 c0                	test   %eax,%eax
    3710:	4d 0f 48 f9          	cmovs  %r9,%r15
    3714:	4d 89 fe             	mov    %r15,%r14
    3717:	e9 f9 f6 ff ff       	jmp    2e15 <_qsort+0x1a5>
    371c:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    3720:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    3724:	4c 89 ef             	mov    %r13,%rdi
    3727:	4c 89 f6             	mov    %r14,%rsi
    372a:	ff d2                	call   *%rdx
    372c:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    3730:	85 c0                	test   %eax,%eax
    3732:	0f 88 84 f6 ff ff    	js     2dbc <_qsort+0x14c>
    3738:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    373c:	4c 89 f6             	mov    %r14,%rsi
    373f:	4c 89 ff             	mov    %r15,%rdi
    3742:	ff d2                	call   *%rdx
    3744:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    3748:	85 c0                	test   %eax,%eax
    374a:	78 1a                	js     3766 <_qsort+0xaf6>
    374c:	4d 89 fd             	mov    %r15,%r13
    374f:	e9 68 f6 ff ff       	jmp    2dbc <_qsort+0x14c>
    3754:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    3758:	4c 89 ff             	mov    %r15,%rdi
    375b:	41 ff d6             	call   *%r14
    375e:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    3762:	85 c0                	test   %eax,%eax
    3764:	78 e6                	js     374c <_qsort+0xadc>
    3766:	4c 8b 6d b8          	mov    -0x48(%rbp),%r13
    376a:	e9 4d f6 ff ff       	jmp    2dbc <_qsort+0x14c>
    376f:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    3773:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    3777:	4c 89 e7             	mov    %r12,%rdi
    377a:	41 ff d7             	call   *%r15
    377d:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    3781:	85 c0                	test   %eax,%eax
    3783:	0f 88 57 ff ff ff    	js     36e0 <_qsort+0xa70>
    3789:	4b 8d 04 74          	lea    (%r12,%r14,2),%rax
    378d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3791:	e9 d3 f5 ff ff       	jmp    2d69 <_qsort+0xf9>
    3796:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    379d:	00 00 00 
    37a0:	31 c0                	xor    %eax,%eax
    37a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    37a8:	49 8b 34 c7          	mov    (%r15,%rax,8),%rsi
    37ac:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    37b1:	49 89 3c c7          	mov    %rdi,(%r15,%rax,8)
    37b5:	49 89 74 c5 00       	mov    %rsi,0x0(%r13,%rax,8)
    37ba:	48 83 c0 01          	add    $0x1,%rax
    37be:	4c 39 f0             	cmp    %r14,%rax
    37c1:	75 e5                	jne    37a8 <_qsort+0xb38>
    37c3:	e9 66 fd ff ff       	jmp    352e <_qsort+0x8be>
    37c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    37cf:	00 

00000000000037d0 <qsort>:
    37d0:	55                   	push   %rbp
    37d1:	48 89 e5             	mov    %rsp,%rbp
    37d4:	41 56                	push   %r14
    37d6:	49 89 ce             	mov    %rcx,%r14
    37d9:	41 55                	push   %r13
    37db:	49 89 d5             	mov    %rdx,%r13
    37de:	41 54                	push   %r12
    37e0:	49 89 fc             	mov    %rdi,%r12
    37e3:	48 89 f7             	mov    %rsi,%rdi
    37e6:	53                   	push   %rbx
    37e7:	48 89 f3             	mov    %rsi,%rbx
    37ea:	e8 00 00 00 00       	call   37ef <qsort+0x1f>
			37eb: R_X86_64_PLT32	flsl-0x4
    37ef:	4c 89 f1             	mov    %r14,%rcx
    37f2:	4c 89 ea             	mov    %r13,%rdx
    37f5:	48 89 de             	mov    %rbx,%rsi
    37f8:	4c 89 e7             	mov    %r12,%rdi
    37fb:	5b                   	pop    %rbx
    37fc:	44 8d 44 00 fe       	lea    -0x2(%rax,%rax,1),%r8d
    3801:	41 5c                	pop    %r12
    3803:	41 5d                	pop    %r13
    3805:	41 5e                	pop    %r14
    3807:	5d                   	pop    %rbp
    3808:	e9 63 f4 ff ff       	jmp    2c70 <_qsort>
    380d:	0f 1f 00             	nopl   (%rax)

0000000000003810 <_qsort>:
    3810:	55                   	push   %rbp
    3811:	49 89 d3             	mov    %rdx,%r11
    3814:	48 89 e5             	mov    %rsp,%rbp
    3817:	41 57                	push   %r15
    3819:	41 56                	push   %r14
    381b:	49 89 fe             	mov    %rdi,%r14
    381e:	41 8d 79 ff          	lea    -0x1(%r9),%edi
    3822:	41 55                	push   %r13
    3824:	41 54                	push   %r12
    3826:	53                   	push   %rbx
    3827:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    382e:	89 bd 74 ff ff ff    	mov    %edi,-0x8c(%rbp)
    3834:	48 89 d7             	mov    %rdx,%rdi
    3837:	48 c1 ef 03          	shr    $0x3,%rdi
    383b:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
    3842:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    3846:	48 89 d7             	mov    %rdx,%rdi
    3849:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    384d:	48 f7 df             	neg    %rdi
    3850:	4c 89 45 a0          	mov    %r8,-0x60(%rbp)
    3854:	45 85 c9             	test   %r9d,%r9d
    3857:	0f 8e d9 03 00 00    	jle    3c36 <_qsort+0x426>
    385d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    3861:	48 89 fb             	mov    %rdi,%rbx
    3864:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3868:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    386f:	4c 09 f0             	or     %r14,%rax
    3872:	a8 07                	test   $0x7,%al
    3874:	0f 84 08 08 00 00    	je     4082 <_qsort+0x872>
    387a:	48 83 bd 78 ff ff ff 	cmpq   $0x6,-0x88(%rbp)
    3881:	06 
    3882:	0f 86 15 08 00 00    	jbe    409d <_qsort+0x88d>
    3888:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    388f:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3893:	48 89 c1             	mov    %rax,%rcx
    3896:	4c 8d 50 ff          	lea    -0x1(%rax),%r10
    389a:	4c 0f af d7          	imul   %rdi,%r10
    389e:	48 d1 e9             	shr    %rcx
    38a1:	48 0f af cf          	imul   %rdi,%rcx
    38a5:	4b 8d 34 16          	lea    (%r14,%r10,1),%rsi
    38a9:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
    38ad:	4d 8d 24 0e          	lea    (%r14,%rcx,1),%r12
    38b1:	48 83 f8 07          	cmp    $0x7,%rax
    38b5:	0f 84 39 01 00 00    	je     39f4 <_qsort+0x1e4>
    38bb:	48 83 f8 28          	cmp    $0x28,%rax
    38bf:	0f 86 af 05 00 00    	jbe    3e74 <_qsort+0x664>
    38c5:	48 c1 e8 03          	shr    $0x3,%rax
    38c9:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    38cd:	4c 89 f6             	mov    %r14,%rsi
    38d0:	48 0f af f8          	imul   %rax,%rdi
    38d4:	49 8d 04 7e          	lea    (%r14,%rdi,2),%rax
    38d8:	4d 8d 3c 3e          	lea    (%r14,%rdi,1),%r15
    38dc:	49 89 fd             	mov    %rdi,%r13
    38df:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    38e3:	4c 89 fa             	mov    %r15,%rdx
    38e6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    38ea:	4c 89 7d c0          	mov    %r15,-0x40(%rbp)
    38ee:	ff d1                	call   *%rcx
    38f0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    38f4:	85 c0                	test   %eax,%eax
    38f6:	0f 88 8e 09 00 00    	js     428a <_qsort+0xa7a>
    38fc:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    3900:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3904:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    3908:	41 ff d7             	call   *%r15
    390b:	85 c0                	test   %eax,%eax
    390d:	0f 8e 3a 0a 00 00    	jle    434d <_qsort+0xb3d>
    3913:	4c 89 ef             	mov    %r13,%rdi
    3916:	4d 89 e7             	mov    %r12,%r15
    3919:	4b 8d 04 2c          	lea    (%r12,%r13,1),%rax
    391d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    3921:	48 f7 df             	neg    %rdi
    3924:	4d 29 ef             	sub    %r13,%r15
    3927:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    392b:	4c 89 e2             	mov    %r12,%rdx
    392e:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
    3932:	4c 89 fe             	mov    %r15,%rsi
    3935:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3939:	ff d1                	call   *%rcx
    393b:	85 c0                	test   %eax,%eax
    393d:	0f 88 b7 09 00 00    	js     42fa <_qsort+0xaea>
    3943:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3947:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    394b:	4c 89 e6             	mov    %r12,%rsi
    394e:	4c 8b 6d a0          	mov    -0x60(%rbp),%r13
    3952:	41 ff d5             	call   *%r13
    3955:	85 c0                	test   %eax,%eax
    3957:	0f 8e d5 09 00 00    	jle    4332 <_qsort+0xb22>
    395d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3961:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
    3965:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3969:	49 01 c5             	add    %rax,%r13
    396c:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    3971:	4c 89 ea             	mov    %r13,%rdx
    3974:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3978:	4c 89 7d b0          	mov    %r15,-0x50(%rbp)
    397c:	4c 89 fe             	mov    %r15,%rsi
    397f:	ff d0                	call   *%rax
    3981:	85 c0                	test   %eax,%eax
    3983:	0f 88 36 09 00 00    	js     42bf <_qsort+0xaaf>
    3989:	4c 8b 7d 98          	mov    -0x68(%rbp),%r15
    398d:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3991:	4c 89 ee             	mov    %r13,%rsi
    3994:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3998:	4c 89 fa             	mov    %r15,%rdx
    399b:	ff d0                	call   *%rax
    399d:	85 c0                	test   %eax,%eax
    399f:	7f 20                	jg     39c1 <_qsort+0x1b1>
    39a1:	4d 89 fd             	mov    %r15,%r13
    39a4:	4c 89 fa             	mov    %r15,%rdx
    39a7:	4c 8b 7d b0          	mov    -0x50(%rbp),%r15
    39ab:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    39af:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    39b3:	4c 89 fe             	mov    %r15,%rsi
    39b6:	ff d0                	call   *%rax
    39b8:	85 c0                	test   %eax,%eax
    39ba:	4d 0f 49 fd          	cmovns %r13,%r15
    39be:	4d 89 fd             	mov    %r15,%r13
    39c1:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    39c5:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    39c9:	4c 89 e2             	mov    %r12,%rdx
    39cc:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    39d0:	41 ff d7             	call   *%r15
    39d3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    39d7:	4c 89 ea             	mov    %r13,%rdx
    39da:	4c 89 e6             	mov    %r12,%rsi
    39dd:	85 c0                	test   %eax,%eax
    39df:	0f 88 73 06 00 00    	js     4058 <_qsort+0x848>
    39e5:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    39e9:	41 ff d7             	call   *%r15
    39ec:	85 c0                	test   %eax,%eax
    39ee:	0f 8e 78 08 00 00    	jle    426c <_qsort+0xa5c>
    39f4:	44 8b 45 b8          	mov    -0x48(%rbp),%r8d
    39f8:	45 85 c0             	test   %r8d,%r8d
    39fb:	0f 85 be 03 00 00    	jne    3dbf <_qsort+0x5af>
    3a01:	49 8b 06             	mov    (%r14),%rax
    3a04:	49 8b 14 24          	mov    (%r12),%rdx
    3a08:	49 89 16             	mov    %rdx,(%r14)
    3a0b:	49 89 04 24          	mov    %rax,(%r12)
    3a0f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a13:	4c 01 f0             	add    %r14,%rax
    3a16:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3a1d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    3a24:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    3a28:	45 31 e4             	xor    %r12d,%r12d
    3a2b:	4c 89 65 b0          	mov    %r12,-0x50(%rbp)
    3a2f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    3a36:	49 89 c7             	mov    %rax,%r15
    3a39:	49 89 fc             	mov    %rdi,%r12
    3a3c:	49 89 fd             	mov    %rdi,%r13
    3a3f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    3a43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3a48:	4c 89 f9             	mov    %r15,%rcx
    3a4b:	4d 39 fc             	cmp    %r15,%r12
    3a4e:	0f 82 ec 00 00 00    	jb     3b40 <_qsort+0x330>
    3a54:	4c 89 7d c0          	mov    %r15,-0x40(%rbp)
    3a58:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3a5c:	4c 89 f2             	mov    %r14,%rdx
    3a5f:	4c 89 fe             	mov    %r15,%rsi
    3a62:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3a66:	ff d0                	call   *%rax
    3a68:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    3a6c:	85 c0                	test   %eax,%eax
    3a6e:	0f 8e 9c 02 00 00    	jle    3d10 <_qsort+0x500>
    3a74:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    3a78:	4d 89 ee             	mov    %r13,%r14
    3a7b:	4d 89 e5             	mov    %r12,%r13
    3a7e:	4c 8b 65 a0          	mov    -0x60(%rbp),%r12
    3a82:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    3a86:	eb 2d                	jmp    3ab5 <_qsort+0x2a5>
    3a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3a8f:	00 
    3a90:	49 8b 45 00          	mov    0x0(%r13),%rax
    3a94:	49 8b 16             	mov    (%r14),%rdx
    3a97:	49 89 55 00          	mov    %rdx,0x0(%r13)
    3a9b:	49 89 06             	mov    %rax,(%r14)
    3a9e:	48 c7 45 b0 01 00 00 	movq   $0x1,-0x50(%rbp)
    3aa5:	00 
    3aa6:	49 01 de             	add    %rbx,%r14
    3aa9:	49 01 dd             	add    %rbx,%r13
    3aac:	4d 39 fd             	cmp    %r15,%r13
    3aaf:	0f 82 03 02 00 00    	jb     3cb8 <_qsort+0x4a8>
    3ab5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    3ab9:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3abd:	4c 89 ee             	mov    %r13,%rsi
    3ac0:	41 ff d4             	call   *%r12
    3ac3:	85 c0                	test   %eax,%eax
    3ac5:	0f 88 9d 01 00 00    	js     3c68 <_qsort+0x458>
    3acb:	75 dc                	jne    3aa9 <_qsort+0x299>
    3acd:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    3ad0:	85 c9                	test   %ecx,%ecx
    3ad2:	74 bc                	je     3a90 <_qsort+0x280>
    3ad4:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3ad8:	74 36                	je     3b10 <_qsort+0x300>
    3ada:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3ade:	4c 89 f2             	mov    %r14,%rdx
    3ae1:	4c 89 e8             	mov    %r13,%rax
    3ae4:	4d 8d 4c 3d 00       	lea    0x0(%r13,%rdi,1),%r9
    3ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3af0:	0f b6 08             	movzbl (%rax),%ecx
    3af3:	0f b6 32             	movzbl (%rdx),%esi
    3af6:	48 83 c0 01          	add    $0x1,%rax
    3afa:	48 83 c2 01          	add    $0x1,%rdx
    3afe:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3b02:	88 4a ff             	mov    %cl,-0x1(%rdx)
    3b05:	4c 39 c8             	cmp    %r9,%rax
    3b08:	75 e6                	jne    3af0 <_qsort+0x2e0>
    3b0a:	eb 92                	jmp    3a9e <_qsort+0x28e>
    3b0c:	0f 1f 40 00          	nopl   0x0(%rax)
    3b10:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    3b14:	31 c0                	xor    %eax,%eax
    3b16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3b1d:	00 00 00 
    3b20:	49 8b 54 c5 00       	mov    0x0(%r13,%rax,8),%rdx
    3b25:	49 8b 0c c6          	mov    (%r14,%rax,8),%rcx
    3b29:	49 89 4c c5 00       	mov    %rcx,0x0(%r13,%rax,8)
    3b2e:	49 89 14 c6          	mov    %rdx,(%r14,%rax,8)
    3b32:	48 83 c0 01          	add    $0x1,%rax
    3b36:	48 39 f0             	cmp    %rsi,%rax
    3b39:	75 e5                	jne    3b20 <_qsort+0x310>
    3b3b:	e9 5e ff ff ff       	jmp    3a9e <_qsort+0x28e>
    3b40:	4c 89 e8             	mov    %r13,%rax
    3b43:	4c 89 65 98          	mov    %r12,-0x68(%rbp)
    3b47:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    3b4b:	4d 89 fd             	mov    %r15,%r13
    3b4e:	49 89 c7             	mov    %rax,%r15
    3b51:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    3b55:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
    3b5c:	48 89 f0             	mov    %rsi,%rax
    3b5f:	48 0f af c7          	imul   %rdi,%rax
    3b63:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    3b67:	4d 8d 1c 06          	lea    (%r14,%rax,1),%r11
    3b6b:	4c 89 e8             	mov    %r13,%rax
    3b6e:	48 29 f8             	sub    %rdi,%rax
    3b71:	4c 29 f7             	sub    %r14,%rdi
    3b74:	48 89 fa             	mov    %rdi,%rdx
    3b77:	48 39 c7             	cmp    %rax,%rdi
    3b7a:	48 0f 47 d0          	cmova  %rax,%rdx
    3b7e:	48 85 d2             	test   %rdx,%rdx
    3b81:	0f 85 83 02 00 00    	jne    3e0a <_qsort+0x5fa>
    3b87:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    3b8b:	4d 89 d8             	mov    %r11,%r8
    3b8e:	4d 89 fa             	mov    %r15,%r10
    3b91:	48 89 df             	mov    %rbx,%rdi
    3b94:	49 29 f0             	sub    %rsi,%r8
    3b97:	49 29 d2             	sub    %rdx,%r10
    3b9a:	4d 29 f8             	sub    %r15,%r8
    3b9d:	4d 39 d0             	cmp    %r10,%r8
    3ba0:	4d 0f 47 c2          	cmova  %r10,%r8
    3ba4:	4d 85 c0             	test   %r8,%r8
    3ba7:	74 3a                	je     3be3 <_qsort+0x3d3>
    3ba9:	4c 89 da             	mov    %r11,%rdx
    3bac:	4c 29 c2             	sub    %r8,%rdx
    3baf:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3bb3:	0f 87 1c 06 00 00    	ja     41d5 <_qsort+0x9c5>
    3bb9:	4c 89 c1             	mov    %r8,%rcx
    3bbc:	45 31 c0             	xor    %r8d,%r8d
    3bbf:	48 c1 e9 03          	shr    $0x3,%rcx
    3bc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3bc8:	4b 8b 74 c5 00       	mov    0x0(%r13,%r8,8),%rsi
    3bcd:	4e 8b 0c c2          	mov    (%rdx,%r8,8),%r9
    3bd1:	4f 89 4c c5 00       	mov    %r9,0x0(%r13,%r8,8)
    3bd6:	4a 89 34 c2          	mov    %rsi,(%rdx,%r8,8)
    3bda:	49 83 c0 01          	add    $0x1,%r8
    3bde:	49 39 c8             	cmp    %rcx,%r8
    3be1:	75 e5                	jne    3bc8 <_qsort+0x3b8>
    3be3:	4d 85 e4             	test   %r12,%r12
    3be6:	0f 84 95 02 00 00    	je     3e81 <_qsort+0x671>
    3bec:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    3bf0:	0f 82 c1 03 00 00    	jb     3fb7 <_qsort+0x7a7>
    3bf6:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3bfa:	4c 39 d7             	cmp    %r10,%rdi
    3bfd:	0f 83 f7 03 00 00    	jae    3ffa <_qsort+0x7ea>
    3c03:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3c07:	31 d2                	xor    %edx,%edx
    3c09:	83 ad 74 ff ff ff 01 	subl   $0x1,-0x8c(%rbp)
    3c10:	4c 29 f8             	sub    %r15,%rax
    3c13:	4d 8d 34 03          	lea    (%r11,%rax,1),%r14
    3c17:	4c 89 d0             	mov    %r10,%rax
    3c1a:	48 f7 f7             	div    %rdi
    3c1d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    3c24:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    3c2a:	83 f8 ff             	cmp    $0xffffffff,%eax
    3c2d:	0f 85 31 fc ff ff    	jne    3864 <_qsort+0x54>
    3c33:	49 89 fb             	mov    %rdi,%r11
    3c36:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
    3c3a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3c3e:	4c 89 f7             	mov    %r14,%rdi
    3c41:	4c 89 da             	mov    %r11,%rdx
    3c44:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
    3c4b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3c52:	5b                   	pop    %rbx
    3c53:	41 5c                	pop    %r12
    3c55:	41 5d                	pop    %r13
    3c57:	41 5e                	pop    %r14
    3c59:	41 5f                	pop    %r15
    3c5b:	5d                   	pop    %rbp
    3c5c:	e9 00 00 00 00       	jmp    3c61 <_qsort+0x451>
			3c5d: R_X86_64_PLT32	heapsort_r-0x4
    3c61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3c68:	4d 89 ec             	mov    %r13,%r12
    3c6b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    3c6f:	4d 89 f5             	mov    %r14,%r13
    3c72:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
    3c76:	4d 39 fc             	cmp    %r15,%r12
    3c79:	0f 82 c1 fe ff ff    	jb     3b40 <_qsort+0x330>
    3c7f:	8b 55 b8             	mov    -0x48(%rbp),%edx
    3c82:	85 d2                	test   %edx,%edx
    3c84:	75 52                	jne    3cd8 <_qsort+0x4c8>
    3c86:	49 8b 07             	mov    (%r15),%rax
    3c89:	49 8b 14 24          	mov    (%r12),%rdx
    3c8d:	49 89 17             	mov    %rdx,(%r15)
    3c90:	49 89 04 24          	mov    %rax,(%r12)
    3c94:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3c98:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    3c9c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ca0:	48 c7 45 b0 01 00 00 	movq   $0x1,-0x50(%rbp)
    3ca7:	00 
    3ca8:	49 29 c4             	sub    %rax,%r12
    3cab:	49 89 ff             	mov    %rdi,%r15
    3cae:	e9 95 fd ff ff       	jmp    3a48 <_qsort+0x238>
    3cb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3cb8:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    3cbc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    3cc0:	4c 89 6d 98          	mov    %r13,-0x68(%rbp)
    3cc4:	4d 89 fd             	mov    %r15,%r13
    3cc7:	4d 89 f7             	mov    %r14,%r15
    3cca:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
    3cce:	e9 7e fe ff ff       	jmp    3b51 <_qsort+0x341>
    3cd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3cd8:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3cdc:	4c 89 e0             	mov    %r12,%rax
    3cdf:	4c 01 ff             	add    %r15,%rdi
    3ce2:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3ce6:	74 68                	je     3d50 <_qsort+0x540>
    3ce8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3cef:	00 
    3cf0:	0f b6 11             	movzbl (%rcx),%edx
    3cf3:	0f b6 30             	movzbl (%rax),%esi
    3cf6:	48 83 c1 01          	add    $0x1,%rcx
    3cfa:	48 83 c0 01          	add    $0x1,%rax
    3cfe:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
    3d02:	88 50 ff             	mov    %dl,-0x1(%rax)
    3d05:	48 39 f9             	cmp    %rdi,%rcx
    3d08:	75 e6                	jne    3cf0 <_qsort+0x4e0>
    3d0a:	eb 90                	jmp    3c9c <_qsort+0x48c>
    3d0c:	0f 1f 40 00          	nopl   0x0(%rax)
    3d10:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    3d14:	49 8d 3c 37          	lea    (%r15,%rsi,1),%rdi
    3d18:	75 91                	jne    3cab <_qsort+0x49b>
    3d1a:	8b 7d b8             	mov    -0x48(%rbp),%edi
    3d1d:	85 ff                	test   %edi,%edi
    3d1f:	75 65                	jne    3d86 <_qsort+0x576>
    3d21:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    3d25:	49 8b 17             	mov    (%r15),%rdx
    3d28:	48 8b 07             	mov    (%rdi),%rax
    3d2b:	48 89 17             	mov    %rdx,(%rdi)
    3d2e:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
    3d32:	49 89 07             	mov    %rax,(%r15)
    3d35:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3d39:	4c 89 55 80          	mov    %r10,-0x80(%rbp)
    3d3d:	48 c7 45 b0 01 00 00 	movq   $0x1,-0x50(%rbp)
    3d44:	00 
    3d45:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    3d49:	e9 5d ff ff ff       	jmp    3cab <_qsort+0x49b>
    3d4e:	66 90                	xchg   %ax,%ax
    3d50:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    3d54:	31 c0                	xor    %eax,%eax
    3d56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3d5d:	00 00 00 
    3d60:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    3d64:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    3d68:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    3d6c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    3d70:	48 83 c0 01          	add    $0x1,%rax
    3d74:	48 39 c6             	cmp    %rax,%rsi
    3d77:	75 e7                	jne    3d60 <_qsort+0x550>
    3d79:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3d7d:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    3d81:	e9 16 ff ff ff       	jmp    3c9c <_qsort+0x48c>
    3d86:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3d8a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3d8e:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3d92:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    3d96:	0f 84 66 04 00 00    	je     4202 <_qsort+0x9f2>
    3d9c:	0f 1f 40 00          	nopl   0x0(%rax)
    3da0:	0f b6 10             	movzbl (%rax),%edx
    3da3:	0f b6 31             	movzbl (%rcx),%esi
    3da6:	48 83 c0 01          	add    $0x1,%rax
    3daa:	48 83 c1 01          	add    $0x1,%rcx
    3dae:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3db2:	88 51 ff             	mov    %dl,-0x1(%rcx)
    3db5:	49 39 c2             	cmp    %rax,%r10
    3db8:	75 e6                	jne    3da0 <_qsort+0x590>
    3dba:	e9 76 ff ff ff       	jmp    3d35 <_qsort+0x525>
    3dbf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3dc3:	4c 01 f0             	add    %r14,%rax
    3dc6:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3dca:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3dd1:	4c 89 f0             	mov    %r14,%rax
    3dd4:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
    3ddb:	0f 84 59 04 00 00    	je     423a <_qsort+0xa2a>
    3de1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3de8:	0f b6 10             	movzbl (%rax),%edx
    3deb:	41 0f b6 0c 24       	movzbl (%r12),%ecx
    3df0:	48 83 c0 01          	add    $0x1,%rax
    3df4:	49 83 c4 01          	add    $0x1,%r12
    3df8:	88 48 ff             	mov    %cl,-0x1(%rax)
    3dfb:	41 88 54 24 ff       	mov    %dl,-0x1(%r12)
    3e00:	48 39 f0             	cmp    %rsi,%rax
    3e03:	75 e3                	jne    3de8 <_qsort+0x5d8>
    3e05:	e9 13 fc ff ff       	jmp    3a1d <_qsort+0x20d>
    3e0a:	4c 89 ef             	mov    %r13,%rdi
    3e0d:	48 29 d7             	sub    %rdx,%rdi
    3e10:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3e14:	0f 87 61 03 00 00    	ja     417b <_qsort+0x96b>
    3e1a:	48 c1 ea 03          	shr    $0x3,%rdx
    3e1e:	31 c9                	xor    %ecx,%ecx
    3e20:	49 8b 34 ce          	mov    (%r14,%rcx,8),%rsi
    3e24:	4c 8b 04 cf          	mov    (%rdi,%rcx,8),%r8
    3e28:	4d 89 04 ce          	mov    %r8,(%r14,%rcx,8)
    3e2c:	48 89 34 cf          	mov    %rsi,(%rdi,%rcx,8)
    3e30:	48 83 c1 01          	add    $0x1,%rcx
    3e34:	48 39 ca             	cmp    %rcx,%rdx
    3e37:	75 e7                	jne    3e20 <_qsort+0x610>
    3e39:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    3e3d:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    3e41:	4d 89 fa             	mov    %r15,%r10
    3e44:	49 29 ca             	sub    %rcx,%r10
    3e47:	4c 89 d9             	mov    %r11,%rcx
    3e4a:	48 89 f7             	mov    %rsi,%rdi
    3e4d:	48 29 f1             	sub    %rsi,%rcx
    3e50:	48 f7 df             	neg    %rdi
    3e53:	4c 29 f9             	sub    %r15,%rcx
    3e56:	4c 39 d1             	cmp    %r10,%rcx
    3e59:	49 0f 47 ca          	cmova  %r10,%rcx
    3e5d:	49 89 c8             	mov    %rcx,%r8
    3e60:	48 85 c9             	test   %rcx,%rcx
    3e63:	0f 84 7a fd ff ff    	je     3be3 <_qsort+0x3d3>
    3e69:	4c 89 da             	mov    %r11,%rdx
    3e6c:	4c 29 c2             	sub    %r8,%rdx
    3e6f:	e9 45 fd ff ff       	jmp    3bb9 <_qsort+0x3a9>
    3e74:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    3e78:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
    3e7c:	e9 40 fb ff ff       	jmp    39c1 <_qsort+0x1b1>
    3e81:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    3e88:	48 c1 ea 02          	shr    $0x2,%rdx
    3e8c:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    3e90:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    3e94:	4c 39 9d 68 ff ff ff 	cmp    %r11,-0x98(%rbp)
    3e9b:	0f 83 59 01 00 00    	jae    3ffa <_qsort+0x7ea>
    3ea1:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    3ea8:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    3eac:	45 31 ed             	xor    %r13d,%r13d
    3eaf:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3eb6:	4c 89 bd 58 ff ff ff 	mov    %r15,-0xa8(%rbp)
    3ebd:	4c 89 9d 78 ff ff ff 	mov    %r11,-0x88(%rbp)
    3ec4:	4c 89 95 60 ff ff ff 	mov    %r10,-0xa0(%rbp)
    3ecb:	48 89 9d 50 ff ff ff 	mov    %rbx,-0xb0(%rbp)
    3ed2:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    3ed6:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    3eda:	4d 89 ee             	mov    %r13,%r14
    3edd:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
    3ee1:	49 89 df             	mov    %rbx,%r15
    3ee4:	4d 89 f5             	mov    %r14,%r13
    3ee7:	48 89 d3             	mov    %rdx,%rbx
    3eea:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    3eee:	49 89 c6             	mov    %rax,%r14
    3ef1:	eb 25                	jmp    3f18 <_qsort+0x708>
    3ef3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3ef8:	4b 8b 04 3c          	mov    (%r12,%r15,1),%rax
    3efc:	49 8b 14 24          	mov    (%r12),%rdx
    3f00:	4b 89 14 3c          	mov    %rdx,(%r12,%r15,1)
    3f04:	49 89 04 24          	mov    %rax,(%r12)
    3f08:	49 83 c5 01          	add    $0x1,%r13
    3f0c:	4d 29 fe             	sub    %r15,%r14
    3f0f:	4c 39 6d 90          	cmp    %r13,-0x70(%rbp)
    3f13:	72 71                	jb     3f86 <_qsort+0x776>
    3f15:	4c 89 e3             	mov    %r12,%rbx
    3f18:	48 39 5d c0          	cmp    %rbx,-0x40(%rbp)
    3f1c:	0f 83 14 01 00 00    	jae    4036 <_qsort+0x826>
    3f22:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3f26:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3f2a:	48 89 da             	mov    %rbx,%rdx
    3f2d:	4c 8d 24 03          	lea    (%rbx,%rax,1),%r12
    3f31:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3f35:	4c 89 e6             	mov    %r12,%rsi
    3f38:	ff d0                	call   *%rax
    3f3a:	85 c0                	test   %eax,%eax
    3f3c:	0f 8e f4 00 00 00    	jle    4036 <_qsort+0x826>
    3f42:	8b 45 b8             	mov    -0x48(%rbp),%eax
    3f45:	85 c0                	test   %eax,%eax
    3f47:	74 af                	je     3ef8 <_qsort+0x6e8>
    3f49:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3f4d:	4c 89 e0             	mov    %r12,%rax
    3f50:	0f 84 b6 00 00 00    	je     400c <_qsort+0x7fc>
    3f56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3f5d:	00 00 00 
    3f60:	0f b6 13             	movzbl (%rbx),%edx
    3f63:	0f b6 08             	movzbl (%rax),%ecx
    3f66:	48 83 c3 01          	add    $0x1,%rbx
    3f6a:	48 83 c0 01          	add    $0x1,%rax
    3f6e:	88 4b ff             	mov    %cl,-0x1(%rbx)
    3f71:	88 50 ff             	mov    %dl,-0x1(%rax)
    3f74:	4c 39 f3             	cmp    %r14,%rbx
    3f77:	75 e7                	jne    3f60 <_qsort+0x750>
    3f79:	49 83 c5 01          	add    $0x1,%r13
    3f7d:	4d 29 fe             	sub    %r15,%r14
    3f80:	4c 39 6d 90          	cmp    %r13,-0x70(%rbp)
    3f84:	73 8f                	jae    3f15 <_qsort+0x705>
    3f86:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    3f8d:	4c 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%r15
    3f94:	4c 8b 9d 78 ff ff ff 	mov    -0x88(%rbp),%r11
    3f9b:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
    3fa2:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
    3fa6:	48 8b 9d 50 ff ff ff 	mov    -0xb0(%rbp),%rbx
    3fad:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    3fb1:	0f 83 3f fc ff ff    	jae    3bf6 <_qsort+0x3e6>
    3fb7:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3fbb:	31 d2                	xor    %edx,%edx
    3fbd:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
    3fc1:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
    3fc5:	44 8b 8d 74 ff ff ff 	mov    -0x8c(%rbp),%r9d
    3fcc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3fd0:	4c 89 5d c0          	mov    %r11,-0x40(%rbp)
    3fd4:	48 f7 f7             	div    %rdi
    3fd7:	48 89 fa             	mov    %rdi,%rdx
    3fda:	4c 89 f7             	mov    %r14,%rdi
    3fdd:	48 89 c6             	mov    %rax,%rsi
    3fe0:	e8 2b f8 ff ff       	call   3810 <_qsort>
    3fe5:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
    3fe9:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3fed:	4c 8b 5d c0          	mov    -0x40(%rbp),%r11
    3ff1:	4c 39 d7             	cmp    %r10,%rdi
    3ff4:	0f 82 09 fc ff ff    	jb     3c03 <_qsort+0x3f3>
    3ffa:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    4001:	5b                   	pop    %rbx
    4002:	41 5c                	pop    %r12
    4004:	41 5d                	pop    %r13
    4006:	41 5e                	pop    %r14
    4008:	41 5f                	pop    %r15
    400a:	5d                   	pop    %rbp
    400b:	c3                   	ret    
    400c:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    4010:	31 c0                	xor    %eax,%eax
    4012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4018:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    401c:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    4020:	48 89 0c c3          	mov    %rcx,(%rbx,%rax,8)
    4024:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    4028:	48 83 c0 01          	add    $0x1,%rax
    402c:	48 39 c6             	cmp    %rax,%rsi
    402f:	75 e7                	jne    4018 <_qsort+0x808>
    4031:	e9 d2 fe ff ff       	jmp    3f08 <_qsort+0x6f8>
    4036:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    403a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    4041:	4d 89 ee             	mov    %r13,%r14
    4044:	4c 89 fb             	mov    %r15,%rbx
    4047:	48 39 c2             	cmp    %rax,%rdx
    404a:	0f 82 8d fe ff ff    	jb     3edd <_qsort+0x6cd>
    4050:	eb a8                	jmp    3ffa <_qsort+0x7ea>
    4052:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4058:	41 ff d7             	call   *%r15
    405b:	85 c0                	test   %eax,%eax
    405d:	0f 88 91 f9 ff ff    	js     39f4 <_qsort+0x1e4>
    4063:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    4067:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    406b:	4c 89 ea             	mov    %r13,%rdx
    406e:	41 ff d7             	call   *%r15
    4071:	85 c0                	test   %eax,%eax
    4073:	0f 88 09 02 00 00    	js     4282 <_qsort+0xa72>
    4079:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    407d:	e9 72 f9 ff ff       	jmp    39f4 <_qsort+0x1e4>
    4082:	31 c0                	xor    %eax,%eax
    4084:	48 83 7d a8 08       	cmpq   $0x8,-0x58(%rbp)
    4089:	0f 95 c0             	setne  %al
    408c:	48 83 bd 78 ff ff ff 	cmpq   $0x6,-0x88(%rbp)
    4093:	06 
    4094:	89 45 b8             	mov    %eax,-0x48(%rbp)
    4097:	0f 87 eb f7 ff ff    	ja     3888 <_qsort+0x78>
    409d:	4c 8b 5d a8          	mov    -0x58(%rbp),%r11
    40a1:	4c 8b a5 78 ff ff ff 	mov    -0x88(%rbp),%r12
    40a8:	4d 0f af e3          	imul   %r11,%r12
    40ac:	4c 89 db             	mov    %r11,%rbx
    40af:	4f 8d 3c 1e          	lea    (%r14,%r11,1),%r15
    40b3:	48 f7 db             	neg    %rbx
    40b6:	4b 8d 04 26          	lea    (%r14,%r12,1),%rax
    40ba:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    40be:	49 39 c7             	cmp    %rax,%r15
    40c1:	0f 83 33 ff ff ff    	jae    3ffa <_qsort+0x7ea>
    40c7:	4c 8b 65 88          	mov    -0x78(%rbp),%r12
    40cb:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    40cf:	4c 89 f8             	mov    %r15,%rax
    40d2:	4d 89 de             	mov    %r11,%r14
    40d5:	49 89 df             	mov    %rbx,%r15
    40d8:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    40dc:	0f 83 84 00 00 00    	jae    4166 <_qsort+0x956>
    40e2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    40e6:	48 89 c3             	mov    %rax,%rbx
    40e9:	eb 1d                	jmp    4108 <_qsort+0x8f8>
    40eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    40f0:	49 8b 45 00          	mov    0x0(%r13),%rax
    40f4:	4b 8b 74 3d 00       	mov    0x0(%r13,%r15,1),%rsi
    40f9:	49 89 75 00          	mov    %rsi,0x0(%r13)
    40fd:	4b 89 44 3d 00       	mov    %rax,0x0(%r13,%r15,1)
    4102:	48 39 5d c0          	cmp    %rbx,-0x40(%rbp)
    4106:	73 5a                	jae    4162 <_qsort+0x952>
    4108:	49 89 dd             	mov    %rbx,%r13
    410b:	4c 29 f3             	sub    %r14,%rbx
    410e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4112:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4116:	4c 89 ea             	mov    %r13,%rdx
    4119:	48 89 de             	mov    %rbx,%rsi
    411c:	ff d0                	call   *%rax
    411e:	85 c0                	test   %eax,%eax
    4120:	7e 40                	jle    4162 <_qsort+0x952>
    4122:	44 8b 4d b8          	mov    -0x48(%rbp),%r9d
    4126:	45 85 c9             	test   %r9d,%r9d
    4129:	74 c5                	je     40f0 <_qsort+0x8e0>
    412b:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    412f:	48 89 d8             	mov    %rbx,%rax
    4132:	4f 8d 44 35 00       	lea    0x0(%r13,%r14,1),%r8
    4137:	0f 84 33 02 00 00    	je     4370 <_qsort+0xb60>
    413d:	0f 1f 00             	nopl   (%rax)
    4140:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
    4145:	0f b6 08             	movzbl (%rax),%ecx
    4148:	49 83 c5 01          	add    $0x1,%r13
    414c:	48 83 c0 01          	add    $0x1,%rax
    4150:	41 88 4d ff          	mov    %cl,-0x1(%r13)
    4154:	88 50 ff             	mov    %dl,-0x1(%rax)
    4157:	4d 39 c5             	cmp    %r8,%r13
    415a:	75 e4                	jne    4140 <_qsort+0x930>
    415c:	48 39 5d c0          	cmp    %rbx,-0x40(%rbp)
    4160:	72 a6                	jb     4108 <_qsort+0x8f8>
    4162:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4166:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    416a:	4c 01 f0             	add    %r14,%rax
    416d:	48 39 f8             	cmp    %rdi,%rax
    4170:	0f 82 62 ff ff ff    	jb     40d8 <_qsort+0x8c8>
    4176:	e9 7f fe ff ff       	jmp    3ffa <_qsort+0x7ea>
    417b:	4c 01 f2             	add    %r14,%rdx
    417e:	4d 89 f0             	mov    %r14,%r8
    4181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4188:	41 0f b6 30          	movzbl (%r8),%esi
    418c:	44 0f b6 0f          	movzbl (%rdi),%r9d
    4190:	49 83 c0 01          	add    $0x1,%r8
    4194:	48 83 c7 01          	add    $0x1,%rdi
    4198:	45 88 48 ff          	mov    %r9b,-0x1(%r8)
    419c:	40 88 77 ff          	mov    %sil,-0x1(%rdi)
    41a0:	4c 39 c2             	cmp    %r8,%rdx
    41a3:	75 e3                	jne    4188 <_qsort+0x978>
    41a5:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    41a9:	4d 89 fa             	mov    %r15,%r10
    41ac:	4d 89 d8             	mov    %r11,%r8
    41af:	48 89 df             	mov    %rbx,%rdi
    41b2:	49 29 f2             	sub    %rsi,%r10
    41b5:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    41b9:	49 29 f0             	sub    %rsi,%r8
    41bc:	4d 29 f8             	sub    %r15,%r8
    41bf:	4d 39 d0             	cmp    %r10,%r8
    41c2:	4d 0f 47 c2          	cmova  %r10,%r8
    41c6:	4d 85 c0             	test   %r8,%r8
    41c9:	0f 84 14 fa ff ff    	je     3be3 <_qsort+0x3d3>
    41cf:	4c 89 da             	mov    %r11,%rdx
    41d2:	4c 29 c2             	sub    %r8,%rdx
    41d5:	4b 8d 74 05 00       	lea    0x0(%r13,%r8,1),%rsi
    41da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    41e0:	44 0f b6 01          	movzbl (%rcx),%r8d
    41e4:	44 0f b6 0a          	movzbl (%rdx),%r9d
    41e8:	48 83 c1 01          	add    $0x1,%rcx
    41ec:	48 83 c2 01          	add    $0x1,%rdx
    41f0:	44 88 49 ff          	mov    %r9b,-0x1(%rcx)
    41f4:	44 88 42 ff          	mov    %r8b,-0x1(%rdx)
    41f8:	48 39 ce             	cmp    %rcx,%rsi
    41fb:	75 e3                	jne    41e0 <_qsort+0x9d0>
    41fd:	e9 e1 f9 ff ff       	jmp    3be3 <_qsort+0x3d3>
    4202:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    4206:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    420a:	31 c0                	xor    %eax,%eax
    420c:	0f 1f 40 00          	nopl   0x0(%rax)
    4210:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    4214:	49 8b 34 c7          	mov    (%r15,%rax,8),%rsi
    4218:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    421c:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    4220:	48 83 c0 01          	add    $0x1,%rax
    4224:	48 39 c7             	cmp    %rax,%rdi
    4227:	75 e7                	jne    4210 <_qsort+0xa00>
    4229:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    422d:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    4231:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    4235:	e9 fb fa ff ff       	jmp    3d35 <_qsort+0x525>
    423a:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    423e:	31 c0                	xor    %eax,%eax
    4240:	49 8b 14 c6          	mov    (%r14,%rax,8),%rdx
    4244:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    4248:	49 89 0c c6          	mov    %rcx,(%r14,%rax,8)
    424c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    4250:	48 83 c0 01          	add    $0x1,%rax
    4254:	48 39 c6             	cmp    %rax,%rsi
    4257:	75 e7                	jne    4240 <_qsort+0xa30>
    4259:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    425d:	4c 01 f0             	add    %r14,%rax
    4260:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    4267:	e9 b1 f7 ff ff       	jmp    3a1d <_qsort+0x20d>
    426c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    4270:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4274:	4c 89 ea             	mov    %r13,%rdx
    4277:	41 ff d7             	call   *%r15
    427a:	85 c0                	test   %eax,%eax
    427c:	0f 88 f7 fd ff ff    	js     4079 <_qsort+0x869>
    4282:	4d 89 ec             	mov    %r13,%r12
    4285:	e9 6a f7 ff ff       	jmp    39f4 <_qsort+0x1e4>
    428a:	4c 89 fe             	mov    %r15,%rsi
    428d:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4291:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    4295:	41 ff d7             	call   *%r15
    4298:	85 c0                	test   %eax,%eax
    429a:	0f 88 73 f6 ff ff    	js     3913 <_qsort+0x103>
    42a0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    42a4:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    42a8:	4c 89 f6             	mov    %r14,%rsi
    42ab:	41 ff d7             	call   *%r15
    42ae:	85 c0                	test   %eax,%eax
    42b0:	0f 88 ad 00 00 00    	js     4363 <_qsort+0xb53>
    42b6:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    42ba:	e9 54 f6 ff ff       	jmp    3913 <_qsort+0x103>
    42bf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    42c3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    42c7:	4c 89 ee             	mov    %r13,%rsi
    42ca:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    42ce:	ff d0                	call   *%rax
    42d0:	85 c0                	test   %eax,%eax
    42d2:	0f 88 e9 f6 ff ff    	js     39c1 <_qsort+0x1b1>
    42d8:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
    42dc:	4c 89 fe             	mov    %r15,%rsi
    42df:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    42e3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    42e7:	4c 89 ea             	mov    %r13,%rdx
    42ea:	ff d0                	call   *%rax
    42ec:	85 c0                	test   %eax,%eax
    42ee:	4d 0f 48 fd          	cmovs  %r13,%r15
    42f2:	4d 89 fd             	mov    %r15,%r13
    42f5:	e9 c7 f6 ff ff       	jmp    39c1 <_qsort+0x1b1>
    42fa:	4c 8b 6d b0          	mov    -0x50(%rbp),%r13
    42fe:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4302:	4c 89 e6             	mov    %r12,%rsi
    4305:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    4309:	4c 89 ea             	mov    %r13,%rdx
    430c:	ff d1                	call   *%rcx
    430e:	85 c0                	test   %eax,%eax
    4310:	0f 88 47 f6 ff ff    	js     395d <_qsort+0x14d>
    4316:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    431a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    431e:	4c 89 ea             	mov    %r13,%rdx
    4321:	4c 89 fe             	mov    %r15,%rsi
    4324:	ff d1                	call   *%rcx
    4326:	85 c0                	test   %eax,%eax
    4328:	78 1a                	js     4344 <_qsort+0xb34>
    432a:	4d 89 fc             	mov    %r15,%r12
    432d:	e9 2b f6 ff ff       	jmp    395d <_qsort+0x14d>
    4332:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4336:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    433a:	4c 89 fe             	mov    %r15,%rsi
    433d:	41 ff d5             	call   *%r13
    4340:	85 c0                	test   %eax,%eax
    4342:	78 e6                	js     432a <_qsort+0xb1a>
    4344:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    4348:	e9 10 f6 ff ff       	jmp    395d <_qsort+0x14d>
    434d:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4351:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4355:	4c 89 f6             	mov    %r14,%rsi
    4358:	41 ff d7             	call   *%r15
    435b:	85 c0                	test   %eax,%eax
    435d:	0f 88 53 ff ff ff    	js     42b6 <_qsort+0xaa6>
    4363:	4b 8d 04 6e          	lea    (%r14,%r13,2),%rax
    4367:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    436b:	e9 a3 f5 ff ff       	jmp    3913 <_qsort+0x103>
    4370:	31 c0                	xor    %eax,%eax
    4372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4378:	49 8b 54 c5 00       	mov    0x0(%r13,%rax,8),%rdx
    437d:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
    4381:	49 89 4c c5 00       	mov    %rcx,0x0(%r13,%rax,8)
    4386:	48 89 14 c3          	mov    %rdx,(%rbx,%rax,8)
    438a:	48 83 c0 01          	add    $0x1,%rax
    438e:	4c 39 e0             	cmp    %r12,%rax
    4391:	75 e5                	jne    4378 <_qsort+0xb68>
    4393:	e9 6a fd ff ff       	jmp    4102 <_qsort+0x8f2>
    4398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    439f:	00 

00000000000043a0 <qsort_r>:
    43a0:	55                   	push   %rbp
    43a1:	48 89 e5             	mov    %rsp,%rbp
    43a4:	41 57                	push   %r15
    43a6:	4d 89 c7             	mov    %r8,%r15
    43a9:	41 56                	push   %r14
    43ab:	49 89 ce             	mov    %rcx,%r14
    43ae:	41 55                	push   %r13
    43b0:	49 89 d5             	mov    %rdx,%r13
    43b3:	41 54                	push   %r12
    43b5:	49 89 fc             	mov    %rdi,%r12
    43b8:	48 89 f7             	mov    %rsi,%rdi
    43bb:	53                   	push   %rbx
    43bc:	48 89 f3             	mov    %rsi,%rbx
    43bf:	48 83 ec 08          	sub    $0x8,%rsp
    43c3:	e8 00 00 00 00       	call   43c8 <qsort_r+0x28>
			43c4: R_X86_64_PLT32	flsl-0x4
    43c8:	48 83 c4 08          	add    $0x8,%rsp
    43cc:	4d 89 f8             	mov    %r15,%r8
    43cf:	4c 89 f1             	mov    %r14,%rcx
    43d2:	4c 89 ea             	mov    %r13,%rdx
    43d5:	48 89 de             	mov    %rbx,%rsi
    43d8:	4c 89 e7             	mov    %r12,%rdi
    43db:	5b                   	pop    %rbx
    43dc:	44 8d 4c 00 fe       	lea    -0x2(%rax,%rax,1),%r9d
    43e1:	41 5c                	pop    %r12
    43e3:	41 5d                	pop    %r13
    43e5:	41 5e                	pop    %r14
    43e7:	41 5f                	pop    %r15
    43e9:	5d                   	pop    %rbp
    43ea:	e9 21 f4 ff ff       	jmp    3810 <_qsort>
    43ef:	90                   	nop

00000000000043f0 <rand_r>:
    43f0:	8b 0f                	mov    (%rdi),%ecx
    43f2:	48 89 fe             	mov    %rdi,%rsi
    43f5:	48 85 c9             	test   %rcx,%rcx
    43f8:	74 46                	je     4440 <rand_r+0x50>
    43fa:	48 b8 79 fb e3 1f af 	movabs $0x41a705af1fe3fb79,%rax
    4401:	05 a7 41 
    4404:	48 f7 e1             	mul    %rcx
    4407:	48 c1 ea 0f          	shr    $0xf,%rdx
    440b:	48 69 c2 1d f3 01 00 	imul   $0x1f31d,%rdx,%rax
    4412:	48 69 d2 ec f4 ff ff 	imul   $0xfffffffffffff4ec,%rdx,%rdx
    4419:	48 29 c1             	sub    %rax,%rcx
    441c:	48 69 c9 a7 41 00 00 	imul   $0x41a7,%rcx,%rcx
    4423:	48 89 c8             	mov    %rcx,%rax
    4426:	48 01 d0             	add    %rdx,%rax
    4429:	79 06                	jns    4431 <rand_r+0x41>
    442b:	48 05 ff ff ff 7f    	add    $0x7fffffff,%rax
    4431:	89 c2                	mov    %eax,%edx
    4433:	89 16                	mov    %edx,(%rsi)
    4435:	c3                   	ret    
    4436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    443d:	00 00 00 
    4440:	ba 42 ce 0c 1f       	mov    $0x1f0cce42,%edx
    4445:	b8 42 ce 0c 1f       	mov    $0x1f0cce42,%eax
    444a:	89 16                	mov    %edx,(%rsi)
    444c:	c3                   	ret    
    444d:	0f 1f 00             	nopl   (%rax)

0000000000004450 <rand>:
    4450:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 4457 <rand+0x7>
			4453: R_X86_64_PC32	.data-0x4
    4457:	48 85 c9             	test   %rcx,%rcx
    445a:	74 4c                	je     44a8 <rand+0x58>
    445c:	48 b8 79 fb e3 1f af 	movabs $0x41a705af1fe3fb79,%rax
    4463:	05 a7 41 
    4466:	48 f7 e1             	mul    %rcx
    4469:	48 c1 ea 0f          	shr    $0xf,%rdx
    446d:	48 69 c2 1d f3 01 00 	imul   $0x1f31d,%rdx,%rax
    4474:	48 69 d2 ec f4 ff ff 	imul   $0xfffffffffffff4ec,%rdx,%rdx
    447b:	48 29 c1             	sub    %rax,%rcx
    447e:	48 69 c9 a7 41 00 00 	imul   $0x41a7,%rcx,%rcx
    4485:	48 01 d1             	add    %rdx,%rcx
    4488:	89 c8                	mov    %ecx,%eax
    448a:	79 0e                	jns    449a <rand+0x4a>
    448c:	48 81 c1 ff ff ff 7f 	add    $0x7fffffff,%rcx
    4493:	89 c8                	mov    %ecx,%eax
    4495:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    449a:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 44a1 <rand+0x51>
			449d: R_X86_64_PC32	.data-0x4
    44a1:	c3                   	ret    
    44a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    44a8:	b9 42 ce 0c 1f       	mov    $0x1f0cce42,%ecx
    44ad:	b8 42 ce 0c 1f       	mov    $0x1f0cce42,%eax
    44b2:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 44b9 <rand+0x69>
			44b5: R_X86_64_PC32	.data-0x4
    44b9:	c3                   	ret    
    44ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000044c0 <srand>:
    44c0:	89 f8                	mov    %edi,%eax
    44c2:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 44c9 <srand+0x9>
			44c5: R_X86_64_PC32	.data-0x4
    44c9:	c3                   	ret    
    44ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000044d0 <realloc>:
    44d0:	55                   	push   %rbp
    44d1:	48 89 e5             	mov    %rsp,%rbp
    44d4:	41 55                	push   %r13
    44d6:	41 54                	push   %r12
    44d8:	53                   	push   %rbx
    44d9:	48 83 ec 08          	sub    $0x8,%rsp
    44dd:	48 85 f6             	test   %rsi,%rsi
    44e0:	74 46                	je     4528 <realloc+0x58>
    44e2:	49 89 fc             	mov    %rdi,%r12
    44e5:	48 89 f3             	mov    %rsi,%rbx
    44e8:	48 89 f7             	mov    %rsi,%rdi
    44eb:	4d 85 e4             	test   %r12,%r12
    44ee:	74 50                	je     4540 <realloc+0x70>
    44f0:	e8 00 00 00 00       	call   44f5 <realloc+0x25>
			44f1: R_X86_64_PLT32	malloc-0x4
    44f5:	49 89 c5             	mov    %rax,%r13
    44f8:	48 85 c0             	test   %rax,%rax
    44fb:	74 2b                	je     4528 <realloc+0x58>
    44fd:	48 89 da             	mov    %rbx,%rdx
    4500:	4c 89 e6             	mov    %r12,%rsi
    4503:	48 89 c7             	mov    %rax,%rdi
    4506:	e8 00 00 00 00       	call   450b <realloc+0x3b>
			4507: R_X86_64_PLT32	memcpy-0x4
    450b:	4c 89 e7             	mov    %r12,%rdi
    450e:	e8 00 00 00 00       	call   4513 <realloc+0x43>
			450f: R_X86_64_PLT32	free-0x4
    4513:	48 83 c4 08          	add    $0x8,%rsp
    4517:	4c 89 e8             	mov    %r13,%rax
    451a:	5b                   	pop    %rbx
    451b:	41 5c                	pop    %r12
    451d:	41 5d                	pop    %r13
    451f:	5d                   	pop    %rbp
    4520:	c3                   	ret    
    4521:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4528:	48 83 c4 08          	add    $0x8,%rsp
    452c:	45 31 ed             	xor    %r13d,%r13d
    452f:	5b                   	pop    %rbx
    4530:	4c 89 e8             	mov    %r13,%rax
    4533:	41 5c                	pop    %r12
    4535:	41 5d                	pop    %r13
    4537:	5d                   	pop    %rbp
    4538:	c3                   	ret    
    4539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4540:	48 83 c4 08          	add    $0x8,%rsp
    4544:	5b                   	pop    %rbx
    4545:	41 5c                	pop    %r12
    4547:	41 5d                	pop    %r13
    4549:	5d                   	pop    %rbp
    454a:	e9 00 00 00 00       	jmp    454f <realloc+0x7f>
			454b: R_X86_64_PLT32	malloc-0x4
    454f:	90                   	nop

0000000000004550 <reallocf>:
    4550:	55                   	push   %rbp
    4551:	48 89 e5             	mov    %rsp,%rbp
    4554:	41 55                	push   %r13
    4556:	41 54                	push   %r12
    4558:	53                   	push   %rbx
    4559:	48 89 fb             	mov    %rdi,%rbx
    455c:	48 83 ec 08          	sub    $0x8,%rsp
    4560:	48 85 f6             	test   %rsi,%rsi
    4563:	74 43                	je     45a8 <reallocf+0x58>
    4565:	49 89 f4             	mov    %rsi,%r12
    4568:	48 89 f7             	mov    %rsi,%rdi
    456b:	48 85 db             	test   %rbx,%rbx
    456e:	74 60                	je     45d0 <reallocf+0x80>
    4570:	e8 00 00 00 00       	call   4575 <reallocf+0x25>
			4571: R_X86_64_PLT32	malloc-0x4
    4575:	49 89 c5             	mov    %rax,%r13
    4578:	48 85 c0             	test   %rax,%rax
    457b:	74 30                	je     45ad <reallocf+0x5d>
    457d:	4c 89 e2             	mov    %r12,%rdx
    4580:	48 89 de             	mov    %rbx,%rsi
    4583:	48 89 c7             	mov    %rax,%rdi
    4586:	e8 00 00 00 00       	call   458b <reallocf+0x3b>
			4587: R_X86_64_PLT32	memcpy-0x4
    458b:	48 89 df             	mov    %rbx,%rdi
    458e:	e8 00 00 00 00       	call   4593 <reallocf+0x43>
			458f: R_X86_64_PLT32	free-0x4
    4593:	48 83 c4 08          	add    $0x8,%rsp
    4597:	4c 89 e8             	mov    %r13,%rax
    459a:	5b                   	pop    %rbx
    459b:	41 5c                	pop    %r12
    459d:	41 5d                	pop    %r13
    459f:	5d                   	pop    %rbp
    45a0:	c3                   	ret    
    45a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    45a8:	48 85 ff             	test   %rdi,%rdi
    45ab:	74 08                	je     45b5 <reallocf+0x65>
    45ad:	48 89 df             	mov    %rbx,%rdi
    45b0:	e8 00 00 00 00       	call   45b5 <reallocf+0x65>
			45b1: R_X86_64_PLT32	free-0x4
    45b5:	48 83 c4 08          	add    $0x8,%rsp
    45b9:	45 31 ed             	xor    %r13d,%r13d
    45bc:	5b                   	pop    %rbx
    45bd:	4c 89 e8             	mov    %r13,%rax
    45c0:	41 5c                	pop    %r12
    45c2:	41 5d                	pop    %r13
    45c4:	5d                   	pop    %rbp
    45c5:	c3                   	ret    
    45c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    45cd:	00 00 00 
    45d0:	48 83 c4 08          	add    $0x8,%rsp
    45d4:	5b                   	pop    %rbx
    45d5:	41 5c                	pop    %r12
    45d7:	41 5d                	pop    %r13
    45d9:	5d                   	pop    %rbp
    45da:	e9 00 00 00 00       	jmp    45df <reallocf+0x8f>
			45db: R_X86_64_PLT32	malloc-0x4
    45df:	90                   	nop

00000000000045e0 <strtol>:
    45e0:	55                   	push   %rbp
    45e1:	48 89 e5             	mov    %rsp,%rbp
    45e4:	41 57                	push   %r15
    45e6:	49 89 ff             	mov    %rdi,%r15
    45e9:	41 56                	push   %r14
    45eb:	41 55                	push   %r13
    45ed:	41 89 d5             	mov    %edx,%r13d
    45f0:	41 54                	push   %r12
    45f2:	53                   	push   %rbx
    45f3:	48 83 ec 38          	sub    $0x38,%rsp
    45f7:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    45fb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    45ff:	83 fa 24             	cmp    $0x24,%edx
    4602:	0f 87 c0 01 00 00    	ja     47c8 <strtol+0x1e8>
    4608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    460f:	00 
    4610:	4d 89 fc             	mov    %r15,%r12
    4613:	41 0f be 1f          	movsbl (%r15),%ebx
    4617:	49 83 c7 01          	add    $0x1,%r15
    461b:	89 df                	mov    %ebx,%edi
    461d:	e8 00 00 00 00       	call   4622 <strtol+0x42>
			461e: R_X86_64_PLT32	isspace-0x4
    4622:	41 89 c6             	mov    %eax,%r14d
    4625:	85 c0                	test   %eax,%eax
    4627:	75 e7                	jne    4610 <strtol+0x30>
    4629:	83 fb 2d             	cmp    $0x2d,%ebx
    462c:	74 5a                	je     4688 <strtol+0xa8>
    462e:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    4635:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    463a:	83 fb 2b             	cmp    $0x2b,%ebx
    463d:	75 5e                	jne    469d <strtol+0xbd>
    463f:	41 0f be 1f          	movsbl (%r15),%ebx
    4643:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    4648:	41 f7 c5 ef ff ff ff 	test   $0xffffffef,%r13d
    464f:	74 55                	je     46a6 <strtol+0xc6>
    4651:	41 83 fd 02          	cmp    $0x2,%r13d
    4655:	0f 85 95 01 00 00    	jne    47f0 <strtol+0x210>
    465b:	83 fb 30             	cmp    $0x30,%ebx
    465e:	0f 85 8c 01 00 00    	jne    47f0 <strtol+0x210>
    4664:	41 0f b6 17          	movzbl (%r15),%edx
    4668:	83 e2 df             	and    $0xffffffdf,%edx
    466b:	80 fa 42             	cmp    $0x42,%dl
    466e:	0f 84 f4 01 00 00    	je     4868 <strtol+0x288>
    4674:	49 63 f5             	movslq %r13d,%rsi
    4677:	bb 30 00 00 00       	mov    $0x30,%ebx
    467c:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    4680:	eb 44                	jmp    46c6 <strtol+0xe6>
    4682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4688:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    468f:	41 0f be 1f          	movsbl (%r15),%ebx
    4693:	b8 00 00 00 80       	mov    $0x80000000,%eax
    4698:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    469d:	41 f7 c5 ef ff ff ff 	test   $0xffffffef,%r13d
    46a4:	75 ab                	jne    4651 <strtol+0x71>
    46a6:	83 fb 30             	cmp    $0x30,%ebx
    46a9:	0f 84 91 01 00 00    	je     4840 <strtol+0x260>
    46af:	45 85 ed             	test   %r13d,%r13d
    46b2:	0f 85 ed 01 00 00    	jne    48a5 <strtol+0x2c5>
    46b8:	48 c7 45 b8 0a 00 00 	movq   $0xa,-0x48(%rbp)
    46bf:	00 
    46c0:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
    46c6:	31 d2                	xor    %edx,%edx
    46c8:	45 31 e4             	xor    %r12d,%r12d
    46cb:	48 f7 75 b8          	divq   -0x48(%rbp)
    46cf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    46d3:	89 55 c4             	mov    %edx,-0x3c(%rbp)
    46d6:	eb 48                	jmp    4720 <strtol+0x140>
    46d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    46df:	00 
    46e0:	83 eb 30             	sub    $0x30,%ebx
    46e3:	41 39 dd             	cmp    %ebx,%r13d
    46e6:	7e 67                	jle    474f <strtol+0x16f>
    46e8:	45 85 f6             	test   %r14d,%r14d
    46eb:	0f 88 a7 00 00 00    	js     4798 <strtol+0x1b8>
    46f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    46f5:	4c 39 e0             	cmp    %r12,%rax
    46f8:	0f 82 9a 00 00 00    	jb     4798 <strtol+0x1b8>
    46fe:	49 39 c4             	cmp    %rax,%r12
    4701:	0f 85 a1 00 00 00    	jne    47a8 <strtol+0x1c8>
    4707:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    470a:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    4710:	39 c3                	cmp    %eax,%ebx
    4712:	0f 8e 90 00 00 00    	jle    47a8 <strtol+0x1c8>
    4718:	41 0f be 1f          	movsbl (%r15),%ebx
    471c:	49 83 c7 01          	add    $0x1,%r15
    4720:	89 df                	mov    %ebx,%edi
    4722:	e8 00 00 00 00       	call   4727 <strtol+0x147>
			4723: R_X86_64_PLT32	isdigit-0x4
    4727:	85 c0                	test   %eax,%eax
    4729:	75 b5                	jne    46e0 <strtol+0x100>
    472b:	89 df                	mov    %ebx,%edi
    472d:	e8 00 00 00 00       	call   4732 <strtol+0x152>
			472e: R_X86_64_PLT32	isalpha-0x4
    4732:	85 c0                	test   %eax,%eax
    4734:	74 19                	je     474f <strtol+0x16f>
    4736:	89 df                	mov    %ebx,%edi
    4738:	e8 00 00 00 00       	call   473d <strtol+0x15d>
			4739: R_X86_64_PLT32	isupper-0x4
    473d:	83 f8 01             	cmp    $0x1,%eax
    4740:	19 c0                	sbb    %eax,%eax
    4742:	83 e0 20             	and    $0x20,%eax
    4745:	83 c0 37             	add    $0x37,%eax
    4748:	29 c3                	sub    %eax,%ebx
    474a:	41 39 dd             	cmp    %ebx,%r13d
    474d:	7f 99                	jg     46e8 <strtol+0x108>
    474f:	41 83 fe ff          	cmp    $0xffffffff,%r14d
    4753:	0f 84 a7 00 00 00    	je     4800 <strtol+0x220>
    4759:	8b 55 c0             	mov    -0x40(%rbp),%edx
    475c:	4c 89 e0             	mov    %r12,%rax
    475f:	48 f7 d8             	neg    %rax
    4762:	85 d2                	test   %edx,%edx
    4764:	49 0f 44 c4          	cmove  %r12,%rax
    4768:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    476d:	74 14                	je     4783 <strtol+0x1a3>
    476f:	45 85 f6             	test   %r14d,%r14d
    4772:	0f 85 9f 00 00 00    	jne    4817 <strtol+0x237>
    4778:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    477c:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    4780:	48 89 31             	mov    %rsi,(%rcx)
    4783:	48 83 c4 38          	add    $0x38,%rsp
    4787:	5b                   	pop    %rbx
    4788:	41 5c                	pop    %r12
    478a:	41 5d                	pop    %r13
    478c:	41 5e                	pop    %r14
    478e:	41 5f                	pop    %r15
    4790:	5d                   	pop    %rbp
    4791:	c3                   	ret    
    4792:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4798:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    479e:	e9 75 ff ff ff       	jmp    4718 <strtol+0x138>
    47a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    47a8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    47ac:	48 63 db             	movslq %ebx,%rbx
    47af:	41 be 01 00 00 00    	mov    $0x1,%r14d
    47b5:	4c 0f af e0          	imul   %rax,%r12
    47b9:	49 01 dc             	add    %rbx,%r12
    47bc:	e9 57 ff ff ff       	jmp    4718 <strtol+0x138>
    47c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    47c8:	48 85 f6             	test   %rsi,%rsi
    47cb:	74 03                	je     47d0 <strtol+0x1f0>
    47cd:	48 89 3e             	mov    %rdi,(%rsi)
    47d0:	48 83 c4 38          	add    $0x38,%rsp
    47d4:	31 c0                	xor    %eax,%eax
    47d6:	5b                   	pop    %rbx
    47d7:	41 5c                	pop    %r12
    47d9:	41 5d                	pop    %r13
    47db:	41 5e                	pop    %r14
    47dd:	41 5f                	pop    %r15
    47df:	5d                   	pop    %rbp
    47e0:	c3                   	ret    
    47e1:	41 f7 c5 fd ff ff ff 	test   $0xfffffffd,%r13d
    47e8:	0f 84 96 00 00 00    	je     4884 <strtol+0x2a4>
    47ee:	66 90                	xchg   %ax,%ax
    47f0:	49 63 f5             	movslq %r13d,%rsi
    47f3:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    47f7:	e9 ca fe ff ff       	jmp    46c6 <strtol+0xe6>
    47fc:	0f 1f 40 00          	nopl   0x0(%rax)
    4800:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    4803:	85 c9                	test   %ecx,%ecx
    4805:	75 21                	jne    4828 <strtol+0x248>
    4807:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    480c:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    4811:	0f 84 6c ff ff ff    	je     4783 <strtol+0x1a3>
    4817:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    481b:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    481f:	e9 54 ff ff ff       	jmp    4778 <strtol+0x198>
    4824:	0f 1f 40 00          	nopl   0x0(%rax)
    4828:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    482d:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    4834:	75 e1                	jne    4817 <strtol+0x237>
    4836:	e9 48 ff ff ff       	jmp    4783 <strtol+0x1a3>
    483b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4840:	41 0f b6 17          	movzbl (%r15),%edx
    4844:	83 e2 df             	and    $0xffffffdf,%edx
    4847:	80 fa 58             	cmp    $0x58,%dl
    484a:	75 95                	jne    47e1 <strtol+0x201>
    484c:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4851:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    4857:	49 83 c7 02          	add    $0x2,%r15
    485b:	48 c7 45 b8 10 00 00 	movq   $0x10,-0x48(%rbp)
    4862:	00 
    4863:	e9 5e fe ff ff       	jmp    46c6 <strtol+0xe6>
    4868:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    486d:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    4873:	49 83 c7 02          	add    $0x2,%r15
    4877:	48 c7 45 b8 02 00 00 	movq   $0x2,-0x48(%rbp)
    487e:	00 
    487f:	e9 42 fe ff ff       	jmp    46c6 <strtol+0xe6>
    4884:	80 fa 42             	cmp    $0x42,%dl
    4887:	74 df                	je     4868 <strtol+0x288>
    4889:	45 85 ed             	test   %r13d,%r13d
    488c:	0f 85 e2 fd ff ff    	jne    4674 <strtol+0x94>
    4892:	48 c7 45 b8 08 00 00 	movq   $0x8,-0x48(%rbp)
    4899:	00 
    489a:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    48a0:	e9 21 fe ff ff       	jmp    46c6 <strtol+0xe6>
    48a5:	49 63 cd             	movslq %r13d,%rcx
    48a8:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    48ac:	e9 15 fe ff ff       	jmp    46c6 <strtol+0xe6>
    48b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    48b8:	00 00 00 
    48bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000048c0 <strtoll>:
    48c0:	55                   	push   %rbp
    48c1:	48 89 e5             	mov    %rsp,%rbp
    48c4:	41 57                	push   %r15
    48c6:	49 89 ff             	mov    %rdi,%r15
    48c9:	41 56                	push   %r14
    48cb:	41 89 d6             	mov    %edx,%r14d
    48ce:	41 55                	push   %r13
    48d0:	41 54                	push   %r12
    48d2:	53                   	push   %rbx
    48d3:	48 83 ec 38          	sub    $0x38,%rsp
    48d7:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    48db:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    48df:	83 fa 24             	cmp    $0x24,%edx
    48e2:	0f 87 b0 01 00 00    	ja     4a98 <strtoll+0x1d8>
    48e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    48ef:	00 
    48f0:	4d 89 fd             	mov    %r15,%r13
    48f3:	41 0f b6 1f          	movzbl (%r15),%ebx
    48f7:	49 83 c7 01          	add    $0x1,%r15
    48fb:	89 df                	mov    %ebx,%edi
    48fd:	e8 00 00 00 00       	call   4902 <strtoll+0x42>
			48fe: R_X86_64_PLT32	isspace-0x4
    4902:	41 89 c4             	mov    %eax,%r12d
    4905:	85 c0                	test   %eax,%eax
    4907:	75 e7                	jne    48f0 <strtoll+0x30>
    4909:	44 89 f0             	mov    %r14d,%eax
    490c:	83 e0 ef             	and    $0xffffffef,%eax
    490f:	83 fb 2d             	cmp    $0x2d,%ebx
    4912:	0f 84 d8 00 00 00    	je     49f0 <strtoll+0x130>
    4918:	83 fb 2b             	cmp    $0x2b,%ebx
    491b:	75 08                	jne    4925 <strtoll+0x65>
    491d:	41 0f be 1f          	movsbl (%r15),%ebx
    4921:	4d 8d 7d 02          	lea    0x2(%r13),%r15
    4925:	85 c0                	test   %eax,%eax
    4927:	0f 84 83 01 00 00    	je     4ab0 <strtoll+0x1f0>
    492d:	49 63 c6             	movslq %r14d,%rax
    4930:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4934:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    493b:	ff ff 7f 
    493e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    4945:	48 99                	cqto   
    4947:	48 f7 7d b8          	idivq  -0x48(%rbp)
    494b:	89 55 c8             	mov    %edx,-0x38(%rbp)
    494e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4952:	45 31 ed             	xor    %r13d,%r13d
    4955:	eb 41                	jmp    4998 <strtoll+0xd8>
    4957:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    495e:	00 00 
    4960:	49 39 c5             	cmp    %rax,%r13
    4963:	0f 8c 17 01 00 00    	jl     4a80 <strtoll+0x1c0>
    4969:	75 0b                	jne    4976 <strtoll+0xb6>
    496b:	8b 45 c8             	mov    -0x38(%rbp),%eax
    496e:	39 c3                	cmp    %eax,%ebx
    4970:	0f 8f 0a 01 00 00    	jg     4a80 <strtoll+0x1c0>
    4976:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    497a:	48 63 db             	movslq %ebx,%rbx
    497d:	44 8b 65 cc          	mov    -0x34(%rbp),%r12d
    4981:	4c 0f af e8          	imul   %rax,%r13
    4985:	49 29 dd             	sub    %rbx,%r13
    4988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    498f:	00 
    4990:	41 0f b6 1f          	movzbl (%r15),%ebx
    4994:	49 83 c7 01          	add    $0x1,%r15
    4998:	89 df                	mov    %ebx,%edi
    499a:	e8 00 00 00 00       	call   499f <strtoll+0xdf>
			499b: R_X86_64_PLT32	isdigit-0x4
    499f:	85 c0                	test   %eax,%eax
    49a1:	74 6d                	je     4a10 <strtoll+0x150>
    49a3:	83 eb 30             	sub    $0x30,%ebx
    49a6:	41 39 de             	cmp    %ebx,%r14d
    49a9:	0f 8e 89 00 00 00    	jle    4a38 <strtoll+0x178>
    49af:	41 83 fc ff          	cmp    $0xffffffff,%r12d
    49b3:	74 db                	je     4990 <strtoll+0xd0>
    49b5:	8b 55 cc             	mov    -0x34(%rbp),%edx
    49b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    49bc:	85 d2                	test   %edx,%edx
    49be:	75 a0                	jne    4960 <strtoll+0xa0>
    49c0:	49 39 c5             	cmp    %rax,%r13
    49c3:	0f 8f 9f 00 00 00    	jg     4a68 <strtoll+0x1a8>
    49c9:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    49cc:	39 cb                	cmp    %ecx,%ebx
    49ce:	7e 09                	jle    49d9 <strtoll+0x119>
    49d0:	49 39 c5             	cmp    %rax,%r13
    49d3:	0f 84 8f 00 00 00    	je     4a68 <strtoll+0x1a8>
    49d9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    49dd:	48 63 db             	movslq %ebx,%rbx
    49e0:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    49e6:	4c 0f af e8          	imul   %rax,%r13
    49ea:	49 01 dd             	add    %rbx,%r13
    49ed:	eb a1                	jmp    4990 <strtoll+0xd0>
    49ef:	90                   	nop
    49f0:	41 0f be 1f          	movsbl (%r15),%ebx
    49f4:	49 83 c5 02          	add    $0x2,%r13
    49f8:	85 c0                	test   %eax,%eax
    49fa:	0f 84 a8 00 00 00    	je     4aa8 <strtoll+0x1e8>
    4a00:	49 63 c6             	movslq %r14d,%rax
    4a03:	4d 89 ef             	mov    %r13,%r15
    4a06:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4a0a:	e9 c1 00 00 00       	jmp    4ad0 <strtoll+0x210>
    4a0f:	90                   	nop
    4a10:	89 df                	mov    %ebx,%edi
    4a12:	e8 00 00 00 00       	call   4a17 <strtoll+0x157>
			4a13: R_X86_64_PLT32	isalpha-0x4
    4a17:	85 c0                	test   %eax,%eax
    4a19:	74 1d                	je     4a38 <strtoll+0x178>
    4a1b:	89 df                	mov    %ebx,%edi
    4a1d:	e8 00 00 00 00       	call   4a22 <strtoll+0x162>
			4a1e: R_X86_64_PLT32	isupper-0x4
    4a22:	83 f8 01             	cmp    $0x1,%eax
    4a25:	19 c0                	sbb    %eax,%eax
    4a27:	83 e0 20             	and    $0x20,%eax
    4a2a:	83 c0 37             	add    $0x37,%eax
    4a2d:	29 c3                	sub    %eax,%ebx
    4a2f:	41 39 de             	cmp    %ebx,%r14d
    4a32:	0f 8f 77 ff ff ff    	jg     49af <strtoll+0xef>
    4a38:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4a3c:	48 85 c0             	test   %rax,%rax
    4a3f:	74 0f                	je     4a50 <strtoll+0x190>
    4a41:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    4a45:	45 85 e4             	test   %r12d,%r12d
    4a48:	48 0f 44 4d a8       	cmove  -0x58(%rbp),%rcx
    4a4d:	48 89 08             	mov    %rcx,(%rax)
    4a50:	48 83 c4 38          	add    $0x38,%rsp
    4a54:	4c 89 e8             	mov    %r13,%rax
    4a57:	5b                   	pop    %rbx
    4a58:	41 5c                	pop    %r12
    4a5a:	41 5d                	pop    %r13
    4a5c:	41 5e                	pop    %r14
    4a5e:	41 5f                	pop    %r15
    4a60:	5d                   	pop    %rbp
    4a61:	c3                   	ret    
    4a62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4a68:	49 bd ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r13
    4a6f:	ff ff 7f 
    4a72:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    4a78:	e9 13 ff ff ff       	jmp    4990 <strtoll+0xd0>
    4a7d:	0f 1f 00             	nopl   (%rax)
    4a80:	49 bd 00 00 00 00 00 	movabs $0x8000000000000000,%r13
    4a87:	00 00 80 
    4a8a:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    4a90:	e9 fb fe ff ff       	jmp    4990 <strtoll+0xd0>
    4a95:	0f 1f 00             	nopl   (%rax)
    4a98:	48 85 f6             	test   %rsi,%rsi
    4a9b:	74 03                	je     4aa0 <strtoll+0x1e0>
    4a9d:	48 89 3e             	mov    %rdi,(%rsi)
    4aa0:	45 31 ed             	xor    %r13d,%r13d
    4aa3:	eb ab                	jmp    4a50 <strtoll+0x190>
    4aa5:	0f 1f 00             	nopl   (%rax)
    4aa8:	4d 89 ef             	mov    %r13,%r15
    4aab:	b8 01 00 00 00       	mov    $0x1,%eax
    4ab0:	83 fb 30             	cmp    $0x30,%ebx
    4ab3:	74 5b                	je     4b10 <strtoll+0x250>
    4ab5:	45 85 f6             	test   %r14d,%r14d
    4ab8:	75 46                	jne    4b00 <strtoll+0x240>
    4aba:	48 c7 45 b8 0a 00 00 	movq   $0xa,-0x48(%rbp)
    4ac1:	00 
    4ac2:	41 be 0a 00 00 00    	mov    $0xa,%r14d
    4ac8:	85 c0                	test   %eax,%eax
    4aca:	0f 84 64 fe ff ff    	je     4934 <strtoll+0x74>
    4ad0:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    4ad7:	00 00 80 
    4ada:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    4ae1:	48 99                	cqto   
    4ae3:	48 f7 7d b8          	idivq  -0x48(%rbp)
    4ae7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4aeb:	89 d0                	mov    %edx,%eax
    4aed:	f7 d8                	neg    %eax
    4aef:	89 45 c8             	mov    %eax,-0x38(%rbp)
    4af2:	e9 5b fe ff ff       	jmp    4952 <strtoll+0x92>
    4af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4afe:	00 00 
    4b00:	49 63 f6             	movslq %r14d,%rsi
    4b03:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    4b07:	eb bf                	jmp    4ac8 <strtoll+0x208>
    4b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4b10:	41 0f b6 17          	movzbl (%r15),%edx
    4b14:	83 e2 df             	and    $0xffffffdf,%edx
    4b17:	80 fa 58             	cmp    $0x58,%dl
    4b1a:	75 19                	jne    4b35 <strtoll+0x275>
    4b1c:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4b21:	41 be 10 00 00 00    	mov    $0x10,%r14d
    4b27:	49 83 c7 02          	add    $0x2,%r15
    4b2b:	48 c7 45 b8 10 00 00 	movq   $0x10,-0x48(%rbp)
    4b32:	00 
    4b33:	eb 93                	jmp    4ac8 <strtoll+0x208>
    4b35:	45 85 f6             	test   %r14d,%r14d
    4b38:	75 13                	jne    4b4d <strtoll+0x28d>
    4b3a:	48 c7 45 b8 08 00 00 	movq   $0x8,-0x48(%rbp)
    4b41:	00 
    4b42:	41 be 08 00 00 00    	mov    $0x8,%r14d
    4b48:	e9 7b ff ff ff       	jmp    4ac8 <strtoll+0x208>
    4b4d:	49 63 d6             	movslq %r14d,%rdx
    4b50:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    4b54:	e9 6f ff ff ff       	jmp    4ac8 <strtoll+0x208>
    4b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004b60 <strtoul>:
    4b60:	55                   	push   %rbp
    4b61:	48 89 e5             	mov    %rsp,%rbp
    4b64:	41 57                	push   %r15
    4b66:	49 89 ff             	mov    %rdi,%r15
    4b69:	41 56                	push   %r14
    4b6b:	41 55                	push   %r13
    4b6d:	41 54                	push   %r12
    4b6f:	53                   	push   %rbx
    4b70:	48 83 ec 38          	sub    $0x38,%rsp
    4b74:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    4b78:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    4b7c:	89 55 cc             	mov    %edx,-0x34(%rbp)
    4b7f:	90                   	nop
    4b80:	4d 89 fc             	mov    %r15,%r12
    4b83:	41 0f be 1f          	movsbl (%r15),%ebx
    4b87:	49 83 c7 01          	add    $0x1,%r15
    4b8b:	89 df                	mov    %ebx,%edi
    4b8d:	e8 00 00 00 00       	call   4b92 <strtoul+0x32>
			4b8e: R_X86_64_PLT32	isspace-0x4
    4b92:	41 89 c5             	mov    %eax,%r13d
    4b95:	85 c0                	test   %eax,%eax
    4b97:	75 e7                	jne    4b80 <strtoul+0x20>
    4b99:	83 fb 2d             	cmp    $0x2d,%ebx
    4b9c:	0f 84 ce 01 00 00    	je     4d70 <strtoul+0x210>
    4ba2:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    4ba9:	83 fb 2b             	cmp    $0x2b,%ebx
    4bac:	0f 84 3e 01 00 00    	je     4cf0 <strtoul+0x190>
    4bb2:	f7 45 cc ef ff ff ff 	testl  $0xffffffef,-0x34(%rbp)
    4bb9:	0f 85 f1 00 00 00    	jne    4cb0 <strtoul+0x150>
    4bbf:	83 fb 30             	cmp    $0x30,%ebx
    4bc2:	0f 84 c0 01 00 00    	je     4d88 <strtoul+0x228>
    4bc8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    4bcb:	85 c9                	test   %ecx,%ecx
    4bcd:	0f 85 70 02 00 00    	jne    4e43 <strtoul+0x2e3>
    4bd3:	c7 45 c8 05 00 00 00 	movl   $0x5,-0x38(%rbp)
    4bda:	41 be 99 99 99 19    	mov    $0x19999999,%r14d
    4be0:	48 c7 45 c0 0a 00 00 	movq   $0xa,-0x40(%rbp)
    4be7:	00 
    4be8:	c7 45 cc 0a 00 00 00 	movl   $0xa,-0x34(%rbp)
    4bef:	45 31 e4             	xor    %r12d,%r12d
    4bf2:	eb 40                	jmp    4c34 <strtoul+0xd4>
    4bf4:	0f 1f 40 00          	nopl   0x0(%rax)
    4bf8:	83 eb 30             	sub    $0x30,%ebx
    4bfb:	39 5d cc             	cmp    %ebx,-0x34(%rbp)
    4bfe:	7e 63                	jle    4c63 <strtoul+0x103>
    4c00:	45 85 ed             	test   %r13d,%r13d
    4c03:	0f 88 17 01 00 00    	js     4d20 <strtoul+0x1c0>
    4c09:	4d 39 e6             	cmp    %r12,%r14
    4c0c:	0f 82 0e 01 00 00    	jb     4d20 <strtoul+0x1c0>
    4c12:	4d 39 f4             	cmp    %r14,%r12
    4c15:	0f 85 15 01 00 00    	jne    4d30 <strtoul+0x1d0>
    4c1b:	8b 45 c8             	mov    -0x38(%rbp),%eax
    4c1e:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    4c24:	39 c3                	cmp    %eax,%ebx
    4c26:	0f 8e 04 01 00 00    	jle    4d30 <strtoul+0x1d0>
    4c2c:	41 0f be 1f          	movsbl (%r15),%ebx
    4c30:	49 83 c7 01          	add    $0x1,%r15
    4c34:	89 df                	mov    %ebx,%edi
    4c36:	e8 00 00 00 00       	call   4c3b <strtoul+0xdb>
			4c37: R_X86_64_PLT32	isdigit-0x4
    4c3b:	85 c0                	test   %eax,%eax
    4c3d:	75 b9                	jne    4bf8 <strtoul+0x98>
    4c3f:	89 df                	mov    %ebx,%edi
    4c41:	e8 00 00 00 00       	call   4c46 <strtoul+0xe6>
			4c42: R_X86_64_PLT32	isalpha-0x4
    4c46:	85 c0                	test   %eax,%eax
    4c48:	74 19                	je     4c63 <strtoul+0x103>
    4c4a:	89 df                	mov    %ebx,%edi
    4c4c:	e8 00 00 00 00       	call   4c51 <strtoul+0xf1>
			4c4d: R_X86_64_PLT32	isupper-0x4
    4c51:	83 f8 01             	cmp    $0x1,%eax
    4c54:	19 c0                	sbb    %eax,%eax
    4c56:	83 e0 20             	and    $0x20,%eax
    4c59:	83 c0 37             	add    $0x37,%eax
    4c5c:	29 c3                	sub    %eax,%ebx
    4c5e:	39 5d cc             	cmp    %ebx,-0x34(%rbp)
    4c61:	7f 9d                	jg     4c00 <strtoul+0xa0>
    4c63:	41 83 fd ff          	cmp    $0xffffffff,%r13d
    4c67:	0f 84 e3 00 00 00    	je     4d50 <strtoul+0x1f0>
    4c6d:	8b 55 ac             	mov    -0x54(%rbp),%edx
    4c70:	4c 89 e0             	mov    %r12,%rax
    4c73:	48 f7 d8             	neg    %rax
    4c76:	85 d2                	test   %edx,%edx
    4c78:	4c 0f 45 e0          	cmovne %rax,%r12
    4c7c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4c81:	74 14                	je     4c97 <strtoul+0x137>
    4c83:	45 85 ed             	test   %r13d,%r13d
    4c86:	0f 85 d5 00 00 00    	jne    4d61 <strtoul+0x201>
    4c8c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4c90:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    4c94:	48 89 08             	mov    %rcx,(%rax)
    4c97:	48 83 c4 38          	add    $0x38,%rsp
    4c9b:	4c 89 e0             	mov    %r12,%rax
    4c9e:	5b                   	pop    %rbx
    4c9f:	41 5c                	pop    %r12
    4ca1:	41 5d                	pop    %r13
    4ca3:	41 5e                	pop    %r14
    4ca5:	41 5f                	pop    %r15
    4ca7:	5d                   	pop    %rbp
    4ca8:	c3                   	ret    
    4ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4cb0:	83 7d cc 02          	cmpl   $0x2,-0x34(%rbp)
    4cb4:	75 4a                	jne    4d00 <strtoul+0x1a0>
    4cb6:	83 fb 30             	cmp    $0x30,%ebx
    4cb9:	75 45                	jne    4d00 <strtoul+0x1a0>
    4cbb:	41 0f b6 07          	movzbl (%r15),%eax
    4cbf:	83 e0 df             	and    $0xffffffdf,%eax
    4cc2:	3c 42                	cmp    $0x42,%al
    4cc4:	0f 84 36 01 00 00    	je     4e00 <strtoul+0x2a0>
    4cca:	48 63 75 cc          	movslq -0x34(%rbp),%rsi
    4cce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4cd3:	31 d2                	xor    %edx,%edx
    4cd5:	bb 30 00 00 00       	mov    $0x30,%ebx
    4cda:	48 f7 f6             	div    %rsi
    4cdd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4ce1:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4ce4:	49 89 c6             	mov    %rax,%r14
    4ce7:	e9 03 ff ff ff       	jmp    4bef <strtoul+0x8f>
    4cec:	0f 1f 40 00          	nopl   0x0(%rax)
    4cf0:	41 0f be 1f          	movsbl (%r15),%ebx
    4cf4:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    4cf9:	e9 b4 fe ff ff       	jmp    4bb2 <strtoul+0x52>
    4cfe:	66 90                	xchg   %ax,%ax
    4d00:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
    4d04:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4d09:	31 d2                	xor    %edx,%edx
    4d0b:	48 f7 f1             	div    %rcx
    4d0e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    4d12:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4d15:	49 89 c6             	mov    %rax,%r14
    4d18:	e9 d2 fe ff ff       	jmp    4bef <strtoul+0x8f>
    4d1d:	0f 1f 00             	nopl   (%rax)
    4d20:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    4d26:	e9 01 ff ff ff       	jmp    4c2c <strtoul+0xcc>
    4d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4d30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4d34:	48 63 db             	movslq %ebx,%rbx
    4d37:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    4d3d:	4c 0f af e0          	imul   %rax,%r12
    4d41:	49 01 dc             	add    %rbx,%r12
    4d44:	e9 e3 fe ff ff       	jmp    4c2c <strtoul+0xcc>
    4d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4d50:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4d55:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    4d5b:	0f 84 36 ff ff ff    	je     4c97 <strtoul+0x137>
    4d61:	49 8d 47 ff          	lea    -0x1(%r15),%rax
    4d65:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4d69:	e9 1e ff ff ff       	jmp    4c8c <strtoul+0x12c>
    4d6e:	66 90                	xchg   %ax,%ax
    4d70:	41 0f be 1f          	movsbl (%r15),%ebx
    4d74:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%rbp)
    4d7b:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    4d80:	e9 2d fe ff ff       	jmp    4bb2 <strtoul+0x52>
    4d85:	0f 1f 00             	nopl   (%rax)
    4d88:	41 0f b6 07          	movzbl (%r15),%eax
    4d8c:	83 e0 df             	and    $0xffffffdf,%eax
    4d8f:	3c 58                	cmp    $0x58,%al
    4d91:	75 2a                	jne    4dbd <strtoul+0x25d>
    4d93:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4d98:	c7 45 c8 0f 00 00 00 	movl   $0xf,-0x38(%rbp)
    4d9f:	49 83 c7 02          	add    $0x2,%r15
    4da3:	41 be ff ff ff 0f    	mov    $0xfffffff,%r14d
    4da9:	48 c7 45 c0 10 00 00 	movq   $0x10,-0x40(%rbp)
    4db0:	00 
    4db1:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)
    4db8:	e9 32 fe ff ff       	jmp    4bef <strtoul+0x8f>
    4dbd:	48 63 75 cc          	movslq -0x34(%rbp),%rsi
    4dc1:	f7 c6 fd ff ff ff    	test   $0xfffffffd,%esi
    4dc7:	75 61                	jne    4e2a <strtoul+0x2ca>
    4dc9:	3c 42                	cmp    $0x42,%al
    4dcb:	74 33                	je     4e00 <strtoul+0x2a0>
    4dcd:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    4dd1:	0f 85 f3 fe ff ff    	jne    4cca <strtoul+0x16a>
    4dd7:	c7 45 c8 07 00 00 00 	movl   $0x7,-0x38(%rbp)
    4dde:	41 be ff ff ff 1f    	mov    $0x1fffffff,%r14d
    4de4:	48 c7 45 c0 08 00 00 	movq   $0x8,-0x40(%rbp)
    4deb:	00 
    4dec:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%rbp)
    4df3:	e9 f7 fd ff ff       	jmp    4bef <strtoul+0x8f>
    4df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4dff:	00 
    4e00:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4e05:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    4e0c:	49 83 c7 02          	add    $0x2,%r15
    4e10:	41 be ff ff ff 7f    	mov    $0x7fffffff,%r14d
    4e16:	48 c7 45 c0 02 00 00 	movq   $0x2,-0x40(%rbp)
    4e1d:	00 
    4e1e:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    4e25:	e9 c5 fd ff ff       	jmp    4bef <strtoul+0x8f>
    4e2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4e2f:	31 d2                	xor    %edx,%edx
    4e31:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4e35:	48 f7 f6             	div    %rsi
    4e38:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4e3b:	49 89 c6             	mov    %rax,%r14
    4e3e:	e9 ac fd ff ff       	jmp    4bef <strtoul+0x8f>
    4e43:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
    4e47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4e4c:	48 89 d6             	mov    %rdx,%rsi
    4e4f:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    4e53:	31 d2                	xor    %edx,%edx
    4e55:	48 f7 f6             	div    %rsi
    4e58:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4e5b:	49 89 c6             	mov    %rax,%r14
    4e5e:	e9 8c fd ff ff       	jmp    4bef <strtoul+0x8f>
    4e63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4e6a:	00 00 00 
    4e6d:	0f 1f 00             	nopl   (%rax)

0000000000004e70 <strtoull>:
    4e70:	55                   	push   %rbp
    4e71:	48 89 e5             	mov    %rsp,%rbp
    4e74:	41 57                	push   %r15
    4e76:	41 56                	push   %r14
    4e78:	49 89 fe             	mov    %rdi,%r14
    4e7b:	41 55                	push   %r13
    4e7d:	41 54                	push   %r12
    4e7f:	41 89 d4             	mov    %edx,%r12d
    4e82:	53                   	push   %rbx
    4e83:	48 89 fb             	mov    %rdi,%rbx
    4e86:	48 83 ec 18          	sub    $0x18,%rsp
    4e8a:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    4e8e:	66 90                	xchg   %ax,%ax
    4e90:	49 89 dd             	mov    %rbx,%r13
    4e93:	0f b6 3b             	movzbl (%rbx),%edi
    4e96:	48 83 c3 01          	add    $0x1,%rbx
    4e9a:	41 89 ff             	mov    %edi,%r15d
    4e9d:	e8 00 00 00 00       	call   4ea2 <strtoull+0x32>
			4e9e: R_X86_64_PLT32	isspace-0x4
    4ea2:	89 c1                	mov    %eax,%ecx
    4ea4:	85 c0                	test   %eax,%eax
    4ea6:	75 e8                	jne    4e90 <strtoull+0x20>
    4ea8:	41 80 ff 2d          	cmp    $0x2d,%r15b
    4eac:	0f 84 2e 01 00 00    	je     4fe0 <strtoull+0x170>
    4eb2:	31 ff                	xor    %edi,%edi
    4eb4:	41 80 ff 2b          	cmp    $0x2b,%r15b
    4eb8:	0f 84 12 01 00 00    	je     4fd0 <strtoull+0x160>
    4ebe:	41 f7 c4 ef ff ff ff 	test   $0xffffffef,%r12d
    4ec5:	74 31                	je     4ef8 <strtoull+0x88>
    4ec7:	41 8d 44 24 fe       	lea    -0x2(%r12),%eax
    4ecc:	83 f8 22             	cmp    $0x22,%eax
    4ecf:	0f 86 5b 01 00 00    	jbe    5030 <strtoull+0x1c0>
    4ed5:	31 c0                	xor    %eax,%eax
    4ed7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4edc:	74 07                	je     4ee5 <strtoull+0x75>
    4ede:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4ee2:	4c 89 32             	mov    %r14,(%rdx)
    4ee5:	48 83 c4 18          	add    $0x18,%rsp
    4ee9:	5b                   	pop    %rbx
    4eea:	41 5c                	pop    %r12
    4eec:	41 5d                	pop    %r13
    4eee:	41 5e                	pop    %r14
    4ef0:	41 5f                	pop    %r15
    4ef2:	5d                   	pop    %rbp
    4ef3:	c3                   	ret    
    4ef4:	0f 1f 40 00          	nopl   0x0(%rax)
    4ef8:	41 80 ff 30          	cmp    $0x30,%r15b
    4efc:	0f 84 f6 00 00 00    	je     4ff8 <strtoull+0x188>
    4f02:	45 85 e4             	test   %r12d,%r12d
    4f05:	0f 85 25 01 00 00    	jne    5030 <strtoull+0x1c0>
    4f0b:	ba 05 00 00 00       	mov    $0x5,%edx
    4f10:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
    4f16:	49 ba 99 99 99 99 99 	movabs $0x1999999999999999,%r10
    4f1d:	99 99 19 
    4f20:	41 bc 0a 00 00 00    	mov    $0xa,%r12d
    4f26:	31 c0                	xor    %eax,%eax
    4f28:	eb 4b                	jmp    4f75 <strtoull+0x105>
    4f2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4f30:	41 8d 77 b5          	lea    -0x4b(%r15),%esi
    4f34:	44 0f be c6          	movsbl %sil,%r8d
    4f38:	45 39 e0             	cmp    %r12d,%r8d
    4f3b:	7d 63                	jge    4fa0 <strtoull+0x130>
    4f3d:	85 c9                	test   %ecx,%ecx
    4f3f:	0f 88 0b 01 00 00    	js     5050 <strtoull+0x1e0>
    4f45:	49 39 c2             	cmp    %rax,%r10
    4f48:	0f 82 02 01 00 00    	jb     5050 <strtoull+0x1e0>
    4f4e:	4c 39 d0             	cmp    %r10,%rax
    4f51:	75 0a                	jne    4f5d <strtoull+0xed>
    4f53:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    4f58:	41 39 d0             	cmp    %edx,%r8d
    4f5b:	7f 10                	jg     4f6d <strtoull+0xfd>
    4f5d:	49 0f af c1          	imul   %r9,%rax
    4f61:	48 0f be f6          	movsbq %sil,%rsi
    4f65:	b9 01 00 00 00       	mov    $0x1,%ecx
    4f6a:	48 01 f0             	add    %rsi,%rax
    4f6d:	44 0f b6 3b          	movzbl (%rbx),%r15d
    4f71:	48 83 c3 01          	add    $0x1,%rbx
    4f75:	41 8d 77 d0          	lea    -0x30(%r15),%esi
    4f79:	40 80 fe 09          	cmp    $0x9,%sil
    4f7d:	76 b5                	jbe    4f34 <strtoull+0xc4>
    4f7f:	41 8d 77 bf          	lea    -0x41(%r15),%esi
    4f83:	40 80 fe 19          	cmp    $0x19,%sil
    4f87:	76 a7                	jbe    4f30 <strtoull+0xc0>
    4f89:	41 8d 77 9f          	lea    -0x61(%r15),%esi
    4f8d:	40 80 fe 19          	cmp    $0x19,%sil
    4f91:	77 0d                	ja     4fa0 <strtoull+0x130>
    4f93:	41 8d 77 95          	lea    -0x6b(%r15),%esi
    4f97:	44 0f be c6          	movsbl %sil,%r8d
    4f9b:	45 39 e0             	cmp    %r12d,%r8d
    4f9e:	7c 9d                	jl     4f3d <strtoull+0xcd>
    4fa0:	83 f9 ff             	cmp    $0xffffffff,%ecx
    4fa3:	0f 84 b7 00 00 00    	je     5060 <strtoull+0x1f0>
    4fa9:	85 c9                	test   %ecx,%ecx
    4fab:	0f 84 24 ff ff ff    	je     4ed5 <strtoull+0x65>
    4fb1:	85 ff                	test   %edi,%edi
    4fb3:	0f 84 ae 00 00 00    	je     5067 <strtoull+0x1f7>
    4fb9:	48 f7 d8             	neg    %rax
    4fbc:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4fc1:	0f 84 1e ff ff ff    	je     4ee5 <strtoull+0x75>
    4fc7:	4c 8d 73 ff          	lea    -0x1(%rbx),%r14
    4fcb:	e9 0e ff ff ff       	jmp    4ede <strtoull+0x6e>
    4fd0:	44 0f b6 3b          	movzbl (%rbx),%r15d
    4fd4:	49 8d 5d 02          	lea    0x2(%r13),%rbx
    4fd8:	e9 e1 fe ff ff       	jmp    4ebe <strtoull+0x4e>
    4fdd:	0f 1f 00             	nopl   (%rax)
    4fe0:	44 0f b6 3b          	movzbl (%rbx),%r15d
    4fe4:	bf 01 00 00 00       	mov    $0x1,%edi
    4fe9:	49 8d 5d 02          	lea    0x2(%r13),%rbx
    4fed:	e9 cc fe ff ff       	jmp    4ebe <strtoull+0x4e>
    4ff2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4ff8:	0f b6 03             	movzbl (%rbx),%eax
    4ffb:	83 e0 df             	and    $0xffffffdf,%eax
    4ffe:	3c 58                	cmp    $0x58,%al
    5000:	75 29                	jne    502b <strtoull+0x1bb>
    5002:	44 0f b6 7b 01       	movzbl 0x1(%rbx),%r15d
    5007:	ba 0f 00 00 00       	mov    $0xf,%edx
    500c:	48 83 c3 02          	add    $0x2,%rbx
    5010:	49 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%r10
    5017:	ff ff 0f 
    501a:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    5020:	41 bc 10 00 00 00    	mov    $0x10,%r12d
    5026:	e9 fb fe ff ff       	jmp    4f26 <strtoull+0xb6>
    502b:	45 85 e4             	test   %r12d,%r12d
    502e:	74 47                	je     5077 <strtoull+0x207>
    5030:	4d 63 cc             	movslq %r12d,%r9
    5033:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    503a:	31 d2                	xor    %edx,%edx
    503c:	49 f7 f1             	div    %r9
    503f:	49 89 c2             	mov    %rax,%r10
    5042:	e9 df fe ff ff       	jmp    4f26 <strtoull+0xb6>
    5047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    504e:	00 00 
    5050:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    5055:	e9 13 ff ff ff       	jmp    4f6d <strtoull+0xfd>
    505a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5060:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    5067:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    506c:	0f 85 55 ff ff ff    	jne    4fc7 <strtoull+0x157>
    5072:	e9 6e fe ff ff       	jmp    4ee5 <strtoull+0x75>
    5077:	ba 07 00 00 00       	mov    $0x7,%edx
    507c:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    5082:	49 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%r10
    5089:	ff ff 1f 
    508c:	41 bc 08 00 00 00    	mov    $0x8,%r12d
    5092:	e9 8f fe ff ff       	jmp    4f26 <strtoull+0xb6>
    5097:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    509e:	00 00 

00000000000050a0 <memchr>:
    50a0:	48 89 f9             	mov    %rdi,%rcx
    50a3:	48 89 d0             	mov    %rdx,%rax
    50a6:	40 0f b6 f6          	movzbl %sil,%esi
    50aa:	40 f6 c7 07          	test   $0x7,%dil
    50ae:	75 1c                	jne    50cc <memchr+0x2c>
    50b0:	eb 2e                	jmp    50e0 <memchr+0x40>
    50b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    50b8:	0f b6 11             	movzbl (%rcx),%edx
    50bb:	39 f2                	cmp    %esi,%edx
    50bd:	74 21                	je     50e0 <memchr+0x40>
    50bf:	48 83 c1 01          	add    $0x1,%rcx
    50c3:	48 83 e8 01          	sub    $0x1,%rax
    50c7:	f6 c1 07             	test   $0x7,%cl
    50ca:	74 14                	je     50e0 <memchr+0x40>
    50cc:	48 85 c0             	test   %rax,%rax
    50cf:	75 e7                	jne    50b8 <memchr+0x18>
    50d1:	31 d2                	xor    %edx,%edx
    50d3:	48 89 d0             	mov    %rdx,%rax
    50d6:	c3                   	ret    
    50d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    50de:	00 00 
    50e0:	31 d2                	xor    %edx,%edx
    50e2:	48 85 c0             	test   %rax,%rax
    50e5:	74 ec                	je     50d3 <memchr+0x33>
    50e7:	0f b6 11             	movzbl (%rcx),%edx
    50ea:	39 f2                	cmp    %esi,%edx
    50ec:	0f 84 7e 00 00 00    	je     5170 <memchr+0xd0>
    50f2:	48 ba 01 01 01 01 01 	movabs $0x101010101010101,%rdx
    50f9:	01 01 01 
    50fc:	4c 63 c6             	movslq %esi,%r8
    50ff:	49 ba ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r10
    5106:	fe fe fe 
    5109:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
    5110:	80 80 80 
    5113:	4c 0f af c2          	imul   %rdx,%r8
    5117:	48 83 f8 07          	cmp    $0x7,%rax
    511b:	77 11                	ja     512e <memchr+0x8e>
    511d:	eb 51                	jmp    5170 <memchr+0xd0>
    511f:	90                   	nop
    5120:	48 83 e8 08          	sub    $0x8,%rax
    5124:	48 83 c1 08          	add    $0x8,%rcx
    5128:	48 83 f8 07          	cmp    $0x7,%rax
    512c:	76 15                	jbe    5143 <memchr+0xa3>
    512e:	48 8b 11             	mov    (%rcx),%rdx
    5131:	4c 31 c2             	xor    %r8,%rdx
    5134:	4a 8d 3c 12          	lea    (%rdx,%r10,1),%rdi
    5138:	48 f7 d2             	not    %rdx
    513b:	48 21 fa             	and    %rdi,%rdx
    513e:	4c 85 ca             	test   %r9,%rdx
    5141:	74 dd                	je     5120 <memchr+0x80>
    5143:	48 89 ca             	mov    %rcx,%rdx
    5146:	48 85 c0             	test   %rax,%rax
    5149:	74 86                	je     50d1 <memchr+0x31>
    514b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5150:	0f b6 0a             	movzbl (%rdx),%ecx
    5153:	39 f1                	cmp    %esi,%ecx
    5155:	0f 84 78 ff ff ff    	je     50d3 <memchr+0x33>
    515b:	48 83 c2 01          	add    $0x1,%rdx
    515f:	48 83 e8 01          	sub    $0x1,%rax
    5163:	75 eb                	jne    5150 <memchr+0xb0>
    5165:	e9 67 ff ff ff       	jmp    50d1 <memchr+0x31>
    516a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5170:	48 89 ca             	mov    %rcx,%rdx
    5173:	eb db                	jmp    5150 <memchr+0xb0>
    5175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    517c:	00 00 00 
    517f:	90                   	nop

0000000000005180 <memcmp>:
    5180:	48 39 f7             	cmp    %rsi,%rdi
    5183:	74 4b                	je     51d0 <memcmp+0x50>
    5185:	48 85 ff             	test   %rdi,%rdi
    5188:	74 4e                	je     51d8 <memcmp+0x58>
    518a:	48 85 f6             	test   %rsi,%rsi
    518d:	74 50                	je     51df <memcmp+0x5f>
    518f:	31 c0                	xor    %eax,%eax
    5191:	48 85 d2             	test   %rdx,%rdx
    5194:	75 1b                	jne    51b1 <memcmp+0x31>
    5196:	eb 46                	jmp    51de <memcmp+0x5e>
    5198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    519f:	00 
    51a0:	48 83 c0 01          	add    $0x1,%rax
    51a4:	48 83 c7 01          	add    $0x1,%rdi
    51a8:	48 83 c6 01          	add    $0x1,%rsi
    51ac:	48 39 c2             	cmp    %rax,%rdx
    51af:	74 1f                	je     51d0 <memcmp+0x50>
    51b1:	0f b6 0e             	movzbl (%rsi),%ecx
    51b4:	38 0f                	cmp    %cl,(%rdi)
    51b6:	74 e8                	je     51a0 <memcmp+0x20>
    51b8:	48 39 c2             	cmp    %rax,%rdx
    51bb:	74 13                	je     51d0 <memcmp+0x50>
    51bd:	0f b6 07             	movzbl (%rdi),%eax
    51c0:	0f b6 d1             	movzbl %cl,%edx
    51c3:	29 d0                	sub    %edx,%eax
    51c5:	c3                   	ret    
    51c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    51cd:	00 00 00 
    51d0:	31 c0                	xor    %eax,%eax
    51d2:	c3                   	ret    
    51d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    51d8:	b8 01 00 00 00       	mov    $0x1,%eax
    51dd:	c3                   	ret    
    51de:	c3                   	ret    
    51df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    51e4:	c3                   	ret    
    51e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    51ec:	00 00 00 
    51ef:	90                   	nop

00000000000051f0 <memcpy>:
    51f0:	48 89 f9             	mov    %rdi,%rcx
    51f3:	48 85 d2             	test   %rdx,%rdx
    51f6:	74 66                	je     525e <memcpy+0x6e>
    51f8:	49 89 f0             	mov    %rsi,%r8
    51fb:	48 39 f7             	cmp    %rsi,%rdi
    51fe:	74 5e                	je     525e <memcpy+0x6e>
    5200:	73 66                	jae    5268 <memcpy+0x78>
    5202:	48 89 f8             	mov    %rdi,%rax
    5205:	48 09 f0             	or     %rsi,%rax
    5208:	a8 03                	test   $0x3,%al
    520a:	0f 85 e8 00 00 00    	jne    52f8 <memcpy+0x108>
    5210:	48 89 d7             	mov    %rdx,%rdi
    5213:	49 89 d1             	mov    %rdx,%r9
    5216:	48 89 ce             	mov    %rcx,%rsi
    5219:	49 89 d2             	mov    %rdx,%r10
    521c:	48 c1 ef 02          	shr    $0x2,%rdi
    5220:	41 83 e1 03          	and    $0x3,%r9d
    5224:	49 83 fa 03          	cmp    $0x3,%r10
    5228:	76 1c                	jbe    5246 <memcpy+0x56>
    522a:	48 c1 e7 02          	shl    $0x2,%rdi
    522e:	31 c0                	xor    %eax,%eax
    5230:	41 8b 14 00          	mov    (%r8,%rax,1),%edx
    5234:	89 14 06             	mov    %edx,(%rsi,%rax,1)
    5237:	48 83 c0 04          	add    $0x4,%rax
    523b:	48 39 f8             	cmp    %rdi,%rax
    523e:	75 f0                	jne    5230 <memcpy+0x40>
    5240:	49 01 c0             	add    %rax,%r8
    5243:	48 01 c6             	add    %rax,%rsi
    5246:	4d 85 c9             	test   %r9,%r9
    5249:	74 13                	je     525e <memcpy+0x6e>
    524b:	31 c0                	xor    %eax,%eax
    524d:	41 0f b6 14 00       	movzbl (%r8,%rax,1),%edx
    5252:	88 14 06             	mov    %dl,(%rsi,%rax,1)
    5255:	48 83 c0 01          	add    $0x1,%rax
    5259:	49 39 c1             	cmp    %rax,%r9
    525c:	75 ef                	jne    524d <memcpy+0x5d>
    525e:	48 89 c8             	mov    %rcx,%rax
    5261:	c3                   	ret    
    5262:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5268:	55                   	push   %rbp
    5269:	49 01 d0             	add    %rdx,%r8
    526c:	4c 8d 0c 17          	lea    (%rdi,%rdx,1),%r9
    5270:	4c 89 c0             	mov    %r8,%rax
    5273:	4c 09 c8             	or     %r9,%rax
    5276:	48 89 e5             	mov    %rsp,%rbp
    5279:	41 54                	push   %r12
    527b:	53                   	push   %rbx
    527c:	a8 03                	test   $0x3,%al
    527e:	0f 84 bc 00 00 00    	je     5340 <memcpy+0x150>
    5284:	4c 89 c0             	mov    %r8,%rax
    5287:	4c 31 c8             	xor    %r9,%rax
    528a:	a8 03                	test   $0x3,%al
    528c:	75 0a                	jne    5298 <memcpy+0xa8>
    528e:	48 83 fa 04          	cmp    $0x4,%rdx
    5292:	0f 87 18 01 00 00    	ja     53b0 <memcpy+0x1c0>
    5298:	31 db                	xor    %ebx,%ebx
    529a:	31 c0                	xor    %eax,%eax
    529c:	45 31 e4             	xor    %r12d,%r12d
    529f:	48 89 d6             	mov    %rdx,%rsi
    52a2:	48 f7 de             	neg    %rsi
    52a5:	0f 1f 00             	nopl   (%rax)
    52a8:	4d 8d 1c 30          	lea    (%r8,%rsi,1),%r11
    52ac:	4d 8d 14 31          	lea    (%r9,%rsi,1),%r10
    52b0:	41 0f b6 7c 13 ff    	movzbl -0x1(%r11,%rdx,1),%edi
    52b6:	41 88 7c 12 ff       	mov    %dil,-0x1(%r10,%rdx,1)
    52bb:	48 83 ea 01          	sub    $0x1,%rdx
    52bf:	75 e7                	jne    52a8 <memcpy+0xb8>
    52c1:	49 83 fc 03          	cmp    $0x3,%r12
    52c5:	0f 87 95 00 00 00    	ja     5360 <memcpy+0x170>
    52cb:	48 85 db             	test   %rbx,%rbx
    52ce:	74 1c                	je     52ec <memcpy+0xfc>
    52d0:	48 f7 d3             	not    %rbx
    52d3:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    52da:	41 0f b6 14 03       	movzbl (%r11,%rax,1),%edx
    52df:	41 88 14 02          	mov    %dl,(%r10,%rax,1)
    52e3:	48 83 e8 01          	sub    $0x1,%rax
    52e7:	48 39 d8             	cmp    %rbx,%rax
    52ea:	75 ee                	jne    52da <memcpy+0xea>
    52ec:	5b                   	pop    %rbx
    52ed:	48 89 c8             	mov    %rcx,%rax
    52f0:	41 5c                	pop    %r12
    52f2:	5d                   	pop    %rbp
    52f3:	c3                   	ret    
    52f4:	0f 1f 40 00          	nopl   0x0(%rax)
    52f8:	48 89 f8             	mov    %rdi,%rax
    52fb:	48 31 f0             	xor    %rsi,%rax
    52fe:	a8 03                	test   $0x3,%al
    5300:	75 0a                	jne    530c <memcpy+0x11c>
    5302:	48 83 fa 03          	cmp    $0x3,%rdx
    5306:	0f 87 7c 00 00 00    	ja     5388 <memcpy+0x198>
    530c:	45 31 c9             	xor    %r9d,%r9d
    530f:	31 ff                	xor    %edi,%edi
    5311:	45 31 d2             	xor    %r10d,%r10d
    5314:	31 c0                	xor    %eax,%eax
    5316:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    531d:	00 00 00 
    5320:	41 0f b6 34 00       	movzbl (%r8,%rax,1),%esi
    5325:	40 88 34 01          	mov    %sil,(%rcx,%rax,1)
    5329:	48 83 c0 01          	add    $0x1,%rax
    532d:	48 39 c2             	cmp    %rax,%rdx
    5330:	75 ee                	jne    5320 <memcpy+0x130>
    5332:	49 01 d0             	add    %rdx,%r8
    5335:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    5339:	e9 e6 fe ff ff       	jmp    5224 <memcpy+0x34>
    533e:	66 90                	xchg   %ax,%ax
    5340:	48 89 d0             	mov    %rdx,%rax
    5343:	48 89 d3             	mov    %rdx,%rbx
    5346:	49 89 d4             	mov    %rdx,%r12
    5349:	4d 89 c3             	mov    %r8,%r11
    534c:	48 c1 e8 02          	shr    $0x2,%rax
    5350:	83 e3 03             	and    $0x3,%ebx
    5353:	4d 89 ca             	mov    %r9,%r10
    5356:	49 83 fc 03          	cmp    $0x3,%r12
    535a:	0f 86 6b ff ff ff    	jbe    52cb <memcpy+0xdb>
    5360:	48 89 c2             	mov    %rax,%rdx
    5363:	48 f7 da             	neg    %rdx
    5366:	48 c1 e2 02          	shl    $0x2,%rdx
    536a:	49 01 d3             	add    %rdx,%r11
    536d:	49 01 d2             	add    %rdx,%r10
    5370:	41 8b 54 83 fc       	mov    -0x4(%r11,%rax,4),%edx
    5375:	41 89 54 82 fc       	mov    %edx,-0x4(%r10,%rax,4)
    537a:	48 83 e8 01          	sub    $0x1,%rax
    537e:	75 f0                	jne    5370 <memcpy+0x180>
    5380:	e9 46 ff ff ff       	jmp    52cb <memcpy+0xdb>
    5385:	0f 1f 00             	nopl   (%rax)
    5388:	48 89 f0             	mov    %rsi,%rax
    538b:	83 e0 03             	and    $0x3,%eax
    538e:	4c 8d 54 10 fc       	lea    -0x4(%rax,%rdx,1),%r10
    5393:	ba 04 00 00 00       	mov    $0x4,%edx
    5398:	4c 89 d7             	mov    %r10,%rdi
    539b:	4d 89 d1             	mov    %r10,%r9
    539e:	48 29 c2             	sub    %rax,%rdx
    53a1:	48 c1 ef 02          	shr    $0x2,%rdi
    53a5:	41 83 e1 03          	and    $0x3,%r9d
    53a9:	e9 66 ff ff ff       	jmp    5314 <memcpy+0x124>
    53ae:	66 90                	xchg   %ax,%ax
    53b0:	4c 89 c6             	mov    %r8,%rsi
    53b3:	83 e6 03             	and    $0x3,%esi
    53b6:	48 29 f2             	sub    %rsi,%rdx
    53b9:	48 89 d0             	mov    %rdx,%rax
    53bc:	48 89 d3             	mov    %rdx,%rbx
    53bf:	49 89 d4             	mov    %rdx,%r12
    53c2:	48 89 f2             	mov    %rsi,%rdx
    53c5:	48 c1 e8 02          	shr    $0x2,%rax
    53c9:	83 e3 03             	and    $0x3,%ebx
    53cc:	e9 ce fe ff ff       	jmp    529f <memcpy+0xaf>
    53d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    53d8:	00 00 00 
    53db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000053e0 <memmem>:
    53e0:	55                   	push   %rbp
    53e1:	48 85 f6             	test   %rsi,%rsi
    53e4:	0f 94 c0             	sete   %al
    53e7:	48 39 ce             	cmp    %rcx,%rsi
    53ea:	48 89 e5             	mov    %rsp,%rbp
    53ed:	41 56                	push   %r14
    53ef:	41 55                	push   %r13
    53f1:	49 89 d5             	mov    %rdx,%r13
    53f4:	0f 92 c2             	setb   %dl
    53f7:	08 d0                	or     %dl,%al
    53f9:	41 54                	push   %r12
    53fb:	53                   	push   %rbx
    53fc:	75 52                	jne    5450 <memmem+0x70>
    53fe:	49 89 ce             	mov    %rcx,%r14
    5401:	48 85 c9             	test   %rcx,%rcx
    5404:	74 4a                	je     5450 <memmem+0x70>
    5406:	48 89 fb             	mov    %rdi,%rbx
    5409:	48 83 f9 01          	cmp    $0x1,%rcx
    540d:	74 4c                	je     545b <memmem+0x7b>
    540f:	48 29 ce             	sub    %rcx,%rsi
    5412:	48 01 fe             	add    %rdi,%rsi
    5415:	49 89 f4             	mov    %rsi,%r12
    5418:	73 0f                	jae    5429 <memmem+0x49>
    541a:	eb 34                	jmp    5450 <memmem+0x70>
    541c:	0f 1f 40 00          	nopl   0x0(%rax)
    5420:	48 83 c3 01          	add    $0x1,%rbx
    5424:	49 39 dc             	cmp    %rbx,%r12
    5427:	72 27                	jb     5450 <memmem+0x70>
    5429:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    542e:	38 03                	cmp    %al,(%rbx)
    5430:	75 ee                	jne    5420 <memmem+0x40>
    5432:	4c 89 f2             	mov    %r14,%rdx
    5435:	4c 89 ee             	mov    %r13,%rsi
    5438:	48 89 df             	mov    %rbx,%rdi
    543b:	e8 00 00 00 00       	call   5440 <memmem+0x60>
			543c: R_X86_64_PLT32	memcmp-0x4
    5440:	85 c0                	test   %eax,%eax
    5442:	75 dc                	jne    5420 <memmem+0x40>
    5444:	48 89 d8             	mov    %rbx,%rax
    5447:	eb 09                	jmp    5452 <memmem+0x72>
    5449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5450:	31 c0                	xor    %eax,%eax
    5452:	5b                   	pop    %rbx
    5453:	41 5c                	pop    %r12
    5455:	41 5d                	pop    %r13
    5457:	41 5e                	pop    %r14
    5459:	5d                   	pop    %rbp
    545a:	c3                   	ret    
    545b:	41 0f be 45 00       	movsbl 0x0(%r13),%eax
    5460:	5b                   	pop    %rbx
    5461:	48 89 f2             	mov    %rsi,%rdx
    5464:	41 5c                	pop    %r12
    5466:	41 5d                	pop    %r13
    5468:	89 c6                	mov    %eax,%esi
    546a:	41 5e                	pop    %r14
    546c:	5d                   	pop    %rbp
    546d:	e9 00 00 00 00       	jmp    5472 <memmem+0x92>
			546e: R_X86_64_PLT32	memchr-0x4
    5472:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5479:	00 00 00 
    547c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005480 <memmove>:
    5480:	e9 00 00 00 00       	jmp    5485 <memmove+0x5>
			5481: R_X86_64_PLT32	memcpy-0x4
    5485:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    548c:	00 00 00 
    548f:	90                   	nop

0000000000005490 <__memrchr>:
    5490:	48 8d 44 17 ff       	lea    -0x1(%rdi,%rdx,1),%rax
    5495:	40 0f b6 f6          	movzbl %sil,%esi
    5499:	48 83 ef 01          	sub    $0x1,%rdi
    549d:	eb 0f                	jmp    54ae <__memrchr+0x1e>
    549f:	90                   	nop
    54a0:	48 89 c2             	mov    %rax,%rdx
    54a3:	48 83 e8 01          	sub    $0x1,%rax
    54a7:	0f b6 0a             	movzbl (%rdx),%ecx
    54aa:	39 f1                	cmp    %esi,%ecx
    54ac:	74 07                	je     54b5 <__memrchr+0x25>
    54ae:	48 39 f8             	cmp    %rdi,%rax
    54b1:	75 ed                	jne    54a0 <__memrchr+0x10>
    54b3:	31 d2                	xor    %edx,%edx
    54b5:	48 89 d0             	mov    %rdx,%rax
    54b8:	c3                   	ret    
    54b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000054c0 <memset>:
    54c0:	48 89 f8             	mov    %rdi,%rax
    54c3:	48 85 d2             	test   %rdx,%rdx
    54c6:	74 63                	je     552b <memset+0x6b>
    54c8:	40 88 74 17 ff       	mov    %sil,-0x1(%rdi,%rdx,1)
    54cd:	40 88 37             	mov    %sil,(%rdi)
    54d0:	48 83 fa 02          	cmp    $0x2,%rdx
    54d4:	76 55                	jbe    552b <memset+0x6b>
    54d6:	40 88 74 17 fe       	mov    %sil,-0x2(%rdi,%rdx,1)
    54db:	40 88 77 01          	mov    %sil,0x1(%rdi)
    54df:	40 88 74 17 fd       	mov    %sil,-0x3(%rdi,%rdx,1)
    54e4:	40 88 77 02          	mov    %sil,0x2(%rdi)
    54e8:	48 83 fa 06          	cmp    $0x6,%rdx
    54ec:	76 3d                	jbe    552b <memset+0x6b>
    54ee:	40 88 74 17 fc       	mov    %sil,-0x4(%rdi,%rdx,1)
    54f3:	40 88 77 03          	mov    %sil,0x3(%rdi)
    54f7:	48 83 fa 08          	cmp    $0x8,%rdx
    54fb:	76 2e                	jbe    552b <memset+0x6b>
    54fd:	48 f7 df             	neg    %rdi
    5500:	40 0f b6 f6          	movzbl %sil,%esi
    5504:	83 e7 03             	and    $0x3,%edi
    5507:	69 f6 01 01 01 01    	imul   $0x1010101,%esi,%esi
    550d:	48 29 fa             	sub    %rdi,%rdx
    5510:	48 8d 0c 38          	lea    (%rax,%rdi,1),%rcx
    5514:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    5518:	48 01 ca             	add    %rcx,%rdx
    551b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5520:	89 31                	mov    %esi,(%rcx)
    5522:	48 83 c1 04          	add    $0x4,%rcx
    5526:	48 39 ca             	cmp    %rcx,%rdx
    5529:	75 f5                	jne    5520 <memset+0x60>
    552b:	c3                   	ret    
    552c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005530 <strcat>:
    5530:	55                   	push   %rbp
    5531:	48 89 e5             	mov    %rsp,%rbp
    5534:	41 55                	push   %r13
    5536:	49 89 f5             	mov    %rsi,%r13
    5539:	41 54                	push   %r12
    553b:	53                   	push   %rbx
    553c:	48 89 fb             	mov    %rdi,%rbx
    553f:	48 83 ec 08          	sub    $0x8,%rsp
    5543:	e8 00 00 00 00       	call   5548 <strcat+0x18>
			5544: R_X86_64_PLT32	strlen-0x4
    5548:	4c 89 ef             	mov    %r13,%rdi
    554b:	49 89 c4             	mov    %rax,%r12
    554e:	e8 00 00 00 00       	call   5553 <strcat+0x23>
			554f: R_X86_64_PLT32	strlen-0x4
    5553:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
    5557:	4c 89 ee             	mov    %r13,%rsi
    555a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    555e:	e8 00 00 00 00       	call   5563 <strcat+0x33>
			555f: R_X86_64_PLT32	memcpy-0x4
    5563:	48 83 c4 08          	add    $0x8,%rsp
    5567:	48 89 d8             	mov    %rbx,%rax
    556a:	5b                   	pop    %rbx
    556b:	41 5c                	pop    %r12
    556d:	41 5d                	pop    %r13
    556f:	5d                   	pop    %rbp
    5570:	c3                   	ret    
    5571:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5578:	00 00 00 
    557b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005580 <strchr>:
    5580:	55                   	push   %rbp
    5581:	48 89 e5             	mov    %rsp,%rbp
    5584:	53                   	push   %rbx
    5585:	89 f3                	mov    %esi,%ebx
    5587:	48 83 ec 08          	sub    $0x8,%rsp
    558b:	e8 00 00 00 00       	call   5590 <strchr+0x10>
			558c: R_X86_64_PLT32	__strchrnul-0x4
    5590:	31 d2                	xor    %edx,%edx
    5592:	38 18                	cmp    %bl,(%rax)
    5594:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5598:	c9                   	leave  
    5599:	48 0f 45 c2          	cmovne %rdx,%rax
    559d:	c3                   	ret    
    559e:	66 90                	xchg   %ax,%ax

00000000000055a0 <__strchrnul>:
    55a0:	55                   	push   %rbp
    55a1:	89 f1                	mov    %esi,%ecx
    55a3:	48 89 e5             	mov    %rsp,%rbp
    55a6:	53                   	push   %rbx
    55a7:	48 89 fb             	mov    %rdi,%rbx
    55aa:	48 83 ec 08          	sub    $0x8,%rsp
    55ae:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    55b4:	75 21                	jne    55d7 <__strchrnul+0x37>
    55b6:	e9 c5 00 00 00       	jmp    5680 <__strchrnul+0xe0>
    55bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    55c0:	0f b6 03             	movzbl (%rbx),%eax
    55c3:	84 c0                	test   %al,%al
    55c5:	0f 84 ac 00 00 00    	je     5677 <__strchrnul+0xd7>
    55cb:	39 c8                	cmp    %ecx,%eax
    55cd:	0f 84 a4 00 00 00    	je     5677 <__strchrnul+0xd7>
    55d3:	48 83 c3 01          	add    $0x1,%rbx
    55d7:	f6 c3 07             	test   $0x7,%bl
    55da:	75 e4                	jne    55c0 <__strchrnul+0x20>
    55dc:	48 bf 01 01 01 01 01 	movabs $0x101010101010101,%rdi
    55e3:	01 01 01 
    55e6:	4c 63 c1             	movslq %ecx,%r8
    55e9:	48 8b 13             	mov    (%rbx),%rdx
    55ec:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
    55f3:	80 80 80 
    55f6:	4c 0f af c7          	imul   %rdi,%r8
    55fa:	48 89 d0             	mov    %rdx,%rax
    55fd:	48 29 f8             	sub    %rdi,%rax
    5600:	4c 89 c6             	mov    %r8,%rsi
    5603:	48 31 d6             	xor    %rdx,%rsi
    5606:	48 f7 d2             	not    %rdx
    5609:	48 21 d0             	and    %rdx,%rax
    560c:	48 89 f2             	mov    %rsi,%rdx
    560f:	48 f7 d6             	not    %rsi
    5612:	48 29 fa             	sub    %rdi,%rdx
    5615:	48 21 f2             	and    %rsi,%rdx
    5618:	48 09 d0             	or     %rdx,%rax
    561b:	4c 85 c8             	test   %r9,%rax
    561e:	75 50                	jne    5670 <__strchrnul+0xd0>
    5620:	48 bf ff fe fe fe fe 	movabs $0xfefefefefefefeff,%rdi
    5627:	fe fe fe 
    562a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5630:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5634:	48 83 c3 08          	add    $0x8,%rbx
    5638:	48 89 d6             	mov    %rdx,%rsi
    563b:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
    563f:	48 f7 d2             	not    %rdx
    5642:	4c 31 c6             	xor    %r8,%rsi
    5645:	48 21 d0             	and    %rdx,%rax
    5648:	48 8d 14 3e          	lea    (%rsi,%rdi,1),%rdx
    564c:	48 f7 d6             	not    %rsi
    564f:	48 21 f2             	and    %rsi,%rdx
    5652:	48 09 d0             	or     %rdx,%rax
    5655:	4c 85 c8             	test   %r9,%rax
    5658:	74 d6                	je     5630 <__strchrnul+0x90>
    565a:	0f b6 03             	movzbl (%rbx),%eax
    565d:	84 c0                	test   %al,%al
    565f:	74 16                	je     5677 <__strchrnul+0xd7>
    5661:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5668:	39 c8                	cmp    %ecx,%eax
    566a:	74 0b                	je     5677 <__strchrnul+0xd7>
    566c:	48 83 c3 01          	add    $0x1,%rbx
    5670:	0f b6 03             	movzbl (%rbx),%eax
    5673:	84 c0                	test   %al,%al
    5675:	75 f1                	jne    5668 <__strchrnul+0xc8>
    5677:	48 89 d8             	mov    %rbx,%rax
    567a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    567e:	c9                   	leave  
    567f:	c3                   	ret    
    5680:	e8 00 00 00 00       	call   5685 <__strchrnul+0xe5>
			5681: R_X86_64_PLT32	strlen-0x4
    5685:	48 01 c3             	add    %rax,%rbx
    5688:	48 89 d8             	mov    %rbx,%rax
    568b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    568f:	c9                   	leave  
    5690:	c3                   	ret    
    5691:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5698:	00 00 00 
    569b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000056a0 <strcmp>:
    56a0:	48 39 f7             	cmp    %rsi,%rdi
    56a3:	74 30                	je     56d5 <strcmp+0x35>
    56a5:	48 85 ff             	test   %rdi,%rdi
    56a8:	74 3c                	je     56e6 <strcmp+0x46>
    56aa:	48 85 f6             	test   %rsi,%rsi
    56ad:	74 37                	je     56e6 <strcmp+0x46>
    56af:	0f b6 17             	movzbl (%rdi),%edx
    56b2:	0f be 0e             	movsbl (%rsi),%ecx
    56b5:	38 ca                	cmp    %cl,%dl
    56b7:	75 27                	jne    56e0 <strcmp+0x40>
    56b9:	b8 01 00 00 00       	mov    $0x1,%eax
    56be:	eb 11                	jmp    56d1 <strcmp+0x31>
    56c0:	0f b6 14 07          	movzbl (%rdi,%rax,1),%edx
    56c4:	48 83 c0 01          	add    $0x1,%rax
    56c8:	0f be 4c 06 ff       	movsbl -0x1(%rsi,%rax,1),%ecx
    56cd:	38 ca                	cmp    %cl,%dl
    56cf:	75 0f                	jne    56e0 <strcmp+0x40>
    56d1:	84 d2                	test   %dl,%dl
    56d3:	75 eb                	jne    56c0 <strcmp+0x20>
    56d5:	31 c0                	xor    %eax,%eax
    56d7:	c3                   	ret    
    56d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56df:	00 
    56e0:	0f be c2             	movsbl %dl,%eax
    56e3:	29 c8                	sub    %ecx,%eax
    56e5:	c3                   	ret    
    56e6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    56eb:	c3                   	ret    
    56ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000056f0 <strcoll>:
    56f0:	e9 00 00 00 00       	jmp    56f5 <strcoll+0x5>
			56f1: R_X86_64_PLT32	strcmp-0x4
    56f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    56fc:	00 00 00 
    56ff:	90                   	nop

0000000000005700 <strcpy>:
    5700:	55                   	push   %rbp
    5701:	48 89 e5             	mov    %rsp,%rbp
    5704:	41 54                	push   %r12
    5706:	49 89 f4             	mov    %rsi,%r12
    5709:	53                   	push   %rbx
    570a:	48 89 fb             	mov    %rdi,%rbx
    570d:	48 89 f7             	mov    %rsi,%rdi
    5710:	e8 00 00 00 00       	call   5715 <strcpy+0x15>
			5711: R_X86_64_PLT32	strlen-0x4
    5715:	4c 89 e6             	mov    %r12,%rsi
    5718:	48 89 df             	mov    %rbx,%rdi
    571b:	48 8d 50 01          	lea    0x1(%rax),%rdx
    571f:	e8 00 00 00 00       	call   5724 <strcpy+0x24>
			5720: R_X86_64_PLT32	memcpy-0x4
    5724:	48 89 d8             	mov    %rbx,%rax
    5727:	5b                   	pop    %rbx
    5728:	41 5c                	pop    %r12
    572a:	5d                   	pop    %rbp
    572b:	c3                   	ret    
    572c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005730 <strcspn>:
    5730:	55                   	push   %rbp
    5731:	48 89 e5             	mov    %rsp,%rbp
    5734:	41 54                	push   %r12
    5736:	49 89 fc             	mov    %rdi,%r12
    5739:	53                   	push   %rbx
    573a:	48 89 f3             	mov    %rsi,%rbx
    573d:	48 83 ec 20          	sub    $0x20,%rsp
    5741:	0f be 36             	movsbl (%rsi),%esi
    5744:	40 84 f6             	test   %sil,%sil
    5747:	74 06                	je     574f <strcspn+0x1f>
    5749:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    574d:	75 19                	jne    5768 <strcspn+0x38>
    574f:	4c 89 e7             	mov    %r12,%rdi
    5752:	e8 00 00 00 00       	call   5757 <strcspn+0x27>
			5753: R_X86_64_PLT32	__strchrnul-0x4
    5757:	48 83 c4 20          	add    $0x20,%rsp
    575b:	4c 29 e0             	sub    %r12,%rax
    575e:	5b                   	pop    %rbx
    575f:	41 5c                	pop    %r12
    5761:	5d                   	pop    %rbp
    5762:	c3                   	ret    
    5763:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5768:	31 f6                	xor    %esi,%esi
    576a:	ba 20 00 00 00       	mov    $0x20,%edx
    576f:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
    5773:	e8 00 00 00 00       	call   5778 <strcspn+0x48>
			5774: R_X86_64_PLT32	memset-0x4
    5778:	0f b6 0b             	movzbl (%rbx),%ecx
    577b:	be 01 00 00 00       	mov    $0x1,%esi
    5780:	84 c9                	test   %cl,%cl
    5782:	74 22                	je     57a6 <strcspn+0x76>
    5784:	0f 1f 40 00          	nopl   0x0(%rax)
    5788:	89 c8                	mov    %ecx,%eax
    578a:	48 89 f2             	mov    %rsi,%rdx
    578d:	48 83 c3 01          	add    $0x1,%rbx
    5791:	48 d3 e2             	shl    %cl,%rdx
    5794:	c0 e8 06             	shr    $0x6,%al
    5797:	0f b6 0b             	movzbl (%rbx),%ecx
    579a:	0f b6 c0             	movzbl %al,%eax
    579d:	48 09 54 c5 d0       	or     %rdx,-0x30(%rbp,%rax,8)
    57a2:	84 c9                	test   %cl,%cl
    57a4:	75 e2                	jne    5788 <strcspn+0x58>
    57a6:	41 0f b6 0c 24       	movzbl (%r12),%ecx
    57ab:	4c 89 e0             	mov    %r12,%rax
    57ae:	84 c9                	test   %cl,%cl
    57b0:	75 12                	jne    57c4 <strcspn+0x94>
    57b2:	eb 25                	jmp    57d9 <strcspn+0xa9>
    57b4:	0f 1f 40 00          	nopl   0x0(%rax)
    57b8:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    57bc:	48 83 c0 01          	add    $0x1,%rax
    57c0:	84 c9                	test   %cl,%cl
    57c2:	74 15                	je     57d9 <strcspn+0xa9>
    57c4:	89 ca                	mov    %ecx,%edx
    57c6:	c0 ea 06             	shr    $0x6,%dl
    57c9:	0f b6 d2             	movzbl %dl,%edx
    57cc:	48 8b 54 d5 d0       	mov    -0x30(%rbp,%rdx,8),%rdx
    57d1:	48 d3 ea             	shr    %cl,%rdx
    57d4:	83 e2 01             	and    $0x1,%edx
    57d7:	74 df                	je     57b8 <strcspn+0x88>
    57d9:	48 83 c4 20          	add    $0x20,%rsp
    57dd:	4c 29 e0             	sub    %r12,%rax
    57e0:	5b                   	pop    %rbx
    57e1:	41 5c                	pop    %r12
    57e3:	5d                   	pop    %rbp
    57e4:	c3                   	ret    
    57e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57ec:	00 00 00 
    57ef:	90                   	nop

00000000000057f0 <strdup>:
    57f0:	31 c0                	xor    %eax,%eax
    57f2:	c3                   	ret    
    57f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57fa:	00 00 00 
    57fd:	0f 1f 00             	nopl   (%rax)

0000000000005800 <strerror>:
    5800:	ba 01 00 00 00       	mov    $0x1,%edx
    5805:	b8 5c 00 00 00       	mov    $0x5c,%eax
    580a:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
    5811:	00 00 00 
			580c: R_X86_64_64	.rodata+0xbff
    5814:	eb 1a                	jmp    5830 <strerror+0x30>
    5816:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    581d:	00 00 00 
    5820:	0f b6 44 16 01       	movzbl 0x1(%rsi,%rdx,1),%eax
    5825:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    5829:	84 c0                	test   %al,%al
    582b:	74 13                	je     5840 <strerror+0x40>
    582d:	48 89 ca             	mov    %rcx,%rdx
    5830:	39 f8                	cmp    %edi,%eax
    5832:	75 ec                	jne    5820 <strerror+0x20>
    5834:	83 ea 01             	sub    $0x1,%edx
    5837:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			583a: R_X86_64_32S	.rodata+0x520
    583e:	74 38                	je     5878 <strerror+0x78>
    5840:	be 49 00 00 00       	mov    $0x49,%esi
    5845:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			5848: R_X86_64_32S	.rodata+0x520
    584c:	0f 1f 40 00          	nopl   0x0(%rax)
    5850:	40 84 f6             	test   %sil,%sil
    5853:	74 0c                	je     5861 <strerror+0x61>
    5855:	0f 1f 00             	nopl   (%rax)
    5858:	48 83 c0 01          	add    $0x1,%rax
    585c:	80 38 00             	cmpb   $0x0,(%rax)
    585f:	75 f7                	jne    5858 <strerror+0x58>
    5861:	48 8d 48 01          	lea    0x1(%rax),%rcx
    5865:	83 ea 01             	sub    $0x1,%edx
    5868:	74 0e                	je     5878 <strerror+0x78>
    586a:	0f b6 70 01          	movzbl 0x1(%rax),%esi
    586e:	48 89 c8             	mov    %rcx,%rax
    5871:	eb dd                	jmp    5850 <strerror+0x50>
    5873:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5878:	48 89 c8             	mov    %rcx,%rax
    587b:	c3                   	ret    
    587c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005880 <strerror_r>:
    5880:	55                   	push   %rbp
    5881:	48 89 e5             	mov    %rsp,%rbp
    5884:	41 55                	push   %r13
    5886:	41 54                	push   %r12
    5888:	49 89 f4             	mov    %rsi,%r12
    588b:	53                   	push   %rbx
    588c:	48 89 d3             	mov    %rdx,%rbx
    588f:	48 83 ec 08          	sub    $0x8,%rsp
    5893:	e8 00 00 00 00       	call   5898 <strerror_r+0x18>
			5894: R_X86_64_PLT32	strerror-0x4
    5898:	48 89 c7             	mov    %rax,%rdi
    589b:	49 89 c5             	mov    %rax,%r13
    589e:	e8 00 00 00 00       	call   58a3 <strerror_r+0x23>
			589f: R_X86_64_PLT32	strlen-0x4
    58a3:	4d 85 e4             	test   %r12,%r12
    58a6:	74 57                	je     58ff <strerror_r+0x7f>
    58a8:	48 39 d8             	cmp    %rbx,%rax
    58ab:	72 1b                	jb     58c8 <strerror_r+0x48>
    58ad:	48 85 db             	test   %rbx,%rbx
    58b0:	75 36                	jne    58e8 <strerror_r+0x68>
    58b2:	48 83 c4 08          	add    $0x8,%rsp
    58b6:	b8 22 00 00 00       	mov    $0x22,%eax
    58bb:	5b                   	pop    %rbx
    58bc:	41 5c                	pop    %r12
    58be:	41 5d                	pop    %r13
    58c0:	5d                   	pop    %rbp
    58c1:	c3                   	ret    
    58c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    58c8:	4c 89 ee             	mov    %r13,%rsi
    58cb:	4c 89 e7             	mov    %r12,%rdi
    58ce:	48 8d 50 01          	lea    0x1(%rax),%rdx
    58d2:	e8 00 00 00 00       	call   58d7 <strerror_r+0x57>
			58d3: R_X86_64_PLT32	memcpy-0x4
    58d7:	48 83 c4 08          	add    $0x8,%rsp
    58db:	31 c0                	xor    %eax,%eax
    58dd:	5b                   	pop    %rbx
    58de:	41 5c                	pop    %r12
    58e0:	41 5d                	pop    %r13
    58e2:	5d                   	pop    %rbp
    58e3:	c3                   	ret    
    58e4:	0f 1f 40 00          	nopl   0x0(%rax)
    58e8:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
    58ec:	4c 89 ee             	mov    %r13,%rsi
    58ef:	4c 89 e7             	mov    %r12,%rdi
    58f2:	e8 00 00 00 00       	call   58f7 <strerror_r+0x77>
			58f3: R_X86_64_PLT32	memcpy-0x4
    58f7:	41 c6 44 1c ff 00    	movb   $0x0,-0x1(%r12,%rbx,1)
    58fd:	eb b3                	jmp    58b2 <strerror_r+0x32>
    58ff:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			5902: R_X86_64_32S	.rodata+0xc58
    5906:	ba 0b 00 00 00       	mov    $0xb,%edx
    590b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			590e: R_X86_64_32S	.rodata.str1.1+0x2b
    5912:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5915: R_X86_64_32S	.rodata.str1.1+0x43
    5919:	e8 00 00 00 00       	call   591e <strerror_r+0x9e>
			591a: R_X86_64_PLT32	__assert_fail-0x4
    591e:	66 90                	xchg   %ax,%ax

0000000000005920 <strlen>:
    5920:	48 89 fa             	mov    %rdi,%rdx
    5923:	40 f6 c7 07          	test   $0x7,%dil
    5927:	75 11                	jne    593a <strlen+0x1a>
    5929:	eb 3b                	jmp    5966 <strlen+0x46>
    592b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5930:	48 83 c7 01          	add    $0x1,%rdi
    5934:	40 f6 c7 07          	test   $0x7,%dil
    5938:	74 2c                	je     5966 <strlen+0x46>
    593a:	80 3f 00             	cmpb   $0x0,(%rdi)
    593d:	75 f1                	jne    5930 <strlen+0x10>
    593f:	48 89 f8             	mov    %rdi,%rax
    5942:	48 29 d0             	sub    %rdx,%rax
    5945:	c3                   	ret    
    5946:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    594d:	00 00 00 
    5950:	80 7f 01 00          	cmpb   $0x0,0x1(%rdi)
    5954:	74 2a                	je     5980 <strlen+0x60>
    5956:	80 7f 02 00          	cmpb   $0x0,0x2(%rdi)
    595a:	74 34                	je     5990 <strlen+0x70>
    595c:	80 7f 03 00          	cmpb   $0x0,0x3(%rdi)
    5960:	74 3e                	je     59a0 <strlen+0x80>
    5962:	48 83 c7 08          	add    $0x8,%rdi
    5966:	48 8b 07             	mov    (%rdi),%rax
    5969:	48 2d 01 01 01 01    	sub    $0x1010101,%rax
    596f:	a9 80 80 80 80       	test   $0x80808080,%eax
    5974:	74 ec                	je     5962 <strlen+0x42>
    5976:	80 3f 00             	cmpb   $0x0,(%rdi)
    5979:	75 d5                	jne    5950 <strlen+0x30>
    597b:	eb c2                	jmp    593f <strlen+0x1f>
    597d:	0f 1f 00             	nopl   (%rax)
    5980:	48 29 d7             	sub    %rdx,%rdi
    5983:	48 8d 47 01          	lea    0x1(%rdi),%rax
    5987:	c3                   	ret    
    5988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    598f:	00 
    5990:	48 29 d7             	sub    %rdx,%rdi
    5993:	48 8d 47 02          	lea    0x2(%rdi),%rax
    5997:	c3                   	ret    
    5998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    599f:	00 
    59a0:	48 29 d7             	sub    %rdx,%rdi
    59a3:	48 8d 47 03          	lea    0x3(%rdi),%rax
    59a7:	c3                   	ret    
    59a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    59af:	00 

00000000000059b0 <strncat>:
    59b0:	55                   	push   %rbp
    59b1:	48 89 e5             	mov    %rsp,%rbp
    59b4:	41 56                	push   %r14
    59b6:	49 89 f6             	mov    %rsi,%r14
    59b9:	41 55                	push   %r13
    59bb:	49 89 fd             	mov    %rdi,%r13
    59be:	41 54                	push   %r12
    59c0:	53                   	push   %rbx
    59c1:	48 89 d3             	mov    %rdx,%rbx
    59c4:	e8 00 00 00 00       	call   59c9 <strncat+0x19>
			59c5: R_X86_64_PLT32	strlen-0x4
    59c9:	48 89 de             	mov    %rbx,%rsi
    59cc:	4c 89 f7             	mov    %r14,%rdi
    59cf:	49 89 c4             	mov    %rax,%r12
    59d2:	e8 00 00 00 00       	call   59d7 <strncat+0x27>
			59d3: R_X86_64_PLT32	strnlen-0x4
    59d7:	4c 89 f6             	mov    %r14,%rsi
    59da:	48 39 c3             	cmp    %rax,%rbx
    59dd:	48 0f 47 d8          	cmova  %rax,%rbx
    59e1:	4d 01 ec             	add    %r13,%r12
    59e4:	4c 89 e7             	mov    %r12,%rdi
    59e7:	48 89 da             	mov    %rbx,%rdx
    59ea:	e8 00 00 00 00       	call   59ef <strncat+0x3f>
			59eb: R_X86_64_PLT32	memcpy-0x4
    59ef:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
    59f4:	4c 89 e8             	mov    %r13,%rax
    59f7:	5b                   	pop    %rbx
    59f8:	41 5c                	pop    %r12
    59fa:	41 5d                	pop    %r13
    59fc:	41 5e                	pop    %r14
    59fe:	5d                   	pop    %rbp
    59ff:	c3                   	ret    

0000000000005a00 <strncmp>:
    5a00:	48 39 f7             	cmp    %rsi,%rdi
    5a03:	74 3b                	je     5a40 <strncmp+0x40>
    5a05:	48 85 ff             	test   %rdi,%rdi
    5a08:	74 39                	je     5a43 <strncmp+0x43>
    5a0a:	48 85 f6             	test   %rsi,%rsi
    5a0d:	74 34                	je     5a43 <strncmp+0x43>
    5a0f:	48 85 d2             	test   %rdx,%rdx
    5a12:	75 1e                	jne    5a32 <strncmp+0x32>
    5a14:	eb 2a                	jmp    5a40 <strncmp+0x40>
    5a16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a1d:	00 00 00 
    5a20:	84 c0                	test   %al,%al
    5a22:	74 1c                	je     5a40 <strncmp+0x40>
    5a24:	48 83 c7 01          	add    $0x1,%rdi
    5a28:	48 83 c6 01          	add    $0x1,%rsi
    5a2c:	48 83 ea 01          	sub    $0x1,%rdx
    5a30:	74 0e                	je     5a40 <strncmp+0x40>
    5a32:	0f be 07             	movsbl (%rdi),%eax
    5a35:	3a 06                	cmp    (%rsi),%al
    5a37:	74 e7                	je     5a20 <strncmp+0x20>
    5a39:	0f be 16             	movsbl (%rsi),%edx
    5a3c:	29 d0                	sub    %edx,%eax
    5a3e:	c3                   	ret    
    5a3f:	90                   	nop
    5a40:	31 c0                	xor    %eax,%eax
    5a42:	c3                   	ret    
    5a43:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5a48:	c3                   	ret    
    5a49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005a50 <strncpy>:
    5a50:	55                   	push   %rbp
    5a51:	48 89 e5             	mov    %rsp,%rbp
    5a54:	41 56                	push   %r14
    5a56:	49 89 f6             	mov    %rsi,%r14
    5a59:	48 89 d6             	mov    %rdx,%rsi
    5a5c:	41 55                	push   %r13
    5a5e:	49 89 fd             	mov    %rdi,%r13
    5a61:	4c 89 f7             	mov    %r14,%rdi
    5a64:	41 54                	push   %r12
    5a66:	53                   	push   %rbx
    5a67:	48 89 d3             	mov    %rdx,%rbx
    5a6a:	e8 00 00 00 00       	call   5a6f <strncpy+0x1f>
			5a6b: R_X86_64_PLT32	strnlen-0x4
    5a6f:	48 39 d8             	cmp    %rbx,%rax
    5a72:	73 34                	jae    5aa8 <strncpy+0x58>
    5a74:	49 89 c4             	mov    %rax,%r12
    5a77:	4c 89 f6             	mov    %r14,%rsi
    5a7a:	4c 89 ef             	mov    %r13,%rdi
    5a7d:	48 89 c2             	mov    %rax,%rdx
    5a80:	e8 00 00 00 00       	call   5a85 <strncpy+0x35>
			5a81: R_X86_64_PLT32	memcpy-0x4
    5a85:	4c 29 e3             	sub    %r12,%rbx
    5a88:	4b 8d 7c 25 00       	lea    0x0(%r13,%r12,1),%rdi
    5a8d:	31 f6                	xor    %esi,%esi
    5a8f:	48 89 da             	mov    %rbx,%rdx
    5a92:	e8 00 00 00 00       	call   5a97 <strncpy+0x47>
			5a93: R_X86_64_PLT32	memset-0x4
    5a97:	5b                   	pop    %rbx
    5a98:	4c 89 e8             	mov    %r13,%rax
    5a9b:	41 5c                	pop    %r12
    5a9d:	41 5d                	pop    %r13
    5a9f:	41 5e                	pop    %r14
    5aa1:	5d                   	pop    %rbp
    5aa2:	c3                   	ret    
    5aa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5aa8:	48 89 da             	mov    %rbx,%rdx
    5aab:	4c 89 f6             	mov    %r14,%rsi
    5aae:	4c 89 ef             	mov    %r13,%rdi
    5ab1:	e8 00 00 00 00       	call   5ab6 <strncpy+0x66>
			5ab2: R_X86_64_PLT32	memcpy-0x4
    5ab6:	5b                   	pop    %rbx
    5ab7:	4c 89 e8             	mov    %r13,%rax
    5aba:	41 5c                	pop    %r12
    5abc:	41 5d                	pop    %r13
    5abe:	41 5e                	pop    %r14
    5ac0:	5d                   	pop    %rbp
    5ac1:	c3                   	ret    
    5ac2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ac9:	00 00 00 
    5acc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005ad0 <strndup>:
    5ad0:	31 c0                	xor    %eax,%eax
    5ad2:	c3                   	ret    
    5ad3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ada:	00 00 00 
    5add:	0f 1f 00             	nopl   (%rax)

0000000000005ae0 <strnlen>:
    5ae0:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    5ae4:	48 89 f8             	mov    %rdi,%rax
    5ae7:	48 85 f6             	test   %rsi,%rsi
    5aea:	75 0d                	jne    5af9 <strnlen+0x19>
    5aec:	eb 21                	jmp    5b0f <strnlen+0x2f>
    5aee:	66 90                	xchg   %ax,%ax
    5af0:	48 83 c0 01          	add    $0x1,%rax
    5af4:	48 39 c2             	cmp    %rax,%rdx
    5af7:	74 0f                	je     5b08 <strnlen+0x28>
    5af9:	80 38 00             	cmpb   $0x0,(%rax)
    5afc:	75 f2                	jne    5af0 <strnlen+0x10>
    5afe:	48 29 f8             	sub    %rdi,%rax
    5b01:	c3                   	ret    
    5b02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5b08:	48 89 d0             	mov    %rdx,%rax
    5b0b:	48 29 f8             	sub    %rdi,%rax
    5b0e:	c3                   	ret    
    5b0f:	31 c0                	xor    %eax,%eax
    5b11:	c3                   	ret    
    5b12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b19:	00 00 00 
    5b1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005b20 <strnstr>:
    5b20:	55                   	push   %rbp
    5b21:	48 89 e5             	mov    %rsp,%rbp
    5b24:	41 57                	push   %r15
    5b26:	41 56                	push   %r14
    5b28:	41 55                	push   %r13
    5b2a:	41 54                	push   %r12
    5b2c:	53                   	push   %rbx
    5b2d:	48 89 fb             	mov    %rdi,%rbx
    5b30:	48 83 ec 18          	sub    $0x18,%rsp
    5b34:	44 0f b6 3e          	movzbl (%rsi),%r15d
    5b38:	45 84 ff             	test   %r15b,%r15b
    5b3b:	75 13                	jne    5b50 <strnstr+0x30>
    5b3d:	48 83 c4 18          	add    $0x18,%rsp
    5b41:	48 89 d8             	mov    %rbx,%rax
    5b44:	5b                   	pop    %rbx
    5b45:	41 5c                	pop    %r12
    5b47:	41 5d                	pop    %r13
    5b49:	41 5e                	pop    %r14
    5b4b:	41 5f                	pop    %r15
    5b4d:	5d                   	pop    %rbp
    5b4e:	c3                   	ret    
    5b4f:	90                   	nop
    5b50:	48 8d 46 01          	lea    0x1(%rsi),%rax
    5b54:	49 89 d5             	mov    %rdx,%r13
    5b57:	48 89 c7             	mov    %rax,%rdi
    5b5a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5b5e:	4d 8d 65 ff          	lea    -0x1(%r13),%r12
    5b62:	e8 00 00 00 00       	call   5b67 <strnstr+0x47>
			5b63: R_X86_64_PLT32	strlen-0x4
    5b67:	49 89 c6             	mov    %rax,%r14
    5b6a:	4d 85 ed             	test   %r13,%r13
    5b6d:	75 0f                	jne    5b7e <strnstr+0x5e>
    5b6f:	eb 3f                	jmp    5bb0 <strnstr+0x90>
    5b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b78:	49 83 ec 01          	sub    $0x1,%r12
    5b7c:	72 32                	jb     5bb0 <strnstr+0x90>
    5b7e:	49 89 dd             	mov    %rbx,%r13
    5b81:	0f b6 03             	movzbl (%rbx),%eax
    5b84:	48 83 c3 01          	add    $0x1,%rbx
    5b88:	84 c0                	test   %al,%al
    5b8a:	74 24                	je     5bb0 <strnstr+0x90>
    5b8c:	41 38 c7             	cmp    %al,%r15b
    5b8f:	75 e7                	jne    5b78 <strnstr+0x58>
    5b91:	4d 39 f4             	cmp    %r14,%r12
    5b94:	72 1a                	jb     5bb0 <strnstr+0x90>
    5b96:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5b9a:	4c 89 f2             	mov    %r14,%rdx
    5b9d:	48 89 df             	mov    %rbx,%rdi
    5ba0:	e8 00 00 00 00       	call   5ba5 <strnstr+0x85>
			5ba1: R_X86_64_PLT32	strncmp-0x4
    5ba5:	85 c0                	test   %eax,%eax
    5ba7:	75 cf                	jne    5b78 <strnstr+0x58>
    5ba9:	4c 89 eb             	mov    %r13,%rbx
    5bac:	eb 8f                	jmp    5b3d <strnstr+0x1d>
    5bae:	66 90                	xchg   %ax,%ax
    5bb0:	31 db                	xor    %ebx,%ebx
    5bb2:	eb 89                	jmp    5b3d <strnstr+0x1d>
    5bb4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bbb:	00 00 00 
    5bbe:	66 90                	xchg   %ax,%ax

0000000000005bc0 <strpbrk>:
    5bc0:	55                   	push   %rbp
    5bc1:	48 89 e5             	mov    %rsp,%rbp
    5bc4:	53                   	push   %rbx
    5bc5:	48 89 fb             	mov    %rdi,%rbx
    5bc8:	48 83 ec 08          	sub    $0x8,%rsp
    5bcc:	e8 00 00 00 00       	call   5bd1 <strpbrk+0x11>
			5bcd: R_X86_64_PLT32	strcspn-0x4
    5bd1:	31 d2                	xor    %edx,%edx
    5bd3:	48 01 d8             	add    %rbx,%rax
    5bd6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5bda:	80 38 00             	cmpb   $0x0,(%rax)
    5bdd:	c9                   	leave  
    5bde:	48 0f 44 c2          	cmove  %rdx,%rax
    5be2:	c3                   	ret    
    5be3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bea:	00 00 00 
    5bed:	0f 1f 00             	nopl   (%rax)

0000000000005bf0 <strrchr>:
    5bf0:	55                   	push   %rbp
    5bf1:	48 89 e5             	mov    %rsp,%rbp
    5bf4:	41 54                	push   %r12
    5bf6:	41 89 f4             	mov    %esi,%r12d
    5bf9:	53                   	push   %rbx
    5bfa:	48 89 fb             	mov    %rdi,%rbx
    5bfd:	e8 00 00 00 00       	call   5c02 <strrchr+0x12>
			5bfe: R_X86_64_PLT32	strlen-0x4
    5c02:	44 89 e6             	mov    %r12d,%esi
    5c05:	48 89 df             	mov    %rbx,%rdi
    5c08:	5b                   	pop    %rbx
    5c09:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5c0d:	41 5c                	pop    %r12
    5c0f:	5d                   	pop    %rbp
    5c10:	e9 00 00 00 00       	jmp    5c15 <strrchr+0x25>
			5c11: R_X86_64_PLT32	__memrchr-0x4
    5c15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c1c:	00 00 00 
    5c1f:	90                   	nop

0000000000005c20 <strspn>:
    5c20:	55                   	push   %rbp
    5c21:	31 c0                	xor    %eax,%eax
    5c23:	48 89 e5             	mov    %rsp,%rbp
    5c26:	48 83 ec 20          	sub    $0x20,%rsp
    5c2a:	0f b6 0e             	movzbl (%rsi),%ecx
    5c2d:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    5c34:	00 
    5c35:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5c3c:	00 
    5c3d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    5c44:	00 
    5c45:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    5c4c:	00 
    5c4d:	84 c9                	test   %cl,%cl
    5c4f:	74 65                	je     5cb6 <strspn+0x96>
    5c51:	80 7e 01 00          	cmpb   $0x0,0x1(%rsi)
    5c55:	0f b6 17             	movzbl (%rdi),%edx
    5c58:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    5c5e:	74 60                	je     5cc0 <strspn+0xa0>
    5c60:	89 c8                	mov    %ecx,%eax
    5c62:	4d 89 c1             	mov    %r8,%r9
    5c65:	48 83 c6 01          	add    $0x1,%rsi
    5c69:	49 d3 e1             	shl    %cl,%r9
    5c6c:	c0 e8 06             	shr    $0x6,%al
    5c6f:	0f b6 0e             	movzbl (%rsi),%ecx
    5c72:	0f b6 c0             	movzbl %al,%eax
    5c75:	4c 09 4c c5 e0       	or     %r9,-0x20(%rbp,%rax,8)
    5c7a:	84 c9                	test   %cl,%cl
    5c7c:	75 e2                	jne    5c60 <strspn+0x40>
    5c7e:	48 89 f8             	mov    %rdi,%rax
    5c81:	84 d2                	test   %dl,%dl
    5c83:	75 17                	jne    5c9c <strspn+0x7c>
    5c85:	eb 2c                	jmp    5cb3 <strspn+0x93>
    5c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5c8e:	00 00 
    5c90:	0f b6 50 01          	movzbl 0x1(%rax),%edx
    5c94:	48 83 c0 01          	add    $0x1,%rax
    5c98:	84 d2                	test   %dl,%dl
    5c9a:	74 17                	je     5cb3 <strspn+0x93>
    5c9c:	89 d1                	mov    %edx,%ecx
    5c9e:	c0 e9 06             	shr    $0x6,%cl
    5ca1:	0f b6 c9             	movzbl %cl,%ecx
    5ca4:	48 8b 74 cd e0       	mov    -0x20(%rbp,%rcx,8),%rsi
    5ca9:	89 d1                	mov    %edx,%ecx
    5cab:	48 d3 ee             	shr    %cl,%rsi
    5cae:	83 e6 01             	and    $0x1,%esi
    5cb1:	75 dd                	jne    5c90 <strspn+0x70>
    5cb3:	48 29 f8             	sub    %rdi,%rax
    5cb6:	c9                   	leave  
    5cb7:	c3                   	ret    
    5cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5cbf:	00 
    5cc0:	48 89 f8             	mov    %rdi,%rax
    5cc3:	38 d1                	cmp    %dl,%cl
    5cc5:	75 ec                	jne    5cb3 <strspn+0x93>
    5cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5cce:	00 00 
    5cd0:	48 83 c0 01          	add    $0x1,%rax
    5cd4:	3a 08                	cmp    (%rax),%cl
    5cd6:	75 db                	jne    5cb3 <strspn+0x93>
    5cd8:	48 83 c0 01          	add    $0x1,%rax
    5cdc:	3a 08                	cmp    (%rax),%cl
    5cde:	74 f0                	je     5cd0 <strspn+0xb0>
    5ce0:	eb d1                	jmp    5cb3 <strspn+0x93>
    5ce2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ce9:	00 00 00 
    5cec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005cf0 <strstr>:
    5cf0:	44 0f b6 06          	movzbl (%rsi),%r8d
    5cf4:	48 89 f8             	mov    %rdi,%rax
    5cf7:	45 84 c0             	test   %r8b,%r8b
    5cfa:	74 3b                	je     5d37 <strstr+0x47>
    5cfc:	0f b6 07             	movzbl (%rdi),%eax
    5cff:	84 c0                	test   %al,%al
    5d01:	75 11                	jne    5d14 <strstr+0x24>
    5d03:	eb 3b                	jmp    5d40 <strstr+0x50>
    5d05:	0f 1f 00             	nopl   (%rax)
    5d08:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
    5d0c:	48 83 c7 01          	add    $0x1,%rdi
    5d10:	84 c0                	test   %al,%al
    5d12:	74 2c                	je     5d40 <strstr+0x50>
    5d14:	41 38 c0             	cmp    %al,%r8b
    5d17:	75 ef                	jne    5d08 <strstr+0x18>
    5d19:	31 c0                	xor    %eax,%eax
    5d1b:	eb 0f                	jmp    5d2c <strstr+0x3c>
    5d1d:	0f 1f 00             	nopl   (%rax)
    5d20:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx
    5d24:	48 83 c0 01          	add    $0x1,%rax
    5d28:	38 ca                	cmp    %cl,%dl
    5d2a:	75 dc                	jne    5d08 <strstr+0x18>
    5d2c:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    5d30:	84 d2                	test   %dl,%dl
    5d32:	75 ec                	jne    5d20 <strstr+0x30>
    5d34:	48 89 f8             	mov    %rdi,%rax
    5d37:	c3                   	ret    
    5d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5d3f:	00 
    5d40:	31 c0                	xor    %eax,%eax
    5d42:	c3                   	ret    
    5d43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5d4a:	00 00 00 
    5d4d:	0f 1f 00             	nopl   (%rax)

0000000000005d50 <__strtok_r>:
    5d50:	48 85 ff             	test   %rdi,%rdi
    5d53:	74 7b                	je     5dd0 <__strtok_r+0x80>
    5d55:	44 0f be 0f          	movsbl (%rdi),%r9d
    5d59:	48 8d 47 01          	lea    0x1(%rdi),%rax
    5d5d:	48 89 f1             	mov    %rsi,%rcx
    5d60:	eb 0b                	jmp    5d6d <__strtok_r+0x1d>
    5d62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d68:	45 39 c1             	cmp    %r8d,%r9d
    5d6b:	74 4b                	je     5db8 <__strtok_r+0x68>
    5d6d:	44 0f be 01          	movsbl (%rcx),%r8d
    5d71:	48 83 c1 01          	add    $0x1,%rcx
    5d75:	45 85 c0             	test   %r8d,%r8d
    5d78:	75 ee                	jne    5d68 <__strtok_r+0x18>
    5d7a:	45 85 c9             	test   %r9d,%r9d
    5d7d:	74 61                	je     5de0 <__strtok_r+0x90>
    5d7f:	48 83 c0 01          	add    $0x1,%rax
    5d83:	48 89 f1             	mov    %rsi,%rcx
    5d86:	44 0f be 48 ff       	movsbl -0x1(%rax),%r9d
    5d8b:	eb 08                	jmp    5d95 <__strtok_r+0x45>
    5d8d:	0f 1f 00             	nopl   (%rax)
    5d90:	45 85 c0             	test   %r8d,%r8d
    5d93:	74 ea                	je     5d7f <__strtok_r+0x2f>
    5d95:	44 0f be 01          	movsbl (%rcx),%r8d
    5d99:	48 83 c1 01          	add    $0x1,%rcx
    5d9d:	45 39 c1             	cmp    %r8d,%r9d
    5da0:	75 ee                	jne    5d90 <__strtok_r+0x40>
    5da2:	45 85 c9             	test   %r9d,%r9d
    5da5:	74 19                	je     5dc0 <__strtok_r+0x70>
    5da7:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
    5dab:	48 89 02             	mov    %rax,(%rdx)
    5dae:	48 89 f8             	mov    %rdi,%rax
    5db1:	c3                   	ret    
    5db2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5db8:	48 89 c7             	mov    %rax,%rdi
    5dbb:	eb 98                	jmp    5d55 <__strtok_r+0x5>
    5dbd:	0f 1f 00             	nopl   (%rax)
    5dc0:	31 c0                	xor    %eax,%eax
    5dc2:	48 89 02             	mov    %rax,(%rdx)
    5dc5:	48 89 f8             	mov    %rdi,%rax
    5dc8:	c3                   	ret    
    5dc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5dd0:	48 8b 3a             	mov    (%rdx),%rdi
    5dd3:	48 85 ff             	test   %rdi,%rdi
    5dd6:	0f 85 79 ff ff ff    	jne    5d55 <__strtok_r+0x5>
    5ddc:	31 c0                	xor    %eax,%eax
    5dde:	c3                   	ret    
    5ddf:	90                   	nop
    5de0:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    5de7:	31 c0                	xor    %eax,%eax
    5de9:	c3                   	ret    
    5dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005df0 <strtok>:
    5df0:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			5df3: R_X86_64_32S	.bss+0x70
    5df7:	e9 54 ff ff ff       	jmp    5d50 <__strtok_r>
    5dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005e00 <strxfrm>:
    5e00:	55                   	push   %rbp
    5e01:	48 89 e5             	mov    %rsp,%rbp
    5e04:	41 56                	push   %r14
    5e06:	49 89 d6             	mov    %rdx,%r14
    5e09:	41 55                	push   %r13
    5e0b:	49 89 fd             	mov    %rdi,%r13
    5e0e:	48 89 f7             	mov    %rsi,%rdi
    5e11:	41 54                	push   %r12
    5e13:	49 89 f4             	mov    %rsi,%r12
    5e16:	53                   	push   %rbx
    5e17:	e8 00 00 00 00       	call   5e1c <strxfrm+0x1c>
			5e18: R_X86_64_PLT32	strlen-0x4
    5e1c:	48 89 c3             	mov    %rax,%rbx
    5e1f:	4c 39 f0             	cmp    %r14,%rax
    5e22:	72 0c                	jb     5e30 <strxfrm+0x30>
    5e24:	48 89 d8             	mov    %rbx,%rax
    5e27:	5b                   	pop    %rbx
    5e28:	41 5c                	pop    %r12
    5e2a:	41 5d                	pop    %r13
    5e2c:	41 5e                	pop    %r14
    5e2e:	5d                   	pop    %rbp
    5e2f:	c3                   	ret    
    5e30:	4c 89 e6             	mov    %r12,%rsi
    5e33:	4c 89 ef             	mov    %r13,%rdi
    5e36:	e8 00 00 00 00       	call   5e3b <strxfrm+0x3b>
			5e37: R_X86_64_PLT32	strcpy-0x4
    5e3b:	48 89 d8             	mov    %rbx,%rax
    5e3e:	5b                   	pop    %rbx
    5e3f:	41 5c                	pop    %r12
    5e41:	41 5d                	pop    %r13
    5e43:	41 5e                	pop    %r14
    5e45:	5d                   	pop    %rbp
    5e46:	c3                   	ret    
    5e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5e4e:	00 00 

0000000000005e50 <fls>:
    5e50:	31 c0                	xor    %eax,%eax
    5e52:	85 ff                	test   %edi,%edi
    5e54:	74 06                	je     5e5c <fls+0xc>
    5e56:	0f bd ff             	bsr    %edi,%edi
    5e59:	8d 47 01             	lea    0x1(%rdi),%eax
    5e5c:	c3                   	ret    
    5e5d:	0f 1f 00             	nopl   (%rax)

0000000000005e60 <flsl>:
    5e60:	31 c0                	xor    %eax,%eax
    5e62:	48 85 ff             	test   %rdi,%rdi
    5e65:	74 07                	je     5e6e <flsl+0xe>
    5e67:	48 0f bd ff          	bsr    %rdi,%rdi
    5e6b:	8d 47 01             	lea    0x1(%rdi),%eax
    5e6e:	c3                   	ret    
    5e6f:	90                   	nop

0000000000005e70 <flsll>:
    5e70:	31 c0                	xor    %eax,%eax
    5e72:	48 85 ff             	test   %rdi,%rdi
    5e75:	74 07                	je     5e7e <flsll+0xe>
    5e77:	48 0f bd ff          	bsr    %rdi,%rdi
    5e7b:	8d 47 01             	lea    0x1(%rdi),%eax
    5e7e:	c3                   	ret    
    5e7f:	90                   	nop

0000000000005e80 <asctime>:
    5e80:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			5e83: R_X86_64_32S	.bss+0x80
    5e87:	e9 00 00 00 00       	jmp    5e8c <asctime+0xc>
			5e88: R_X86_64_PLT32	asctime_r-0x4
    5e8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005e90 <asctime_r>:
    5e90:	55                   	push   %rbp
    5e91:	48 89 e5             	mov    %rsp,%rbp
    5e94:	41 57                	push   %r15
    5e96:	41 56                	push   %r14
    5e98:	41 55                	push   %r13
    5e9a:	41 54                	push   %r12
    5e9c:	49 89 f4             	mov    %rsi,%r12
    5e9f:	53                   	push   %rbx
    5ea0:	48 89 fb             	mov    %rdi,%rbx
    5ea3:	48 83 ec 18          	sub    $0x18,%rsp
    5ea7:	8b 47 14             	mov    0x14(%rdi),%eax
    5eaa:	44 8b 07             	mov    (%rdi),%r8d
    5ead:	44 8b 4f 0c          	mov    0xc(%rdi),%r9d
    5eb1:	44 8b 77 04          	mov    0x4(%rdi),%r14d
    5eb5:	44 8d b8 6c 07 00 00 	lea    0x76c(%rax),%r15d
    5ebc:	8b 47 10             	mov    0x10(%rdi),%eax
    5ebf:	44 8b 6f 08          	mov    0x8(%rdi),%r13d
    5ec3:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
    5ec7:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
    5ecb:	8d b8 0e 00 02 00    	lea    0x2000e(%rax),%edi
    5ed1:	e8 00 00 00 00       	call   5ed6 <asctime_r+0x46>
			5ed2: R_X86_64_PLT32	nl_langinfo-0x4
    5ed6:	8b 7b 18             	mov    0x18(%rbx),%edi
    5ed9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5edd:	81 c7 00 00 02 00    	add    $0x20000,%edi
    5ee3:	e8 00 00 00 00       	call   5ee8 <asctime_r+0x58>
			5ee4: R_X86_64_PLT32	nl_langinfo-0x4
    5ee8:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
    5eec:	41 57                	push   %r15
    5eee:	be 1a 00 00 00       	mov    $0x1a,%esi
    5ef3:	44 8b 4d c4          	mov    -0x3c(%rbp),%r9d
    5ef7:	48 89 c1             	mov    %rax,%rcx
    5efa:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			5efd: R_X86_64_32S	.rodata.str1.8+0x58
    5f01:	4c 89 e7             	mov    %r12,%rdi
    5f04:	41 50                	push   %r8
    5f06:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    5f0a:	31 c0                	xor    %eax,%eax
    5f0c:	41 56                	push   %r14
    5f0e:	41 55                	push   %r13
    5f10:	e8 00 00 00 00       	call   5f15 <asctime_r+0x85>
			5f11: R_X86_64_PLT32	snprintf_-0x4
    5f15:	48 83 c4 20          	add    $0x20,%rsp
    5f19:	83 f8 19             	cmp    $0x19,%eax
    5f1c:	7f 12                	jg     5f30 <asctime_r+0xa0>
    5f1e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5f22:	4c 89 e0             	mov    %r12,%rax
    5f25:	5b                   	pop    %rbx
    5f26:	41 5c                	pop    %r12
    5f28:	41 5d                	pop    %r13
    5f2a:	41 5e                	pop    %r14
    5f2c:	41 5f                	pop    %r15
    5f2e:	5d                   	pop    %rbp
    5f2f:	c3                   	ret    
    5f30:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			5f33: R_X86_64_32S	.rodata+0xc68
    5f37:	ba 16 00 00 00       	mov    $0x16,%edx
    5f3c:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			5f3f: R_X86_64_32S	.rodata.str1.1+0x4a
    5f43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5f46: R_X86_64_32S	.rodata.str1.8+0x78
    5f4a:	e8 00 00 00 00       	call   5f4f <asctime_r+0xbf>
			5f4b: R_X86_64_PLT32	__assert_fail-0x4
    5f4f:	90                   	nop

0000000000005f50 <iswalnum>:
    5f50:	55                   	push   %rbp
    5f51:	48 89 e5             	mov    %rsp,%rbp
    5f54:	53                   	push   %rbx
    5f55:	48 89 fb             	mov    %rdi,%rbx
    5f58:	48 83 ec 08          	sub    $0x8,%rsp
    5f5c:	e8 00 00 00 00       	call   5f61 <iswalnum+0x11>
			5f5d: R_X86_64_PLT32	iswdigit-0x4
    5f61:	89 c2                	mov    %eax,%edx
    5f63:	b8 01 00 00 00       	mov    $0x1,%eax
    5f68:	85 d2                	test   %edx,%edx
    5f6a:	74 0c                	je     5f78 <iswalnum+0x28>
    5f6c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f70:	c9                   	leave  
    5f71:	c3                   	ret    
    5f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f78:	48 89 df             	mov    %rbx,%rdi
    5f7b:	e8 00 00 00 00       	call   5f80 <iswalnum+0x30>
			5f7c: R_X86_64_PLT32	iswalpha-0x4
    5f80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f84:	c9                   	leave  
    5f85:	85 c0                	test   %eax,%eax
    5f87:	0f 95 c0             	setne  %al
    5f8a:	0f b6 c0             	movzbl %al,%eax
    5f8d:	c3                   	ret    
    5f8e:	66 90                	xchg   %ax,%ax

0000000000005f90 <iswalpha>:
    5f90:	31 c0                	xor    %eax,%eax
    5f92:	48 81 ff fd ff 02 00 	cmp    $0x2fffd,%rdi
    5f99:	0f 9e c0             	setle  %al
    5f9c:	48 81 ff ff ff 01 00 	cmp    $0x1ffff,%rdi
    5fa3:	7e 0b                	jle    5fb0 <iswalpha+0x20>
    5fa5:	c3                   	ret    
    5fa6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5fad:	00 00 00 
    5fb0:	48 89 f8             	mov    %rdi,%rax
    5fb3:	48 89 fa             	mov    %rdi,%rdx
    5fb6:	83 e7 07             	and    $0x7,%edi
    5fb9:	48 c1 f8 08          	sar    $0x8,%rax
    5fbd:	48 c1 fa 03          	sar    $0x3,%rdx
    5fc1:	89 f9                	mov    %edi,%ecx
    5fc3:	0f b6 80 00 00 00 00 	movzbl 0x0(%rax),%eax
			5fc6: R_X86_64_32S	.rodata+0xc80
    5fca:	83 e2 1f             	and    $0x1f,%edx
    5fcd:	c1 e0 05             	shl    $0x5,%eax
    5fd0:	48 98                	cltq   
    5fd2:	0f b6 84 10 00 00 00 	movzbl 0x0(%rax,%rdx,1),%eax
    5fd9:	00 
			5fd6: R_X86_64_32S	.rodata+0xc80
    5fda:	d3 f8                	sar    %cl,%eax
    5fdc:	83 e0 01             	and    $0x1,%eax
    5fdf:	c3                   	ret    

0000000000005fe0 <iswblank>:
    5fe0:	e9 00 00 00 00       	jmp    5fe5 <iswblank+0x5>
			5fe1: R_X86_64_PLT32	isblank-0x4
    5fe5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5fec:	00 00 00 
    5fef:	90                   	nop

0000000000005ff0 <iswcntrl>:
    5ff0:	8d 47 81             	lea    -0x7f(%rdi),%eax
    5ff3:	83 f8 20             	cmp    $0x20,%eax
    5ff6:	76 28                	jbe    6020 <iswcntrl+0x30>
    5ff8:	83 ff 1f             	cmp    $0x1f,%edi
    5ffb:	76 23                	jbe    6020 <iswcntrl+0x30>
    5ffd:	8d 97 d8 df ff ff    	lea    -0x2028(%rdi),%edx
    6003:	b8 01 00 00 00       	mov    $0x1,%eax
    6008:	83 fa 01             	cmp    $0x1,%edx
    600b:	76 18                	jbe    6025 <iswcntrl+0x35>
    600d:	81 ef f9 ff 00 00    	sub    $0xfff9,%edi
    6013:	31 c0                	xor    %eax,%eax
    6015:	83 ff 02             	cmp    $0x2,%edi
    6018:	0f 96 c0             	setbe  %al
    601b:	c3                   	ret    
    601c:	0f 1f 40 00          	nopl   0x0(%rax)
    6020:	b8 01 00 00 00       	mov    $0x1,%eax
    6025:	c3                   	ret    
    6026:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    602d:	00 00 00 

0000000000006030 <iswctype>:
    6030:	48 83 fe 0c          	cmp    $0xc,%rsi
    6034:	77 67                	ja     609d <iswctype+0x6d>
    6036:	ff 24 f5 00 00 00 00 	jmp    *0x0(,%rsi,8)
			6039: R_X86_64_32S	.rodata+0x1820
    603d:	0f 1f 00             	nopl   (%rax)
    6040:	e9 00 00 00 00       	jmp    6045 <iswctype+0x15>
			6041: R_X86_64_PLT32	iswxdigit-0x4
    6045:	0f 1f 00             	nopl   (%rax)
    6048:	e9 00 00 00 00       	jmp    604d <iswctype+0x1d>
			6049: R_X86_64_PLT32	iswalnum-0x4
    604d:	0f 1f 00             	nopl   (%rax)
    6050:	e9 00 00 00 00       	jmp    6055 <iswctype+0x25>
			6051: R_X86_64_PLT32	iswalpha-0x4
    6055:	0f 1f 00             	nopl   (%rax)
    6058:	e9 00 00 00 00       	jmp    605d <iswctype+0x2d>
			6059: R_X86_64_PLT32	iswblank-0x4
    605d:	0f 1f 00             	nopl   (%rax)
    6060:	e9 00 00 00 00       	jmp    6065 <iswctype+0x35>
			6061: R_X86_64_PLT32	iswcntrl-0x4
    6065:	0f 1f 00             	nopl   (%rax)
    6068:	e9 00 00 00 00       	jmp    606d <iswctype+0x3d>
			6069: R_X86_64_PLT32	iswdigit-0x4
    606d:	0f 1f 00             	nopl   (%rax)
    6070:	e9 00 00 00 00       	jmp    6075 <iswctype+0x45>
			6071: R_X86_64_PLT32	iswgraph-0x4
    6075:	0f 1f 00             	nopl   (%rax)
    6078:	e9 00 00 00 00       	jmp    607d <iswctype+0x4d>
			6079: R_X86_64_PLT32	iswlower-0x4
    607d:	0f 1f 00             	nopl   (%rax)
    6080:	e9 00 00 00 00       	jmp    6085 <iswctype+0x55>
			6081: R_X86_64_PLT32	iswprint-0x4
    6085:	0f 1f 00             	nopl   (%rax)
    6088:	e9 00 00 00 00       	jmp    608d <iswctype+0x5d>
			6089: R_X86_64_PLT32	iswpunct-0x4
    608d:	0f 1f 00             	nopl   (%rax)
    6090:	e9 00 00 00 00       	jmp    6095 <iswctype+0x65>
			6091: R_X86_64_PLT32	iswspace-0x4
    6095:	0f 1f 00             	nopl   (%rax)
    6098:	e9 00 00 00 00       	jmp    609d <iswctype+0x6d>
			6099: R_X86_64_PLT32	iswupper-0x4
    609d:	31 c0                	xor    %eax,%eax
    609f:	c3                   	ret    

00000000000060a0 <iswdigit>:
    60a0:	83 ef 30             	sub    $0x30,%edi
    60a3:	31 c0                	xor    %eax,%eax
    60a5:	83 ff 09             	cmp    $0x9,%edi
    60a8:	0f 96 c0             	setbe  %al
    60ab:	c3                   	ret    
    60ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000060b0 <iswgraph>:
    60b0:	55                   	push   %rbp
    60b1:	48 89 e5             	mov    %rsp,%rbp
    60b4:	53                   	push   %rbx
    60b5:	48 89 fb             	mov    %rdi,%rbx
    60b8:	48 83 ec 08          	sub    $0x8,%rsp
    60bc:	e8 00 00 00 00       	call   60c1 <iswgraph+0x11>
			60bd: R_X86_64_PLT32	iswspace-0x4
    60c1:	89 c2                	mov    %eax,%edx
    60c3:	31 c0                	xor    %eax,%eax
    60c5:	85 d2                	test   %edx,%edx
    60c7:	74 07                	je     60d0 <iswgraph+0x20>
    60c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60cd:	c9                   	leave  
    60ce:	c3                   	ret    
    60cf:	90                   	nop
    60d0:	48 89 df             	mov    %rbx,%rdi
    60d3:	e8 00 00 00 00       	call   60d8 <iswgraph+0x28>
			60d4: R_X86_64_PLT32	iswprint-0x4
    60d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60dc:	c9                   	leave  
    60dd:	85 c0                	test   %eax,%eax
    60df:	0f 95 c0             	setne  %al
    60e2:	0f b6 c0             	movzbl %al,%eax
    60e5:	c3                   	ret    
    60e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    60ed:	00 00 00 

00000000000060f0 <iswlower>:
    60f0:	55                   	push   %rbp
    60f1:	48 89 e5             	mov    %rsp,%rbp
    60f4:	53                   	push   %rbx
    60f5:	48 89 fb             	mov    %rdi,%rbx
    60f8:	48 83 ec 08          	sub    $0x8,%rsp
    60fc:	e8 00 00 00 00       	call   6101 <iswlower+0x11>
			60fd: R_X86_64_PLT32	towupper-0x4
    6101:	48 39 d8             	cmp    %rbx,%rax
    6104:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6108:	c9                   	leave  
    6109:	0f 95 c0             	setne  %al
    610c:	0f b6 c0             	movzbl %al,%eax
    610f:	c3                   	ret    

0000000000006110 <iswprint>:
    6110:	48 81 ff fe 00 00 00 	cmp    $0xfe,%rdi
    6117:	7e 2f                	jle    6148 <iswprint+0x38>
    6119:	b8 01 00 00 00       	mov    $0x1,%eax
    611e:	48 81 ff f8 ff 00 00 	cmp    $0xfff8,%rdi
    6125:	7e 1d                	jle    6144 <iswprint+0x34>
    6127:	31 c0                	xor    %eax,%eax
    6129:	48 81 ff ff ff 10 00 	cmp    $0x10ffff,%rdi
    6130:	7f 12                	jg     6144 <iswprint+0x34>
    6132:	81 e7 fe ff 00 00    	and    $0xfffe,%edi
    6138:	31 c0                	xor    %eax,%eax
    613a:	48 81 ff fe ff 00 00 	cmp    $0xfffe,%rdi
    6141:	0f 95 c0             	setne  %al
    6144:	c3                   	ret    
    6145:	0f 1f 00             	nopl   (%rax)
    6148:	48 83 c7 01          	add    $0x1,%rdi
    614c:	31 c0                	xor    %eax,%eax
    614e:	83 e7 7f             	and    $0x7f,%edi
    6151:	48 83 ff 20          	cmp    $0x20,%rdi
    6155:	0f 9f c0             	setg   %al
    6158:	c3                   	ret    
    6159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006160 <iswpunct>:
    6160:	31 c0                	xor    %eax,%eax
    6162:	48 81 ff ff ff 01 00 	cmp    $0x1ffff,%rdi
    6169:	7e 05                	jle    6170 <iswpunct+0x10>
    616b:	c3                   	ret    
    616c:	0f 1f 40 00          	nopl   0x0(%rax)
    6170:	48 89 f8             	mov    %rdi,%rax
    6173:	48 89 fa             	mov    %rdi,%rdx
    6176:	83 e7 07             	and    $0x7,%edi
    6179:	48 c1 f8 08          	sar    $0x8,%rax
    617d:	48 c1 fa 03          	sar    $0x3,%rdx
    6181:	89 f9                	mov    %edi,%ecx
    6183:	0f b6 80 00 00 00 00 	movzbl 0x0(%rax),%eax
			6186: R_X86_64_32S	.rodata+0x18a0
    618a:	83 e2 1f             	and    $0x1f,%edx
    618d:	c1 e0 05             	shl    $0x5,%eax
    6190:	48 98                	cltq   
    6192:	0f b6 84 10 00 00 00 	movzbl 0x0(%rax,%rdx,1),%eax
    6199:	00 
			6196: R_X86_64_32S	.rodata+0x18a0
    619a:	d3 f8                	sar    %cl,%eax
    619c:	83 e0 01             	and    $0x1,%eax
    619f:	c3                   	ret    

00000000000061a0 <iswspace>:
    61a0:	31 c0                	xor    %eax,%eax
    61a2:	48 85 ff             	test   %rdi,%rdi
    61a5:	74 1f                	je     61c6 <iswspace+0x26>
    61a7:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			61aa: R_X86_64_32S	.rodata+0x2500
    61ae:	eb 09                	jmp    61b9 <iswspace+0x19>
    61b0:	48 83 c0 08          	add    $0x8,%rax
    61b4:	48 85 d2             	test   %rdx,%rdx
    61b7:	74 17                	je     61d0 <iswspace+0x30>
    61b9:	48 8b 10             	mov    (%rax),%rdx
    61bc:	48 39 d7             	cmp    %rdx,%rdi
    61bf:	75 ef                	jne    61b0 <iswspace+0x10>
    61c1:	b8 01 00 00 00       	mov    $0x1,%eax
    61c6:	c3                   	ret    
    61c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    61ce:	00 00 
    61d0:	31 c0                	xor    %eax,%eax
    61d2:	c3                   	ret    
    61d3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    61da:	00 00 00 00 
    61de:	66 90                	xchg   %ax,%ax

00000000000061e0 <wcschr>:
    61e0:	48 89 f8             	mov    %rdi,%rax
    61e3:	eb 0c                	jmp    61f1 <wcschr+0x11>
    61e5:	0f 1f 00             	nopl   (%rax)
    61e8:	48 83 c0 08          	add    $0x8,%rax
    61ec:	48 85 d2             	test   %rdx,%rdx
    61ef:	74 0f                	je     6200 <wcschr+0x20>
    61f1:	48 8b 10             	mov    (%rax),%rdx
    61f4:	48 39 f2             	cmp    %rsi,%rdx
    61f7:	75 ef                	jne    61e8 <wcschr+0x8>
    61f9:	c3                   	ret    
    61fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6200:	31 c0                	xor    %eax,%eax
    6202:	c3                   	ret    
    6203:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    620a:	00 00 00 
    620d:	0f 1f 00             	nopl   (%rax)

0000000000006210 <iswupper>:
    6210:	55                   	push   %rbp
    6211:	48 89 e5             	mov    %rsp,%rbp
    6214:	53                   	push   %rbx
    6215:	48 89 fb             	mov    %rdi,%rbx
    6218:	48 83 ec 08          	sub    $0x8,%rsp
    621c:	e8 00 00 00 00       	call   6221 <iswupper+0x11>
			621d: R_X86_64_PLT32	towlower-0x4
    6221:	48 39 d8             	cmp    %rbx,%rax
    6224:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6228:	c9                   	leave  
    6229:	0f 95 c0             	setne  %al
    622c:	0f b6 c0             	movzbl %al,%eax
    622f:	c3                   	ret    

0000000000006230 <iswxdigit>:
    6230:	8d 57 d0             	lea    -0x30(%rdi),%edx
    6233:	b8 01 00 00 00       	mov    $0x1,%eax
    6238:	83 fa 09             	cmp    $0x9,%edx
    623b:	76 0e                	jbe    624b <iswxdigit+0x1b>
    623d:	83 cf 20             	or     $0x20,%edi
    6240:	31 c0                	xor    %eax,%eax
    6242:	83 ef 61             	sub    $0x61,%edi
    6245:	83 ff 05             	cmp    $0x5,%edi
    6248:	0f 96 c0             	setbe  %al
    624b:	c3                   	ret    
    624c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006250 <__towcase>:
    6250:	55                   	push   %rbp
    6251:	48 89 e5             	mov    %rsp,%rbp
    6254:	41 54                	push   %r12
    6256:	4c 63 e6             	movslq %esi,%r12
    6259:	53                   	push   %rbx
    625a:	48 89 fb             	mov    %rdi,%rbx
    625d:	e8 00 00 00 00       	call   6262 <__towcase+0x12>
			625e: R_X86_64_PLT32	iswalpha-0x4
    6262:	85 c0                	test   %eax,%eax
    6264:	74 76                	je     62dc <__towcase+0x8c>
    6266:	8d 93 00 fa ff ff    	lea    -0x600(%rbx),%edx
    626c:	89 d8                	mov    %ebx,%eax
    626e:	81 fa ff 09 00 00    	cmp    $0x9ff,%edx
    6274:	76 66                	jbe    62dc <__towcase+0x8c>
    6276:	8d 93 00 d2 ff ff    	lea    -0x2e00(%rbx),%edx
    627c:	81 fa 3f 78 00 00    	cmp    $0x783f,%edx
    6282:	76 58                	jbe    62dc <__towcase+0x8c>
    6284:	8d 93 00 58 ff ff    	lea    -0xa800(%rbx),%edx
    628a:	81 fa 52 03 00 00    	cmp    $0x352,%edx
    6290:	76 4a                	jbe    62dc <__towcase+0x8c>
    6292:	8d 93 40 54 ff ff    	lea    -0xabc0(%rbx),%edx
    6298:	81 fa 3f 53 00 00    	cmp    $0x533f,%edx
    629e:	76 3c                	jbe    62dc <__towcase+0x8c>
    62a0:	45 85 e4             	test   %r12d,%r12d
    62a3:	74 43                	je     62e8 <__towcase+0x98>
    62a5:	8d 93 60 ef ff ff    	lea    -0x10a0(%rbx),%edx
    62ab:	83 fa 2d             	cmp    $0x2d,%edx
    62ae:	0f 87 ec 00 00 00    	ja     63a0 <__towcase+0x150>
    62b4:	48 81 fb c5 10 00 00 	cmp    $0x10c5,%rbx
    62bb:	0f 9f c2             	setg   %dl
    62be:	48 81 fb c7 10 00 00 	cmp    $0x10c7,%rbx
    62c5:	0f 95 c0             	setne  %al
    62c8:	84 c2                	test   %al,%dl
    62ca:	74 09                	je     62d5 <__towcase+0x85>
    62cc:	48 81 fb cd 10 00 00 	cmp    $0x10cd,%rbx
    62d3:	75 07                	jne    62dc <__towcase+0x8c>
    62d5:	48 81 c3 60 1c 00 00 	add    $0x1c60,%rbx
    62dc:	48 89 d8             	mov    %rbx,%rax
    62df:	5b                   	pop    %rbx
    62e0:	41 5c                	pop    %r12
    62e2:	5d                   	pop    %rbp
    62e3:	c3                   	ret    
    62e4:	0f 1f 40 00          	nopl   0x0(%rax)
    62e8:	8d 93 00 d3 ff ff    	lea    -0x2d00(%rbx),%edx
    62ee:	83 fa 25             	cmp    $0x25,%edx
    62f1:	76 75                	jbe    6368 <__towcase+0x118>
    62f3:	2d 70 ab 00 00       	sub    $0xab70,%eax
    62f8:	83 f8 4f             	cmp    $0x4f,%eax
    62fb:	0f 86 0f 01 00 00    	jbe    6410 <__towcase+0x1c0>
    6301:	45 8d 54 24 ff       	lea    -0x1(%r12),%r10d
    6306:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			6309: R_X86_64_32S	.rodata+0x2800
    630d:	ba 1f 00 00 00       	mov    $0x1f,%edx
    6312:	eb 14                	jmp    6328 <__towcase+0xd8>
    6314:	0f 1f 40 00          	nopl   0x0(%rax)
    6318:	0f b6 51 07          	movzbl 0x7(%rcx),%edx
    631c:	48 83 c1 04          	add    $0x4,%rcx
    6320:	84 d2                	test   %dl,%dl
    6322:	0f 84 98 00 00 00    	je     63c0 <__towcase+0x170>
    6328:	0f be 79 02          	movsbl 0x2(%rcx),%edi
    632c:	44 0f b7 09          	movzwl (%rcx),%r9d
    6330:	89 f8                	mov    %edi,%eax
    6332:	45 89 c8             	mov    %r9d,%r8d
    6335:	44 21 d0             	and    %r10d,%eax
    6338:	44 01 c8             	add    %r9d,%eax
    633b:	49 89 d9             	mov    %rbx,%r9
    633e:	48 98                	cltq   
    6340:	49 29 c1             	sub    %rax,%r9
    6343:	49 39 d1             	cmp    %rdx,%r9
    6346:	7d d0                	jge    6318 <__towcase+0xc8>
    6348:	40 80 ff 01          	cmp    $0x1,%dil
    634c:	0f 84 58 01 00 00    	je     64aa <__towcase+0x25a>
    6352:	43 8d 44 24 ff       	lea    -0x1(%r12,%r12,1),%eax
    6357:	0f af c7             	imul   %edi,%eax
    635a:	48 98                	cltq   
    635c:	48 01 c3             	add    %rax,%rbx
    635f:	e9 78 ff ff ff       	jmp    62dc <__towcase+0x8c>
    6364:	0f 1f 40 00          	nopl   0x0(%rax)
    6368:	48 81 fb 25 2d 00 00 	cmp    $0x2d25,%rbx
    636f:	0f 9f c2             	setg   %dl
    6372:	48 81 fb 27 2d 00 00 	cmp    $0x2d27,%rbx
    6379:	0f 95 c0             	setne  %al
    637c:	84 c2                	test   %al,%dl
    637e:	74 0d                	je     638d <__towcase+0x13d>
    6380:	48 81 fb 2d 2d 00 00 	cmp    $0x2d2d,%rbx
    6387:	0f 85 4f ff ff ff    	jne    62dc <__towcase+0x8c>
    638d:	48 81 eb 60 1c 00 00 	sub    $0x1c60,%rbx
    6394:	e9 43 ff ff ff       	jmp    62dc <__towcase+0x8c>
    6399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    63a0:	2d a0 13 00 00       	sub    $0x13a0,%eax
    63a5:	83 f8 4f             	cmp    $0x4f,%eax
    63a8:	0f 87 53 ff ff ff    	ja     6301 <__towcase+0xb1>
    63ae:	48 81 c3 d0 97 00 00 	add    $0x97d0,%rbx
    63b5:	e9 22 ff ff ff       	jmp    62dc <__towcase+0x8c>
    63ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    63c0:	b9 01 00 00 00       	mov    $0x1,%ecx
    63c5:	44 29 e1             	sub    %r12d,%ecx
    63c8:	48 63 c9             	movslq %ecx,%rcx
    63cb:	0f b7 84 09 00 00 00 	movzwl 0x0(%rcx,%rcx,1),%eax
    63d2:	00 
			63cf: R_X86_64_32S	.rodata+0x25c0
    63d3:	66 85 c0             	test   %ax,%ax
    63d6:	74 44                	je     641c <__towcase+0x1cc>
    63d8:	48 01 c9             	add    %rcx,%rcx
    63db:	31 d2                	xor    %edx,%edx
    63dd:	eb 12                	jmp    63f1 <__towcase+0x1a1>
    63df:	90                   	nop
    63e0:	48 83 c2 01          	add    $0x1,%rdx
    63e4:	0f b7 84 91 00 00 00 	movzwl 0x0(%rcx,%rdx,4),%eax
    63eb:	00 
			63e8: R_X86_64_32S	.rodata+0x25c0
    63ec:	66 85 c0             	test   %ax,%ax
    63ef:	74 2b                	je     641c <__towcase+0x1cc>
    63f1:	48 39 d8             	cmp    %rbx,%rax
    63f4:	75 ea                	jne    63e0 <__towcase+0x190>
    63f6:	48 63 d2             	movslq %edx,%rdx
    63f9:	49 8d 04 54          	lea    (%r12,%rdx,2),%rax
    63fd:	0f b7 9c 00 00 00 00 	movzwl 0x0(%rax,%rax,1),%ebx
    6404:	00 
			6401: R_X86_64_32S	.rodata+0x25c0
    6405:	e9 d2 fe ff ff       	jmp    62dc <__towcase+0x8c>
    640a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6410:	48 81 eb d0 97 00 00 	sub    $0x97d0,%rbx
    6417:	e9 c0 fe ff ff       	jmp    62dc <__towcase+0x8c>
    641c:	41 6b c4 d8          	imul   $0xffffffd8,%r12d,%eax
    6420:	48 89 d9             	mov    %rbx,%rcx
    6423:	8d 90 28 04 01 00    	lea    0x10428(%rax),%edx
    6429:	48 63 d2             	movslq %edx,%rdx
    642c:	48 29 d1             	sub    %rdx,%rcx
    642f:	48 83 f9 27          	cmp    $0x27,%rcx
    6433:	0f 8e 8b 00 00 00    	jle    64c4 <__towcase+0x274>
    6439:	05 d8 04 01 00       	add    $0x104d8,%eax
    643e:	48 89 da             	mov    %rbx,%rdx
    6441:	48 98                	cltq   
    6443:	48 29 c2             	sub    %rax,%rdx
    6446:	48 83 fa 23          	cmp    $0x23,%rdx
    644a:	7e 78                	jle    64c4 <__towcase+0x274>
    644c:	b8 33 04 00 00       	mov    $0x433,%eax
    6451:	48 89 da             	mov    %rbx,%rdx
    6454:	44 29 e0             	sub    %r12d,%eax
    6457:	c1 e0 06             	shl    $0x6,%eax
    645a:	48 98                	cltq   
    645c:	48 29 c2             	sub    %rax,%rdx
    645f:	48 83 fa 32          	cmp    $0x32,%rdx
    6463:	7e 73                	jle    64d8 <__towcase+0x288>
    6465:	b8 c6 08 00 00       	mov    $0x8c6,%eax
    646a:	48 89 da             	mov    %rbx,%rdx
    646d:	44 29 e0             	sub    %r12d,%eax
    6470:	c1 e0 05             	shl    $0x5,%eax
    6473:	48 98                	cltq   
    6475:	48 29 c2             	sub    %rax,%rdx
    6478:	48 83 fa 1f          	cmp    $0x1f,%rdx
    647c:	7e 6d                	jle    64eb <__towcase+0x29b>
    647e:	41 6b c4 de          	imul   $0xffffffde,%r12d,%eax
    6482:	48 89 da             	mov    %rbx,%rdx
    6485:	05 22 e9 01 00       	add    $0x1e922,%eax
    648a:	48 98                	cltq   
    648c:	48 29 c2             	sub    %rax,%rdx
    648f:	48 83 fa 21          	cmp    $0x21,%rdx
    6493:	0f 8f 43 fe ff ff    	jg     62dc <__towcase+0x8c>
    6499:	41 6b c4 44          	imul   $0x44,%r12d,%eax
    649d:	83 c0 22             	add    $0x22,%eax
    64a0:	48 98                	cltq   
    64a2:	48 29 c3             	sub    %rax,%rbx
    64a5:	e9 32 fe ff ff       	jmp    62dc <__towcase+0x8c>
    64aa:	48 89 d8             	mov    %rbx,%rax
    64ad:	49 63 d4             	movslq %r12d,%rdx
    64b0:	48 01 da             	add    %rbx,%rdx
    64b3:	4c 29 c0             	sub    %r8,%rax
    64b6:	83 e0 01             	and    $0x1,%eax
    64b9:	48 89 d3             	mov    %rdx,%rbx
    64bc:	48 29 c3             	sub    %rax,%rbx
    64bf:	e9 18 fe ff ff       	jmp    62dc <__towcase+0x8c>
    64c4:	43 8d 04 a4          	lea    (%r12,%r12,4),%eax
    64c8:	c1 e0 04             	shl    $0x4,%eax
    64cb:	83 c0 28             	add    $0x28,%eax
    64ce:	48 98                	cltq   
    64d0:	48 29 c3             	sub    %rax,%rbx
    64d3:	e9 04 fe ff ff       	jmp    62dc <__towcase+0x8c>
    64d8:	44 89 e0             	mov    %r12d,%eax
    64db:	c1 e0 07             	shl    $0x7,%eax
    64de:	83 c0 40             	add    $0x40,%eax
    64e1:	48 98                	cltq   
    64e3:	48 29 c3             	sub    %rax,%rbx
    64e6:	e9 f1 fd ff ff       	jmp    62dc <__towcase+0x8c>
    64eb:	44 89 e0             	mov    %r12d,%eax
    64ee:	c1 e0 06             	shl    $0x6,%eax
    64f1:	83 c0 20             	add    $0x20,%eax
    64f4:	48 98                	cltq   
    64f6:	48 29 c3             	sub    %rax,%rbx
    64f9:	e9 de fd ff ff       	jmp    62dc <__towcase+0x8c>
    64fe:	66 90                	xchg   %ax,%ax

0000000000006500 <towctrans>:
    6500:	48 83 fe 01          	cmp    $0x1,%rsi
    6504:	74 0a                	je     6510 <towctrans+0x10>
    6506:	48 83 fe 02          	cmp    $0x2,%rsi
    650a:	74 0c                	je     6518 <towctrans+0x18>
    650c:	48 89 f8             	mov    %rdi,%rax
    650f:	c3                   	ret    
    6510:	e9 00 00 00 00       	jmp    6515 <towctrans+0x15>
			6511: R_X86_64_PLT32	towupper-0x4
    6515:	0f 1f 00             	nopl   (%rax)
    6518:	e9 00 00 00 00       	jmp    651d <towctrans+0x1d>
			6519: R_X86_64_PLT32	towlower-0x4
    651d:	0f 1f 00             	nopl   (%rax)

0000000000006520 <towlower>:
    6520:	48 83 ff 7f          	cmp    $0x7f,%rdi
    6524:	7e 0a                	jle    6530 <towlower+0x10>
    6526:	be 01 00 00 00       	mov    $0x1,%esi
    652b:	e9 00 00 00 00       	jmp    6530 <towlower+0x10>
			652c: R_X86_64_PLT32	__towcase-0x4
    6530:	55                   	push   %rbp
    6531:	48 89 e5             	mov    %rsp,%rbp
    6534:	e8 00 00 00 00       	call   6539 <towlower+0x19>
			6535: R_X86_64_PLT32	tolower-0x4
    6539:	5d                   	pop    %rbp
    653a:	48 98                	cltq   
    653c:	c3                   	ret    
    653d:	0f 1f 00             	nopl   (%rax)

0000000000006540 <towupper>:
    6540:	48 83 ff 7f          	cmp    $0x7f,%rdi
    6544:	7e 0a                	jle    6550 <towupper+0x10>
    6546:	31 f6                	xor    %esi,%esi
    6548:	e9 00 00 00 00       	jmp    654d <towupper+0xd>
			6549: R_X86_64_PLT32	__towcase-0x4
    654d:	0f 1f 00             	nopl   (%rax)
    6550:	55                   	push   %rbp
    6551:	48 89 e5             	mov    %rsp,%rbp
    6554:	e8 00 00 00 00       	call   6559 <towupper+0x19>
			6555: R_X86_64_PLT32	toupper-0x4
    6559:	5d                   	pop    %rbp
    655a:	48 98                	cltq   
    655c:	c3                   	ret    
    655d:	0f 1f 00             	nopl   (%rax)

0000000000006560 <wcswidth>:
    6560:	48 85 f6             	test   %rsi,%rsi
    6563:	74 47                	je     65ac <wcswidth+0x4c>
    6565:	55                   	push   %rbp
    6566:	48 89 e5             	mov    %rsp,%rbp
    6569:	41 55                	push   %r13
    656b:	4c 8d 6e ff          	lea    -0x1(%rsi),%r13
    656f:	41 54                	push   %r12
    6571:	45 31 e4             	xor    %r12d,%r12d
    6574:	53                   	push   %rbx
    6575:	48 89 fb             	mov    %rdi,%rbx
    6578:	48 83 ec 08          	sub    $0x8,%rsp
    657c:	eb 18                	jmp    6596 <wcswidth+0x36>
    657e:	66 90                	xchg   %ax,%ax
    6580:	e8 00 00 00 00       	call   6585 <wcswidth+0x25>
			6581: R_X86_64_PLT32	wcwidth-0x4
    6585:	85 c0                	test   %eax,%eax
    6587:	78 18                	js     65a1 <wcswidth+0x41>
    6589:	41 01 c4             	add    %eax,%r12d
    658c:	48 83 c3 08          	add    $0x8,%rbx
    6590:	49 83 ed 01          	sub    $0x1,%r13
    6594:	72 08                	jb     659e <wcswidth+0x3e>
    6596:	48 8b 3b             	mov    (%rbx),%rdi
    6599:	48 85 ff             	test   %rdi,%rdi
    659c:	75 e2                	jne    6580 <wcswidth+0x20>
    659e:	44 89 e0             	mov    %r12d,%eax
    65a1:	48 83 c4 08          	add    $0x8,%rsp
    65a5:	5b                   	pop    %rbx
    65a6:	41 5c                	pop    %r12
    65a8:	41 5d                	pop    %r13
    65aa:	5d                   	pop    %rbp
    65ab:	c3                   	ret    
    65ac:	31 c0                	xor    %eax,%eax
    65ae:	c3                   	ret    
    65af:	90                   	nop

00000000000065b0 <wctrans>:
    65b0:	55                   	push   %rbp
    65b1:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			65b4: R_X86_64_32S	.rodata.str1.1+0x5f
    65b8:	48 89 e5             	mov    %rsp,%rbp
    65bb:	53                   	push   %rbx
    65bc:	48 89 fb             	mov    %rdi,%rbx
    65bf:	48 83 ec 08          	sub    $0x8,%rsp
    65c3:	e8 00 00 00 00       	call   65c8 <wctrans+0x18>
			65c4: R_X86_64_PLT32	strcmp-0x4
    65c8:	89 c2                	mov    %eax,%edx
    65ca:	b8 01 00 00 00       	mov    $0x1,%eax
    65cf:	85 d2                	test   %edx,%edx
    65d1:	74 1a                	je     65ed <wctrans+0x3d>
    65d3:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			65d6: R_X86_64_32S	.rodata.str1.1+0x67
    65da:	48 89 df             	mov    %rbx,%rdi
    65dd:	e8 00 00 00 00       	call   65e2 <wctrans+0x32>
			65de: R_X86_64_PLT32	strcmp-0x4
    65e2:	85 c0                	test   %eax,%eax
    65e4:	0f 94 c0             	sete   %al
    65e7:	0f b6 c0             	movzbl %al,%eax
    65ea:	48 01 c0             	add    %rax,%rax
    65ed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    65f1:	c9                   	leave  
    65f2:	c3                   	ret    
    65f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    65fa:	00 00 00 
    65fd:	0f 1f 00             	nopl   (%rax)

0000000000006600 <wctype>:
    6600:	55                   	push   %rbp
    6601:	b8 61 00 00 00       	mov    $0x61,%eax
    6606:	48 89 e5             	mov    %rsp,%rbp
    6609:	41 55                	push   %r13
    660b:	49 89 fd             	mov    %rdi,%r13
    660e:	41 54                	push   %r12
    6610:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6616:	53                   	push   %rbx
    6617:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
			661a: R_X86_64_32S	.rodata+0x2920
    661e:	48 83 ec 08          	sub    $0x8,%rsp
    6622:	eb 14                	jmp    6638 <wctype+0x38>
    6624:	0f 1f 40 00          	nopl   0x0(%rax)
    6628:	0f b6 43 06          	movzbl 0x6(%rbx),%eax
    662c:	48 83 c3 06          	add    $0x6,%rbx
    6630:	49 83 c4 01          	add    $0x1,%r12
    6634:	84 c0                	test   %al,%al
    6636:	74 28                	je     6660 <wctype+0x60>
    6638:	41 38 45 00          	cmp    %al,0x0(%r13)
    663c:	75 ea                	jne    6628 <wctype+0x28>
    663e:	48 89 de             	mov    %rbx,%rsi
    6641:	4c 89 ef             	mov    %r13,%rdi
    6644:	e8 00 00 00 00       	call   6649 <wctype+0x49>
			6645: R_X86_64_PLT32	strcmp-0x4
    6649:	85 c0                	test   %eax,%eax
    664b:	75 db                	jne    6628 <wctype+0x28>
    664d:	48 83 c4 08          	add    $0x8,%rsp
    6651:	4c 89 e0             	mov    %r12,%rax
    6654:	5b                   	pop    %rbx
    6655:	41 5c                	pop    %r12
    6657:	41 5d                	pop    %r13
    6659:	5d                   	pop    %rbp
    665a:	c3                   	ret    
    665b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6660:	48 83 c4 08          	add    $0x8,%rsp
    6664:	45 31 e4             	xor    %r12d,%r12d
    6667:	5b                   	pop    %rbx
    6668:	4c 89 e0             	mov    %r12,%rax
    666b:	41 5c                	pop    %r12
    666d:	41 5d                	pop    %r13
    666f:	5d                   	pop    %rbp
    6670:	c3                   	ret    
    6671:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6678:	00 00 00 
    667b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006680 <wcwidth>:
    6680:	48 83 ff 7e          	cmp    $0x7e,%rdi
    6684:	0f 8e 86 00 00 00    	jle    6710 <wcwidth+0x90>
    668a:	48 89 f8             	mov    %rdi,%rax
    668d:	25 ff ff fe ff       	and    $0xfffeffff,%eax
    6692:	48 3d fd ff 00 00    	cmp    $0xfffd,%rax
    6698:	48 89 f8             	mov    %rdi,%rax
    669b:	7e 33                	jle    66d0 <wcwidth+0x50>
    669d:	25 fe ff 00 00       	and    $0xfffe,%eax
    66a2:	48 3d fe ff 00 00    	cmp    $0xfffe,%rax
    66a8:	0f 84 80 00 00 00    	je     672e <wcwidth+0xae>
    66ae:	b8 02 00 00 00       	mov    $0x2,%eax
    66b3:	48 81 ff ff ff 03 00 	cmp    $0x3ffff,%rdi
    66ba:	7e 66                	jle    6722 <wcwidth+0xa2>
    66bc:	31 c0                	xor    %eax,%eax
    66be:	48 81 ff ee 01 0e 00 	cmp    $0xe01ee,%rdi
    66c5:	0f 9f c0             	setg   %al
    66c8:	c3                   	ret    
    66c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    66d0:	48 c1 f8 08          	sar    $0x8,%rax
    66d4:	0f b6 90 00 00 00 00 	movzbl 0x0(%rax),%edx
			66d7: R_X86_64_32S	.rodata+0x2f80
    66db:	48 89 f8             	mov    %rdi,%rax
    66de:	83 e7 07             	and    $0x7,%edi
    66e1:	48 c1 f8 03          	sar    $0x3,%rax
    66e5:	83 e0 1f             	and    $0x1f,%eax
    66e8:	48 c1 e2 05          	shl    $0x5,%rdx
    66ec:	48 01 c2             	add    %rax,%rdx
    66ef:	31 c0                	xor    %eax,%eax
    66f1:	0f b6 8a 00 00 00 00 	movzbl 0x0(%rdx),%ecx
			66f4: R_X86_64_32S	.rodata+0x2f80
    66f8:	0f a3 f9             	bt     %edi,%ecx
    66fb:	72 25                	jb     6722 <wcwidth+0xa2>
    66fd:	0f b6 82 00 00 00 00 	movzbl 0x0(%rdx),%eax
			6700: R_X86_64_32S	.rodata+0x2980
    6704:	89 f9                	mov    %edi,%ecx
    6706:	d3 f8                	sar    %cl,%eax
    6708:	83 e0 01             	and    $0x1,%eax
    670b:	83 c0 01             	add    $0x1,%eax
    670e:	c3                   	ret    
    670f:	90                   	nop
    6710:	48 8d 57 01          	lea    0x1(%rdi),%rdx
    6714:	b8 01 00 00 00       	mov    $0x1,%eax
    6719:	83 e2 7f             	and    $0x7f,%edx
    671c:	48 83 fa 20          	cmp    $0x20,%rdx
    6720:	7e 06                	jle    6728 <wcwidth+0xa8>
    6722:	c3                   	ret    
    6723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6728:	48 f7 df             	neg    %rdi
    672b:	19 c0                	sbb    %eax,%eax
    672d:	c3                   	ret    
    672e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6733:	c3                   	ret    

0000000000006734 <__setjmp>:
    6734:	48 89 1f             	mov    %rbx,(%rdi)
    6737:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
    673b:	4c 89 67 10          	mov    %r12,0x10(%rdi)
    673f:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
    6743:	4c 89 77 20          	mov    %r14,0x20(%rdi)
    6747:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
    674b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    6750:	48 89 57 30          	mov    %rdx,0x30(%rdi)
    6754:	48 8b 14 24          	mov    (%rsp),%rdx
    6758:	48 89 57 38          	mov    %rdx,0x38(%rdi)
    675c:	48 31 c0             	xor    %rax,%rax
    675f:	c3                   	ret    

0000000000006760 <_longjmp>:
    6760:	48 89 f0             	mov    %rsi,%rax
    6763:	48 85 c0             	test   %rax,%rax
    6766:	75 03                	jne    676b <_longjmp+0xb>
    6768:	48 ff c0             	inc    %rax
    676b:	48 8b 1f             	mov    (%rdi),%rbx
    676e:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    6772:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    6776:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    677a:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    677e:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
    6782:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    6786:	48 89 d4             	mov    %rdx,%rsp
    6789:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    678d:	ff e2                	jmp    *%rdx

Disassembly of section .text.startup:

0000000000000000 <__construct_stk_chk_guard>:
   0:	48 83 3d 00 00 00 00 	cmpq   $0x0,0x0(%rip)        # 8 <__construct_stk_chk_guard+0x8>
   7:	00 
			3: R_X86_64_PC32	__stack_chk_guard-0x5
   8:	74 01                	je     b <__construct_stk_chk_guard+0xb>
   a:	c3                   	ret    
   b:	55                   	push   %rbp
   c:	48 89 e5             	mov    %rsp,%rbp
   f:	e8 00 00 00 00       	call   14 <__construct_stk_chk_guard+0x14>
			10: R_X86_64_PLT32	__stack_chk_guard_init-0x4
  14:	5d                   	pop    %rbp
  15:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1c <__construct_stk_chk_guard+0x1c>
			18: R_X86_64_PC32	__stack_chk_guard-0x4
  1c:	c3                   	ret    

Disassembly of section .fini:

0000000000000000 <.fini>:
   0:	e8 00 00 00 00       	call   5 <.LC22+0x1>
			1: R_X86_64_PC32	.text+0x9c
