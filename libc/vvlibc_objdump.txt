
vvlibc.o:     file format elf64-x86-64
vvlibc.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .init         00000005  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .text         0000668f  0000000000000000  0000000000000000  00000050  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  2 .text.startup 0000001d  0000000000000000  0000000000000000  000066e0  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  3 .fini         00000005  0000000000000000  0000000000000000  000066fd  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .rodata       00003700  0000000000000000  0000000000000000  00006720  2**5
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
  5 .rodata.str1.8 000000a2  0000000000000000  0000000000000000  00009e20  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .rodata.str1.1 0000006f  0000000000000000  0000000000000000  00009ec2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .rodata.cst8  000000a0  0000000000000000  0000000000000000  00009f38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rodata.cst16 00000010  0000000000000000  0000000000000000  00009fe0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .eh_frame     00001c2c  0000000000000000  0000000000000000  00009ff0  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 10 .data         00000008  0000000000000000  0000000000000000  0000bc20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .dtors        00000010  0000000000000000  0000000000000000  0000bc28  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ctors        00000018  0000000000000000  0000000000000000  0000bc38  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 13 .bss          0000009a  0000000000000000  0000000000000000  0000bc60  2**5
                  ALLOC
 14 .comment      00000876  0000000000000000  0000000000000000  0000bc60  2**0
                  CONTENTS, READONLY
 15 .debug_aranges 00001580  0000000000000000  0000000000000000  0000c4e0  2**4
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 16 .debug_info   0000ba81  0000000000000000  0000000000000000  0000da60  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 00005422  0000000000000000  0000000000000000  000194e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000735b  0000000000000000  0000000000000000  0001e903  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00006bb6  0000000000000000  0000000000000000  00025c5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00005847  0000000000000000  0000000000000000  0002c814  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loclists 00008f16  0000000000000000  0000000000000000  0003205b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 000004a3  0000000000000000  0000000000000000  0003af71  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
0000000000000000 l    d  .init	0000000000000000 .init
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .text.startup	0000000000000000 .text.startup
0000000000000000 l    d  .fini	0000000000000000 .fini
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .rodata.str1.8	0000000000000000 .rodata.str1.8
0000000000000000 l    d  .rodata.str1.1	0000000000000000 .rodata.str1.1
0000000000000000 l    d  .rodata.cst8	0000000000000000 .rodata.cst8
0000000000000000 l    d  .rodata.cst16	0000000000000000 .rodata.cst16
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .dtors	0000000000000000 .dtors
0000000000000000 l    d  .ctors	0000000000000000 .ctors
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .debug_line_str	0000000000000000 .debug_line_str
0000000000000000 l    d  .debug_loclists	0000000000000000 .debug_loclists
0000000000000000 l    d  .debug_rnglists	0000000000000000 .debug_rnglists
0000000000000000 l    df *ABS*	0000000000000000 crtbegin.c
0000000000000040 l     F .text	0000000000000049 __do_init
0000000000000090 l     F .text	0000000000000059 __do_fini
0000000000000060 l     O .bss	0000000000000001 __initialized.2
00000000000000c8 l     O .eh_frame	0000000000000008 __EH_FRAME_LIST__
0000000000000020 l     O .bss	0000000000000040 __object.1
0000000000000000 l     O .ctors	0000000000000008 __CTOR_LIST__
0000000000000008 l     O .bss	0000000000000001 __finalized.0
0000000000000000 l     O .dtors	0000000000000008 __DTOR_LIST__
0000000000000000 l    df *ABS*	0000000000000000 _Exit.c
0000000000000000 l    df *ABS*	0000000000000000 abort.c
0000000000000000 l    df *ABS*	0000000000000000 at_exit.c
0000000000000000 l    df *ABS*	0000000000000000 at_quick_exit.c
0000000000000000 l    df *ABS*	0000000000000000 crtend.c
0000000000000000 l    df *ABS*	0000000000000000 cxa_atexit.c
0000000000000000 l    df *ABS*	0000000000000000 exit.c
0000000000000000 l    df *ABS*	0000000000000000 quick_exit.c
0000000000000000 l    df *ABS*	0000000000000000 stack_protection.c
0000000000000000 l     F .text.startup	000000000000001d __construct_stk_chk_guard
0000000000000000 l    df *ABS*	0000000000000000 isalnum.c
0000000000000000 l    df *ABS*	0000000000000000 isalpha.c
0000000000000000 l    df *ABS*	0000000000000000 isascii.c
0000000000000000 l    df *ABS*	0000000000000000 isblank.c
0000000000000000 l    df *ABS*	0000000000000000 iscntrl.c
0000000000000000 l    df *ABS*	0000000000000000 isdigit.c
0000000000000000 l    df *ABS*	0000000000000000 isgraph.c
0000000000000000 l    df *ABS*	0000000000000000 islower.c
0000000000000000 l    df *ABS*	0000000000000000 isprint.c
0000000000000000 l    df *ABS*	0000000000000000 ispunct.c
0000000000000000 l    df *ABS*	0000000000000000 isspace.c
0000000000000000 l    df *ABS*	0000000000000000 isupper.c
0000000000000000 l    df *ABS*	0000000000000000 isxdigit.c
0000000000000000 l    df *ABS*	0000000000000000 toascii.c
0000000000000000 l    df *ABS*	0000000000000000 tolower.c
0000000000000000 l    df *ABS*	0000000000000000 toupper.c
0000000000000000 l    df *ABS*	0000000000000000 langinfo.c
000000000000000c l     O .rodata	0000000000000003 c_numeric
0000000000000040 l     O .rodata	000000000000013c c_time
0000000000000010 l     O .rodata	0000000000000013 c_messages
0000000000000000 l     O .rodata	000000000000000c __func__.0
0000000000000000 l    df *ABS*	0000000000000000 assert.c
0000000000000000 l    df *ABS*	0000000000000000 printf.c
0000000000000420 l     F .text	000000000000000a _out_buffer
0000000000000430 l     F .text	0000000000000001 _out_null
0000000000000440 l     F .text	00000000000000f9 _out_rev
0000000000000540 l     F .text	00000000000003b9 _ntoa_long
0000000000000540 l     F .text	00000000000003b9 _ntoa_long_long
0000000000000900 l     F .text	00000000000003c9 _etoa
0000000000000cd0 l     F .text	0000000000000509 _ftoa
0000000000000000 l       .rodata.cst16	0000000000000000 .LC3
0000000000000008 l       .rodata.cst8	0000000000000000 .LC1
0000000000000000 l       .rodata.cst8	0000000000000000 .LC0
0000000000000080 l       .rodata.cst8	0000000000000000 .LC18
0000000000000038 l       .rodata.cst8	0000000000000000 .LC9
0000000000000088 l       .rodata.cst8	0000000000000000 .LC21
00000000000004c0 l     O .rodata	0000000000000050 pow10.0
00000000000011e0 l     F .text	0000000000000019 _out_char
0000000000001200 l     F .text	0000000000000019 _out_fct
0000000000001220 l     F .text	0000000000000b4e _vsnprintf
0000000000000058 l       .rodata.cst8	0000000000000000 .LC13
0000000000000010 l       .rodata.cst8	0000000000000000 .LC4
0000000000000018 l       .rodata.cst8	0000000000000000 .LC5
0000000000000020 l       .rodata.cst8	0000000000000000 .LC6
0000000000000028 l       .rodata.cst8	0000000000000000 .LC7
0000000000000030 l       .rodata.cst8	0000000000000000 .LC8
0000000000000040 l       .rodata.cst8	0000000000000000 .LC10
0000000000000048 l       .rodata.cst8	0000000000000000 .LC11
0000000000000050 l       .rodata.cst8	0000000000000000 .LC12
0000000000000060 l       .rodata.cst8	0000000000000000 .LC14
0000000000000068 l       .rodata.cst8	0000000000000000 .LC15
0000000000000070 l       .rodata.cst8	0000000000000000 .LC16
0000000000000078 l       .rodata.cst8	0000000000000000 .LC17
0000000000000090 l       .rodata.cst8	0000000000000000 .LC24
0000000000000098 l       .rodata.cst8	0000000000000000 .LC25
0000000000000000 l    df *ABS*	0000000000000000 vv_stubs.c
0000000000000000 l    df *ABS*	0000000000000000 asprintf.c
0000000000000000 l    df *ABS*	0000000000000000 putchar.c
0000000000000000 l    df *ABS*	0000000000000000 putchar_native.c
0000000000000000 l    df *ABS*	0000000000000000 puts.c
0000000000000000 l    df *ABS*	0000000000000000 vasprintf.c
0000000000000000 l    df *ABS*	0000000000000000 abs.c
0000000000000000 l    df *ABS*	0000000000000000 atoi.c
0000000000000000 l    df *ABS*	0000000000000000 atol.c
0000000000000000 l    df *ABS*	0000000000000000 atoll.c
0000000000000000 l    df *ABS*	0000000000000000 bsearch.c
0000000000000000 l    df *ABS*	0000000000000000 calloc.c
0000000000000000 l    df *ABS*	0000000000000000 div.c
0000000000000000 l    df *ABS*	0000000000000000 heapsort.c
0000000000000000 l    df *ABS*	0000000000000000 heapsort_r.c
0000000000000000 l    df *ABS*	0000000000000000 imaxabs.c
0000000000000000 l    df *ABS*	0000000000000000 imaxdiv.c
0000000000000000 l    df *ABS*	0000000000000000 labs.c
0000000000000000 l    df *ABS*	0000000000000000 ldiv.c
0000000000000000 l    df *ABS*	0000000000000000 llabs.c
0000000000000000 l    df *ABS*	0000000000000000 lldiv.c
0000000000000000 l    df *ABS*	0000000000000000 qsort.c
0000000000002ba0 l     F .text	0000000000000b58 _qsort
0000000000000000 l    df *ABS*	0000000000000000 qsort_r.c
0000000000003740 l     F .text	0000000000000b88 _qsort
0000000000000000 l    df *ABS*	0000000000000000 rand.c
0000000000000000 l     O .data	0000000000000008 next
0000000000000000 l    df *ABS*	0000000000000000 realloc.c
0000000000000000 l    df *ABS*	0000000000000000 strtol.c
0000000000000000 l    df *ABS*	0000000000000000 strtoll.c
0000000000000000 l    df *ABS*	0000000000000000 strtoul.c
0000000000000000 l    df *ABS*	0000000000000000 strtoull.c
0000000000000000 l    df *ABS*	0000000000000000 memchr.c
0000000000000000 l    df *ABS*	0000000000000000 memcmp.c
0000000000000000 l    df *ABS*	0000000000000000 memcpy.c
0000000000000000 l    df *ABS*	0000000000000000 memmem.c
0000000000000000 l    df *ABS*	0000000000000000 memmove.c
0000000000000000 l    df *ABS*	0000000000000000 memrchr.c
0000000000000000 l    df *ABS*	0000000000000000 memset.c
0000000000000000 l    df *ABS*	0000000000000000 strcat.c
0000000000000000 l    df *ABS*	0000000000000000 strchr.c
0000000000000000 l    df *ABS*	0000000000000000 strchrnul.c
0000000000000000 l    df *ABS*	0000000000000000 strcmp.c
0000000000000000 l    df *ABS*	0000000000000000 strcoll.c
0000000000000000 l    df *ABS*	0000000000000000 strcpy.c
0000000000000000 l    df *ABS*	0000000000000000 strcspn.c
0000000000000000 l    df *ABS*	0000000000000000 strdup.c
0000000000000000 l    df *ABS*	0000000000000000 strerror.c
0000000000000c00 l     O .rodata	0000000000000055 errid
0000000000000520 l     O .rodata	00000000000006cf errmsg
0000000000000000 l    df *ABS*	0000000000000000 strerror_r.c
0000000000000c58 l     O .rodata	000000000000000b __func__.0
0000000000000000 l    df *ABS*	0000000000000000 strlen.c
0000000000000000 l    df *ABS*	0000000000000000 strncat.c
0000000000000000 l    df *ABS*	0000000000000000 strncmp.c
0000000000000000 l    df *ABS*	0000000000000000 strncpy.c
0000000000000000 l    df *ABS*	0000000000000000 strndup.c
0000000000000000 l    df *ABS*	0000000000000000 strnlen.c
0000000000000000 l    df *ABS*	0000000000000000 strnstr.c
0000000000000000 l    df *ABS*	0000000000000000 strpbrk.c
0000000000000000 l    df *ABS*	0000000000000000 strrchr.c
0000000000000000 l    df *ABS*	0000000000000000 strspn.c
0000000000000000 l    df *ABS*	0000000000000000 strstr.c
0000000000000000 l    df *ABS*	0000000000000000 strtok.c
0000000000000070 l     O .bss	0000000000000008 last.0
0000000000000000 l    df *ABS*	0000000000000000 strxfrm.c
0000000000000000 l    df *ABS*	0000000000000000 fls.c
0000000000000000 l    df *ABS*	0000000000000000 flsl.c
0000000000000000 l    df *ABS*	0000000000000000 flsll.c
0000000000000000 l    df *ABS*	0000000000000000 asctime.c
0000000000000080 l     O .bss	000000000000001a buf.0
0000000000000000 l    df *ABS*	0000000000000000 asctime_r.c
0000000000000c68 l     O .rodata	000000000000000a __func__.0
0000000000000000 l    df *ABS*	0000000000000000 iswalnum.c
0000000000000000 l    df *ABS*	0000000000000000 iswalpha.c
0000000000000c80 l     O .rodata	0000000000000ba0 table
0000000000000000 l    df *ABS*	0000000000000000 iswblank.c
0000000000000000 l    df *ABS*	0000000000000000 iswcntrl.c
0000000000000000 l    df *ABS*	0000000000000000 iswctype.c
0000000000000000 l    df *ABS*	0000000000000000 iswdigit.c
0000000000000000 l    df *ABS*	0000000000000000 iswgraph.c
0000000000000000 l    df *ABS*	0000000000000000 iswlower.c
0000000000000000 l    df *ABS*	0000000000000000 iswprint.c
0000000000000000 l    df *ABS*	0000000000000000 iswpunct.c
00000000000018a0 l     O .rodata	0000000000000c60 table
0000000000000000 l    df *ABS*	0000000000000000 iswspace.c
0000000000002500 l     O .rodata	00000000000000b0 spaces.0
0000000000000000 l    df *ABS*	0000000000000000 iswupper.c
0000000000000000 l    df *ABS*	0000000000000000 iswxdigit.c
0000000000000000 l    df *ABS*	0000000000000000 towccase.c
0000000000002800 l     O .rodata	0000000000000104 casemaps
00000000000025c0 l     O .rodata	000000000000022c pairs
0000000000000000 l    df *ABS*	0000000000000000 towctrans.c
0000000000000000 l    df *ABS*	0000000000000000 towlower.c
0000000000000000 l    df *ABS*	0000000000000000 towupper.c
0000000000000000 l    df *ABS*	0000000000000000 wcswidth.c
0000000000000000 l    df *ABS*	0000000000000000 wctrans.c
0000000000000000 l    df *ABS*	0000000000000000 wctype.c
0000000000002920 l     O .rodata	0000000000000049 names.0
0000000000000000 l    df *ABS*	0000000000000000 wcwidth.c
0000000000002f80 l     O .rodata	0000000000000780 table
0000000000002980 l     O .rodata	0000000000000600 wtable
0000000000006660 g     F .text	0000000000000000 longjmp
0000000000002110 g     F .text	000000000000001c putchar
0000000000000008 g     O .dtors	0000000000000008 .hidden __DTOR_LIST_END__
0000000000005630 g     F .text	000000000000002c strcpy
0000000000005d90 g     F .text	000000000000000a asctime
0000000000002050 g     F .text	0000000000000009 _putchar
0000000000006634 g     F .text	0000000000000000 setjmp
0000000000005730 g     F .text	000000000000006c strerror
00000000000059f0 g     F .text	0000000000000003 strndup
0000000000001f50 g     F .text	0000000000000025 vprintf_
00000000000053b0  w    F .text	0000000000000005 memmove
0000000000005c60 g     F .text	000000000000009a __strtok_r
0000000000000068  w    O .bss	0000000000000008 __stack_chk_guard
0000000000006660 g     F .text	0000000000000000 _longjmp
0000000000002290 g     F .text	0000000000000084 atol
0000000000005f00 g     F .text	0000000000000036 iswcntrl
0000000000006070 g     F .text	0000000000000040 iswpunct
00000000000001b0 g     F .text	0000000000000012 isblank
0000000000002b60 g     F .text	000000000000000b labs
0000000000005ea0 g     F .text	0000000000000050 iswalpha
0000000000005ef0 g     F .text	0000000000000005 iswblank
0000000000005310 g     F .text	0000000000000092 memmem
00000000000023b0 g     F .text	0000000000000082 bsearch
0000000000003700 g     F .text	000000000000003d qsort
0000000000006140 g     F .text	000000000000001c iswxdigit
00000000000053c0 g     F .text	0000000000000029 __memrchr
0000000000005120 g     F .text	00000000000001e1 memcpy
0000000000000000         *UND*	0000000000000000 kfree
0000000000002130 g     F .text	0000000000000060 puts
0000000000000210 g     F .text	000000000000000c islower
00000000000002e0 g     F .text	0000000000000024 tolower
0000000000006000 g     F .text	0000000000000020 iswlower
0000000000002060 g     F .text	000000000000000d malloc
0000000000000110  w    F .text	0000000000000009 quick_exit
0000000000001e20 g     F .text	0000000000000098 sprintf_
00000000000060b0 g     F .text	0000000000000033 iswspace
00000000000047f0 g     F .text	0000000000000299 strtoll
0000000000004a90 g     F .text	0000000000000303 strtoul
0000000000000000 g     O .bss	0000000000000008 .hidden __dso_handle
0000000000005d80 g     F .text	000000000000000f flsll
0000000000000230 g     F .text	0000000000000035 ispunct
0000000000000270 g     F .text	0000000000000015 isspace
0000000000000000  w    F .text	0000000000000002 _Exit
0000000000000010  w    F .text	000000000000000e abort
0000000000000130  w    F .text	0000000000000015 __stack_chk_fail
0000000000006634 g     F .text	0000000000000000 __setjmp
00000000000002a0 g     F .text	000000000000002f isxdigit
0000000000001f80 g     F .text	0000000000000016 vsnprintf_
0000000000004510 g     F .text	00000000000002d1 strtol
0000000000005a00 g     F .text	0000000000000032 strnlen
0000000000006020 g     F .text	0000000000000049 iswprint
0000000000005b10 g     F .text	0000000000000025 strrchr
0000000000002440 g     F .text	0000000000000055 calloc
0000000000005d60 g     F .text	000000000000000d fls
0000000000002b40 g     F .text	000000000000000b imaxabs
0000000000001fa0 g     F .text	00000000000000a3 fctprintf
0000000000005fc0 g     F .text	0000000000000036 iswgraph
0000000000005460 g     F .text	0000000000000041 strcat
0000000000004320  w    F .text	000000000000005d rand_r
0000000000000000  w      *UND*	0000000000000000 __deregister_frame_info
0000000000000340 g     F .text	00000000000000b1 nl_langinfo
00000000000054d0 g     F .text	00000000000000f1 __strchrnul
0000000000004fd0 g     F .text	00000000000000d5 memchr
0000000000004480 g     F .text	000000000000008f reallocf
0000000000005c00 g     F .text	0000000000000053 strstr
0000000000004380  w    F .text	000000000000006a rand
0000000000005d70 g     F .text	000000000000000f flsl
0000000000005f40 g     F .text	0000000000000070 iswctype
0000000000005620 g     F .text	0000000000000005 strcoll
0000000000000290 g     F .text	000000000000000c isupper
0000000000005920 g     F .text	0000000000000049 strncmp
0000000000000000         *UND*	0000000000000000 term_put_char
0000000000005970 g     F .text	0000000000000072 strncpy
0000000000006580 g     F .text	00000000000000b4 wcwidth
00000000000001a0 g     F .text	0000000000000009 isascii
0000000000004400 g     F .text	000000000000007f realloc
0000000000006450 g     F .text	000000000000001d towupper
00000000000000f0  w    F .text	0000000000000003 __cxa_atexit
0000000000006410 g     F .text	000000000000001d towctrans
0000000000005d00 g     F .text	000000000000000a strtok
0000000000000030  w    F .text	0000000000000003 at_quick_exit
00000000000050b0  w    F .text	0000000000000065 memcmp
0000000000000190 g     F .text	000000000000000f isalpha
00000000000058d0 g     F .text	0000000000000050 strncat
00000000000060f0 g     F .text	0000000000000023 wcschr
0000000000005720 g     F .text	0000000000000003 strdup
0000000000004da0 g     F .text	0000000000000227 strtoull
0000000000006160 g     F .text	00000000000002ae __towcase
0000000000005da0 g     F .text	00000000000000b7 asctime_r
00000000000053f0  w    F .text	000000000000006c memset
00000000000043f0  w    F .text	000000000000000a srand
0000000000005d10 g     F .text	0000000000000047 strxfrm
0000000000006500 g     F .text	0000000000000071 wctype
0000000000000200 g     F .text	000000000000000c isgraph
0000000000000400  w    F .text	0000000000000019 __assert_fail
0000000000000150 g     F .text	000000000000003d isalnum
0000000000000220 g     F .text	000000000000000c isprint
0000000000000130 g     O .eh_frame	0000000000000004 .hidden __EH_FRAME_LIST_END__
00000000000055d0 g     F .text	000000000000004c strcmp
0000000000002080 g     F .text	0000000000000086 asprintf
00000000000057a0 g     F .text	0000000000000098 strerror_r
0000000000000020  w    F .text	0000000000000003 atexit
00000000000002d0 g     F .text	0000000000000006 toascii
0000000000005660 g     F .text	00000000000000b5 strcspn
0000000000005fb0 g     F .text	000000000000000c iswdigit
0000000000001ec0 g     F .text	000000000000008d snprintf_
00000000000027c0 g     F .text	0000000000000373 heapsort_r
0000000000002b70 g     F .text	0000000000000009 ldiv
0000000000005a40 g     F .text	0000000000000094 strnstr
0000000000006120 g     F .text	0000000000000020 iswupper
0000000000000008 g     O .ctors	0000000000000008 .hidden __CTOR_LIST_END__
0000000000002b90 g     F .text	0000000000000009 lldiv
0000000000001d70 g     F .text	00000000000000a3 printf_
00000000000001f0 g     F .text	000000000000000c isdigit
00000000000042d0 g     F .text	000000000000004f qsort_r
00000000000024b0 g     F .text	0000000000000307 heapsort
0000000000000000         *UND*	0000000000000000 kmalloc
0000000000000100  w    F .text	0000000000000009 exit
0000000000006430 g     F .text	000000000000001d towlower
0000000000002b80 g     F .text	000000000000000b llabs
0000000000005e60 g     F .text	000000000000003e iswalnum
0000000000002220 g     F .text	0000000000000066 atoi
00000000000001d0 g     F .text	0000000000000012 iscntrl
0000000000006634 g     F .text	0000000000000000 _setjmp
0000000000005b40 g     F .text	00000000000000b2 strspn
0000000000005840 g     F .text	0000000000000088 strlen
0000000000000310 g     F .text	0000000000000024 toupper
0000000000002320 g     F .text	0000000000000084 atoll
00000000000024a0 g     F .text	000000000000000d div
0000000000002210 g     F .text	0000000000000008 abs
00000000000054b0 g     F .text	000000000000001e strchr
0000000000006470 g     F .text	000000000000004f wcswidth
0000000000002b50 g     F .text	0000000000000009 imaxdiv
0000000000002190 g     F .text	000000000000007f vasprintf
0000000000000000  w      *UND*	0000000000000000 __register_frame_info
0000000000000120  w    F .text	000000000000000b __stack_chk_guard_init
0000000000005ae0 g     F .text	0000000000000023 strpbrk
0000000000002070 g     F .text	0000000000000005 free
00000000000064c0 g     F .text	000000000000003f wctrans



Disassembly of section .init:

0000000000000000 <.init>:
   0:	e8 00 00 00 00       	call   5 <_Exit+0x5>
			1: R_X86_64_PC32	.text+0x3c

Disassembly of section .text:

0000000000000000 <_Exit>:
       0:	eb fe                	jmp    0 <_Exit>
       2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
       9:	00 00 00 
       c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000010 <abort>:
      10:	55                   	push   %rbp
      11:	bf 2d 00 00 00       	mov    $0x2d,%edi
      16:	48 89 e5             	mov    %rsp,%rbp
      19:	e8 00 00 00 00       	call   1e <abort+0xe>
			1a: R_X86_64_PLT32	_Exit-0x4
      1e:	66 90                	xchg   %ax,%ax

0000000000000020 <atexit>:
      20:	31 c0                	xor    %eax,%eax
      22:	c3                   	ret    
      23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
      2a:	00 00 00 
      2d:	0f 1f 00             	nopl   (%rax)

0000000000000030 <at_quick_exit>:
      30:	31 c0                	xor    %eax,%eax
      32:	c3                   	ret    
      33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
      3a:	00 00 00 
      3d:	0f 1f 00             	nopl   (%rax)

0000000000000040 <__do_init>:
      40:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 47 <__do_init+0x7>
			42: R_X86_64_PC32	.bss+0x5b
      47:	75 3f                	jne    88 <__do_init+0x48>
      49:	55                   	push   %rbp
      4a:	b8 00 00 00 00       	mov    $0x0,%eax
			4b: R_X86_64_32	__register_frame_info
      4f:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 56 <__do_init+0x16>
			51: R_X86_64_PC32	.bss+0x5b
      56:	48 89 e5             	mov    %rsp,%rbp
      59:	48 85 c0             	test   %rax,%rax
      5c:	74 11                	je     6f <__do_init+0x2f>
      5e:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 65 <__do_init+0x25>
			61: R_X86_64_PC32	.eh_frame+0xc4
      65:	be 00 00 00 00       	mov    $0x0,%esi
			66: R_X86_64_32	.bss+0x20
      6a:	e8 00 00 00 00       	call   6f <__do_init+0x2f>
			6b: R_X86_64_PLT32	__register_frame_info-0x4
      6f:	b8 00 00 00 00       	mov    $0x0,%eax
			70: R_X86_64_32	__CTOR_LIST_END__-0x1
      74:	5d                   	pop    %rbp
      75:	48 2d 00 00 00 00    	sub    $0x0,%rax
			77: R_X86_64_32S	.ctors
      7b:	48 8b 04 c5 00 00 00 	mov    0x0(,%rax,8),%rax
      82:	00 
			7f: R_X86_64_32S	.ctors
      83:	ff e0                	jmp    *%rax
      85:	0f 1f 00             	nopl   (%rax)
      88:	c3                   	ret    
      89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000090 <__do_fini>:
      90:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 97 <__do_fini+0x7>
			92: R_X86_64_PC32	.bss+0x3
      97:	75 4f                	jne    e8 <__do_fini+0x58>
      99:	55                   	push   %rbp
      9a:	b8 00 00 00 00       	mov    $0x0,%eax
			9b: R_X86_64_32	__deregister_frame_info
      9f:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # a6 <__do_fini+0x16>
			a1: R_X86_64_PC32	.bss+0x3
      a6:	48 89 e5             	mov    %rsp,%rbp
      a9:	41 54                	push   %r12
      ab:	53                   	push   %rbx
      ac:	48 85 c0             	test   %rax,%rax
      af:	74 0c                	je     bd <__do_fini+0x2d>
      b1:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # b8 <__do_fini+0x28>
			b4: R_X86_64_PC32	.eh_frame+0xc4
      b8:	e8 00 00 00 00       	call   bd <__do_fini+0x2d>
			b9: R_X86_64_PLT32	__deregister_frame_info-0x4
      bd:	41 bc 00 00 00 00    	mov    $0x0,%r12d
			bf: R_X86_64_32	__DTOR_LIST_END__-0x1
      c3:	bb 01 00 00 00       	mov    $0x1,%ebx
      c8:	49 81 ec 00 00 00 00 	sub    $0x0,%r12
			cb: R_X86_64_32S	.dtors
      cf:	90                   	nop
      d0:	ff 14 dd 00 00 00 00 	call   *0x0(,%rbx,8)
			d3: R_X86_64_32S	.dtors
      d7:	48 83 c3 01          	add    $0x1,%rbx
      db:	4c 39 e3             	cmp    %r12,%rbx
      de:	72 f0                	jb     d0 <__do_fini+0x40>
      e0:	5b                   	pop    %rbx
      e1:	41 5c                	pop    %r12
      e3:	5d                   	pop    %rbp
      e4:	c3                   	ret    
      e5:	0f 1f 00             	nopl   (%rax)
      e8:	c3                   	ret    
      e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000000f0 <__cxa_atexit>:
      f0:	31 c0                	xor    %eax,%eax
      f2:	c3                   	ret    
      f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
      fa:	00 00 00 
      fd:	0f 1f 00             	nopl   (%rax)

0000000000000100 <exit>:
     100:	55                   	push   %rbp
     101:	48 89 e5             	mov    %rsp,%rbp
     104:	e8 00 00 00 00       	call   109 <exit+0x9>
			105: R_X86_64_PLT32	_Exit-0x4
     109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000110 <quick_exit>:
     110:	55                   	push   %rbp
     111:	48 89 e5             	mov    %rsp,%rbp
     114:	e8 00 00 00 00       	call   119 <quick_exit+0x9>
			115: R_X86_64_PLT32	_Exit-0x4
     119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000120 <__stack_chk_guard_init>:
     120:	48 b8 72 85 5a a5 ef 	movabs $0xdeadbeefa55a8572,%rax
     127:	be ad de 
     12a:	c3                   	ret    
     12b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000130 <__stack_chk_fail>:
     130:	55                   	push   %rbp
     131:	bf 00 00 00 00       	mov    $0x0,%edi
			132: R_X86_64_32	.rodata.str1.8
     136:	31 c0                	xor    %eax,%eax
     138:	48 89 e5             	mov    %rsp,%rbp
     13b:	e8 00 00 00 00       	call   140 <__stack_chk_fail+0x10>
			13c: R_X86_64_PLT32	printf_-0x4
     140:	e8 00 00 00 00       	call   145 <__stack_chk_fail+0x15>
			141: R_X86_64_PLT32	abort-0x4
     145:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     14c:	00 00 00 
     14f:	90                   	nop

0000000000000150 <isalnum>:
     150:	55                   	push   %rbp
     151:	48 89 e5             	mov    %rsp,%rbp
     154:	53                   	push   %rbx
     155:	89 fb                	mov    %edi,%ebx
     157:	48 83 ec 08          	sub    $0x8,%rsp
     15b:	e8 00 00 00 00       	call   160 <isalnum+0x10>
			15c: R_X86_64_PLT32	isalpha-0x4
     160:	89 c2                	mov    %eax,%edx
     162:	b8 01 00 00 00       	mov    $0x1,%eax
     167:	85 d2                	test   %edx,%edx
     169:	74 0d                	je     178 <isalnum+0x28>
     16b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     16f:	c9                   	leave  
     170:	c3                   	ret    
     171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     178:	89 df                	mov    %ebx,%edi
     17a:	e8 00 00 00 00       	call   17f <isalnum+0x2f>
			17b: R_X86_64_PLT32	isdigit-0x4
     17f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     183:	c9                   	leave  
     184:	85 c0                	test   %eax,%eax
     186:	0f 95 c0             	setne  %al
     189:	0f b6 c0             	movzbl %al,%eax
     18c:	c3                   	ret    
     18d:	0f 1f 00             	nopl   (%rax)

0000000000000190 <isalpha>:
     190:	83 cf 20             	or     $0x20,%edi
     193:	31 c0                	xor    %eax,%eax
     195:	83 ef 61             	sub    $0x61,%edi
     198:	83 ff 19             	cmp    $0x19,%edi
     19b:	0f 96 c0             	setbe  %al
     19e:	c3                   	ret    
     19f:	90                   	nop

00000000000001a0 <isascii>:
     1a0:	31 c0                	xor    %eax,%eax
     1a2:	83 ff 7f             	cmp    $0x7f,%edi
     1a5:	0f 96 c0             	setbe  %al
     1a8:	c3                   	ret    
     1a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000001b0 <isblank>:
     1b0:	83 ff 20             	cmp    $0x20,%edi
     1b3:	0f 94 c0             	sete   %al
     1b6:	83 ff 09             	cmp    $0x9,%edi
     1b9:	0f 94 c2             	sete   %dl
     1bc:	09 d0                	or     %edx,%eax
     1be:	0f b6 c0             	movzbl %al,%eax
     1c1:	c3                   	ret    
     1c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     1c9:	00 00 00 
     1cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000001d0 <iscntrl>:
     1d0:	83 ff 1f             	cmp    $0x1f,%edi
     1d3:	0f 96 c0             	setbe  %al
     1d6:	83 ff 7f             	cmp    $0x7f,%edi
     1d9:	0f 94 c2             	sete   %dl
     1dc:	09 d0                	or     %edx,%eax
     1de:	0f b6 c0             	movzbl %al,%eax
     1e1:	c3                   	ret    
     1e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     1e9:	00 00 00 
     1ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000001f0 <isdigit>:
     1f0:	83 ef 30             	sub    $0x30,%edi
     1f3:	31 c0                	xor    %eax,%eax
     1f5:	83 ff 09             	cmp    $0x9,%edi
     1f8:	0f 96 c0             	setbe  %al
     1fb:	c3                   	ret    
     1fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000200 <isgraph>:
     200:	83 ef 21             	sub    $0x21,%edi
     203:	31 c0                	xor    %eax,%eax
     205:	83 ff 5d             	cmp    $0x5d,%edi
     208:	0f 96 c0             	setbe  %al
     20b:	c3                   	ret    
     20c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000210 <islower>:
     210:	83 ef 61             	sub    $0x61,%edi
     213:	31 c0                	xor    %eax,%eax
     215:	83 ff 19             	cmp    $0x19,%edi
     218:	0f 96 c0             	setbe  %al
     21b:	c3                   	ret    
     21c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000220 <isprint>:
     220:	83 ef 20             	sub    $0x20,%edi
     223:	31 c0                	xor    %eax,%eax
     225:	83 ff 5e             	cmp    $0x5e,%edi
     228:	0f 96 c0             	setbe  %al
     22b:	c3                   	ret    
     22c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000230 <ispunct>:
     230:	55                   	push   %rbp
     231:	48 89 e5             	mov    %rsp,%rbp
     234:	53                   	push   %rbx
     235:	89 fb                	mov    %edi,%ebx
     237:	48 83 ec 08          	sub    $0x8,%rsp
     23b:	e8 00 00 00 00       	call   240 <ispunct+0x10>
			23c: R_X86_64_PLT32	isgraph-0x4
     240:	85 c0                	test   %eax,%eax
     242:	75 0c                	jne    250 <ispunct+0x20>
     244:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     248:	c9                   	leave  
     249:	c3                   	ret    
     24a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     250:	89 df                	mov    %ebx,%edi
     252:	e8 00 00 00 00       	call   257 <ispunct+0x27>
			253: R_X86_64_PLT32	isalnum-0x4
     257:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     25b:	c9                   	leave  
     25c:	85 c0                	test   %eax,%eax
     25e:	0f 94 c0             	sete   %al
     261:	0f b6 c0             	movzbl %al,%eax
     264:	c3                   	ret    
     265:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     26c:	00 00 00 
     26f:	90                   	nop

0000000000000270 <isspace>:
     270:	8d 47 f7             	lea    -0x9(%rdi),%eax
     273:	83 f8 04             	cmp    $0x4,%eax
     276:	0f 96 c0             	setbe  %al
     279:	83 ff 20             	cmp    $0x20,%edi
     27c:	0f 94 c2             	sete   %dl
     27f:	09 d0                	or     %edx,%eax
     281:	0f b6 c0             	movzbl %al,%eax
     284:	c3                   	ret    
     285:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     28c:	00 00 00 
     28f:	90                   	nop

0000000000000290 <isupper>:
     290:	83 ef 41             	sub    $0x41,%edi
     293:	31 c0                	xor    %eax,%eax
     295:	83 ff 19             	cmp    $0x19,%edi
     298:	0f 96 c0             	setbe  %al
     29b:	c3                   	ret    
     29c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000002a0 <isxdigit>:
     2a0:	55                   	push   %rbp
     2a1:	48 89 e5             	mov    %rsp,%rbp
     2a4:	53                   	push   %rbx
     2a5:	89 fb                	mov    %edi,%ebx
     2a7:	48 83 ec 08          	sub    $0x8,%rsp
     2ab:	e8 00 00 00 00       	call   2b0 <isxdigit+0x10>
			2ac: R_X86_64_PLT32	isdigit-0x4
     2b0:	89 c2                	mov    %eax,%edx
     2b2:	b8 01 00 00 00       	mov    $0x1,%eax
     2b7:	85 d2                	test   %edx,%edx
     2b9:	75 0e                	jne    2c9 <isxdigit+0x29>
     2bb:	83 cb 20             	or     $0x20,%ebx
     2be:	31 c0                	xor    %eax,%eax
     2c0:	83 eb 61             	sub    $0x61,%ebx
     2c3:	83 fb 05             	cmp    $0x5,%ebx
     2c6:	0f 96 c0             	setbe  %al
     2c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     2cd:	c9                   	leave  
     2ce:	c3                   	ret    
     2cf:	90                   	nop

00000000000002d0 <toascii>:
     2d0:	89 f8                	mov    %edi,%eax
     2d2:	83 e0 7f             	and    $0x7f,%eax
     2d5:	c3                   	ret    
     2d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     2dd:	00 00 00 

00000000000002e0 <tolower>:
     2e0:	55                   	push   %rbp
     2e1:	48 89 e5             	mov    %rsp,%rbp
     2e4:	53                   	push   %rbx
     2e5:	89 fb                	mov    %edi,%ebx
     2e7:	48 83 ec 08          	sub    $0x8,%rsp
     2eb:	e8 00 00 00 00       	call   2f0 <tolower+0x10>
			2ec: R_X86_64_PLT32	isupper-0x4
     2f0:	89 c2                	mov    %eax,%edx
     2f2:	89 d8                	mov    %ebx,%eax
     2f4:	83 c8 20             	or     $0x20,%eax
     2f7:	85 d2                	test   %edx,%edx
     2f9:	0f 45 d8             	cmovne %eax,%ebx
     2fc:	89 d8                	mov    %ebx,%eax
     2fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     302:	c9                   	leave  
     303:	c3                   	ret    
     304:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     30b:	00 00 00 
     30e:	66 90                	xchg   %ax,%ax

0000000000000310 <toupper>:
     310:	55                   	push   %rbp
     311:	48 89 e5             	mov    %rsp,%rbp
     314:	53                   	push   %rbx
     315:	89 fb                	mov    %edi,%ebx
     317:	48 83 ec 08          	sub    $0x8,%rsp
     31b:	e8 00 00 00 00       	call   320 <toupper+0x10>
			31c: R_X86_64_PLT32	islower-0x4
     320:	89 c2                	mov    %eax,%edx
     322:	89 d8                	mov    %ebx,%eax
     324:	83 e0 5f             	and    $0x5f,%eax
     327:	85 d2                	test   %edx,%edx
     329:	0f 45 d8             	cmovne %eax,%ebx
     32c:	89 d8                	mov    %ebx,%eax
     32e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
     332:	c9                   	leave  
     333:	c3                   	ret    
     334:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     33b:	00 00 00 
     33e:	66 90                	xchg   %ax,%ax

0000000000000340 <nl_langinfo>:
     340:	55                   	push   %rbp
     341:	89 f9                	mov    %edi,%ecx
     343:	c1 f9 10             	sar    $0x10,%ecx
     346:	48 89 e5             	mov    %rsp,%rbp
     349:	83 ff 0e             	cmp    $0xe,%edi
     34c:	0f 84 86 00 00 00    	je     3d8 <nl_langinfo+0x98>
     352:	0f b7 d7             	movzwl %di,%edx
     355:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
     35b:	75 05                	jne    362 <nl_langinfo+0x22>
     35d:	83 f9 05             	cmp    $0x5,%ecx
     360:	7e 5d                	jle    3bf <nl_langinfo+0x7f>
     362:	b8 00 00 00 00       	mov    $0x0,%eax
			363: R_X86_64_32	.rodata.str1.1
     367:	83 f9 02             	cmp    $0x2,%ecx
     36a:	74 38                	je     3a4 <nl_langinfo+0x64>
     36c:	83 f9 05             	cmp    $0x5,%ecx
     36f:	74 3f                	je     3b0 <nl_langinfo+0x70>
     371:	83 f9 01             	cmp    $0x1,%ecx
     374:	74 02                	je     378 <nl_langinfo+0x38>
     376:	5d                   	pop    %rbp
     377:	c3                   	ret    
     378:	81 e7 fe ff 00 00    	and    $0xfffe,%edi
     37e:	75 f6                	jne    376 <nl_langinfo+0x36>
     380:	b8 00 00 00 00       	mov    $0x0,%eax
			381: R_X86_64_32	.rodata+0xc
     385:	85 d2                	test   %edx,%edx
     387:	75 0b                	jne    394 <nl_langinfo+0x54>
     389:	eb eb                	jmp    376 <nl_langinfo+0x36>
     38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     390:	48 83 c0 01          	add    $0x1,%rax
     394:	80 38 00             	cmpb   $0x0,(%rax)
     397:	75 f7                	jne    390 <nl_langinfo+0x50>
     399:	48 83 c0 01          	add    $0x1,%rax
     39d:	83 ea 01             	sub    $0x1,%edx
     3a0:	75 f2                	jne    394 <nl_langinfo+0x54>
     3a2:	5d                   	pop    %rbp
     3a3:	c3                   	ret    
     3a4:	83 fa 31             	cmp    $0x31,%edx
     3a7:	7f cd                	jg     376 <nl_langinfo+0x36>
     3a9:	b8 00 00 00 00       	mov    $0x0,%eax
			3aa: R_X86_64_32	.rodata+0x40
     3ae:	eb d5                	jmp    385 <nl_langinfo+0x45>
     3b0:	81 e7 fc ff 00 00    	and    $0xfffc,%edi
     3b6:	75 be                	jne    376 <nl_langinfo+0x36>
     3b8:	b8 00 00 00 00       	mov    $0x0,%eax
			3b9: R_X86_64_32	.rodata+0x10
     3bd:	eb c6                	jmp    385 <nl_langinfo+0x45>
     3bf:	b9 00 00 00 00       	mov    $0x0,%ecx
			3c0: R_X86_64_32	.rodata
     3c4:	ba 4f 00 00 00       	mov    $0x4f,%edx
     3c9:	be 00 00 00 00       	mov    $0x0,%esi
			3ca: R_X86_64_32	.rodata.str1.1+0x1
     3ce:	bf 00 00 00 00       	mov    $0x0,%edi
			3cf: R_X86_64_32	.rodata.str1.1+0x17
     3d3:	e8 00 00 00 00       	call   3d8 <nl_langinfo+0x98>
			3d4: R_X86_64_PLT32	__assert_fail-0x4
     3d8:	b9 00 00 00 00       	mov    $0x0,%ecx
			3d9: R_X86_64_32	.rodata
     3dd:	ba 48 00 00 00       	mov    $0x48,%edx
     3e2:	be 00 00 00 00       	mov    $0x0,%esi
			3e3: R_X86_64_32	.rodata.str1.1+0x1
     3e7:	bf 00 00 00 00       	mov    $0x0,%edi
			3e8: R_X86_64_32	.rodata.str1.1+0x17
     3ec:	e8 00 00 00 00       	call   3f1 <nl_langinfo+0xb1>
			3ed: R_X86_64_PLT32	__assert_fail-0x4
     3f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
     3f8:	00 00 00 
     3fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000400 <__assert_fail>:
     400:	55                   	push   %rbp
     401:	41 89 d0             	mov    %edx,%r8d
     404:	31 c0                	xor    %eax,%eax
     406:	48 89 f2             	mov    %rsi,%rdx
     409:	48 89 fe             	mov    %rdi,%rsi
     40c:	bf 00 00 00 00       	mov    $0x0,%edi
			40d: R_X86_64_32	.rodata.str1.8+0x30
     411:	48 89 e5             	mov    %rsp,%rbp
     414:	e8 00 00 00 00       	call   419 <__assert_fail+0x19>
			415: R_X86_64_PLT32	printf_-0x4
     419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000420 <_out_buffer>:
     420:	48 39 ca             	cmp    %rcx,%rdx
     423:	73 04                	jae    429 <_out_buffer+0x9>
     425:	40 88 3c 16          	mov    %dil,(%rsi,%rdx,1)
     429:	c3                   	ret    
     42a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000430 <_out_null>:
     430:	c3                   	ret    
     431:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
     438:	00 00 00 00 
     43c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000440 <_out_rev>:
     440:	55                   	push   %rbp
     441:	48 89 e5             	mov    %rsp,%rbp
     444:	41 57                	push   %r15
     446:	4d 89 cf             	mov    %r9,%r15
     449:	41 56                	push   %r14
     44b:	49 89 ce             	mov    %rcx,%r14
     44e:	41 55                	push   %r13
     450:	41 54                	push   %r12
     452:	49 89 fc             	mov    %rdi,%r12
     455:	53                   	push   %rbx
     456:	48 89 d3             	mov    %rdx,%rbx
     459:	48 83 ec 28          	sub    $0x28,%rsp
     45d:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
     461:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
     465:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
     469:	f6 45 18 03          	testb  $0x3,0x18(%rbp)
     46d:	75 3c                	jne    4ab <_out_rev+0x6b>
     46f:	48 89 d1             	mov    %rdx,%rcx
     472:	8b 55 10             	mov    0x10(%rbp),%edx
     475:	49 89 cd             	mov    %rcx,%r13
     478:	48 89 d0             	mov    %rdx,%rax
     47b:	4c 29 c8             	sub    %r9,%rax
     47e:	48 8d 1c 18          	lea    (%rax,%rbx,1),%rbx
     482:	49 39 d1             	cmp    %rdx,%r9
     485:	0f 83 a6 00 00 00    	jae    531 <_out_rev+0xf1>
     48b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     490:	4c 89 ea             	mov    %r13,%rdx
     493:	49 83 c5 01          	add    $0x1,%r13
     497:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     49b:	4c 89 f1             	mov    %r14,%rcx
     49e:	bf 20 00 00 00       	mov    $0x20,%edi
     4a3:	41 ff d4             	call   *%r12
     4a6:	4c 39 eb             	cmp    %r13,%rbx
     4a9:	75 e5                	jne    490 <_out_rev+0x50>
     4ab:	4d 89 fd             	mov    %r15,%r13
     4ae:	4d 8d 3c 1f          	lea    (%r15,%rbx,1),%r15
     4b2:	4d 85 ed             	test   %r13,%r13
     4b5:	74 2e                	je     4e5 <_out_rev+0xa5>
     4b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     4be:	00 00 
     4c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
     4c4:	4c 89 fa             	mov    %r15,%rdx
     4c7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     4cb:	4c 89 fb             	mov    %r15,%rbx
     4ce:	4c 29 ea             	sub    %r13,%rdx
     4d1:	49 83 ed 01          	sub    $0x1,%r13
     4d5:	4c 89 f1             	mov    %r14,%rcx
     4d8:	42 0f be 3c 28       	movsbl (%rax,%r13,1),%edi
     4dd:	41 ff d4             	call   *%r12
     4e0:	4d 85 ed             	test   %r13,%r13
     4e3:	75 db                	jne    4c0 <_out_rev+0x80>
     4e5:	f6 45 18 02          	testb  $0x2,0x18(%rbp)
     4e9:	74 34                	je     51f <_out_rev+0xdf>
     4eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
     4ef:	49 89 df             	mov    %rbx,%r15
     4f2:	44 8b 6d 10          	mov    0x10(%rbp),%r13d
     4f6:	49 29 c7             	sub    %rax,%r15
     4f9:	4d 39 ef             	cmp    %r13,%r15
     4fc:	73 21                	jae    51f <_out_rev+0xdf>
     4fe:	66 90                	xchg   %ax,%ax
     500:	49 83 c7 01          	add    $0x1,%r15
     504:	48 89 da             	mov    %rbx,%rdx
     507:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     50b:	4c 89 f1             	mov    %r14,%rcx
     50e:	bf 20 00 00 00       	mov    $0x20,%edi
     513:	48 83 c3 01          	add    $0x1,%rbx
     517:	41 ff d4             	call   *%r12
     51a:	4d 39 ef             	cmp    %r13,%r15
     51d:	72 e1                	jb     500 <_out_rev+0xc0>
     51f:	48 83 c4 28          	add    $0x28,%rsp
     523:	48 89 d8             	mov    %rbx,%rax
     526:	5b                   	pop    %rbx
     527:	41 5c                	pop    %r12
     529:	41 5d                	pop    %r13
     52b:	41 5e                	pop    %r14
     52d:	41 5f                	pop    %r15
     52f:	5d                   	pop    %rbp
     530:	c3                   	ret    
     531:	48 89 cb             	mov    %rcx,%rbx
     534:	e9 72 ff ff ff       	jmp    4ab <_out_rev+0x6b>
     539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000540 <_ntoa_long>:
     540:	55                   	push   %rbp
     541:	48 89 e5             	mov    %rsp,%rbp
     544:	41 57                	push   %r15
     546:	41 56                	push   %r14
     548:	41 55                	push   %r13
     54a:	49 89 d5             	mov    %rdx,%r13
     54d:	41 54                	push   %r12
     54f:	49 89 f4             	mov    %rsi,%r12
     552:	53                   	push   %rbx
     553:	48 89 fb             	mov    %rdi,%rbx
     556:	48 83 ec 38          	sub    $0x38,%rsp
     55a:	8b 45 28             	mov    0x28(%rbp),%eax
     55d:	48 8b 75 10          	mov    0x10(%rbp),%rsi
     561:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
     565:	41 89 c6             	mov    %eax,%r14d
     568:	41 81 e6 00 04 00 00 	and    $0x400,%r14d
     56f:	4d 85 c0             	test   %r8,%r8
     572:	0f 84 e0 00 00 00    	je     658 <_ntoa_long+0x118>
     578:	41 89 c7             	mov    %eax,%r15d
     57b:	41 89 c2             	mov    %eax,%r10d
     57e:	41 83 e7 10          	and    $0x10,%r15d
     582:	44 89 d0             	mov    %r10d,%eax
     585:	44 89 55 ac          	mov    %r10d,-0x54(%rbp)
     589:	48 8d 7d af          	lea    -0x51(%rbp),%rdi
     58d:	83 e0 20             	and    $0x20,%eax
     590:	44 89 7d a8          	mov    %r15d,-0x58(%rbp)
     594:	83 f8 01             	cmp    $0x1,%eax
     597:	45 19 db             	sbb    %r11d,%r11d
     59a:	45 31 c9             	xor    %r9d,%r9d
     59d:	41 83 e3 20          	and    $0x20,%r11d
     5a1:	41 83 c3 37          	add    $0x37,%r11d
     5a5:	eb 0c                	jmp    5b3 <_ntoa_long+0x73>
     5a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     5ae:	00 00 
     5b0:	49 89 c0             	mov    %rax,%r8
     5b3:	31 d2                	xor    %edx,%edx
     5b5:	4c 89 c0             	mov    %r8,%rax
     5b8:	48 f7 f6             	div    %rsi
     5bb:	48 83 fa 09          	cmp    $0x9,%rdx
     5bf:	44 8d 7a 30          	lea    0x30(%rdx),%r15d
     5c3:	45 8d 14 13          	lea    (%r11,%rdx,1),%r10d
     5c7:	45 0f 46 d7          	cmovbe %r15d,%r10d
     5cb:	49 83 c1 01          	add    $0x1,%r9
     5cf:	46 88 14 0f          	mov    %r10b,(%rdi,%r9,1)
     5d3:	49 83 f9 1f          	cmp    $0x1f,%r9
     5d7:	77 05                	ja     5de <_ntoa_long+0x9e>
     5d9:	49 39 f0             	cmp    %rsi,%r8
     5dc:	73 d2                	jae    5b0 <_ntoa_long+0x70>
     5de:	44 8b 55 ac          	mov    -0x54(%rbp),%r10d
     5e2:	44 8b 7d a8          	mov    -0x58(%rbp),%r15d
     5e6:	41 f6 c2 02          	test   $0x2,%r10b
     5ea:	0f 84 87 00 00 00    	je     677 <_ntoa_long+0x137>
     5f0:	45 85 ff             	test   %r15d,%r15d
     5f3:	0f 84 1f 01 00 00    	je     718 <_ntoa_long+0x1d8>
     5f9:	45 85 f6             	test   %r14d,%r14d
     5fc:	0f 84 46 01 00 00    	je     748 <_ntoa_long+0x208>
     602:	48 83 fe 10          	cmp    $0x10,%rsi
     606:	0f 84 34 02 00 00    	je     840 <_ntoa_long+0x300>
     60c:	83 fe 02             	cmp    $0x2,%esi
     60f:	75 12                	jne    623 <_ntoa_long+0xe3>
     611:	49 83 f9 1f          	cmp    $0x1f,%r9
     615:	77 0c                	ja     623 <_ntoa_long+0xe3>
     617:	4c 89 c8             	mov    %r9,%rax
     61a:	49 83 c1 01          	add    $0x1,%r9
     61e:	c6 44 05 b0 62       	movb   $0x62,-0x50(%rbp,%rax,1)
     623:	49 83 f9 20          	cmp    $0x20,%r9
     627:	0f 85 6b 01 00 00    	jne    798 <_ntoa_long+0x258>
     62d:	41 52                	push   %r10
     62f:	8b 45 20             	mov    0x20(%rbp),%eax
     632:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
     636:	4c 89 ea             	mov    %r13,%rdx
     639:	4c 89 e6             	mov    %r12,%rsi
     63c:	48 89 df             	mov    %rbx,%rdi
     63f:	50                   	push   %rax
     640:	e8 fb fd ff ff       	call   440 <_out_rev>
     645:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     649:	5b                   	pop    %rbx
     64a:	41 5c                	pop    %r12
     64c:	41 5d                	pop    %r13
     64e:	41 5e                	pop    %r14
     650:	41 5f                	pop    %r15
     652:	5d                   	pop    %rbp
     653:	c3                   	ret    
     654:	0f 1f 40 00          	nopl   0x0(%rax)
     658:	41 89 c2             	mov    %eax,%r10d
     65b:	41 83 e2 ef          	and    $0xffffffef,%r10d
     65f:	45 85 f6             	test   %r14d,%r14d
     662:	0f 84 50 01 00 00    	je     7b8 <_ntoa_long+0x278>
     668:	45 31 c9             	xor    %r9d,%r9d
     66b:	83 e0 02             	and    $0x2,%eax
     66e:	41 89 c7             	mov    %eax,%r15d
     671:	0f 85 ab 00 00 00    	jne    722 <_ntoa_long+0x1e2>
     677:	8b 45 18             	mov    0x18(%rbp),%eax
     67a:	45 89 d0             	mov    %r10d,%r8d
     67d:	44 8b 5d 20          	mov    0x20(%rbp),%r11d
     681:	41 83 e0 01          	and    $0x1,%r8d
     685:	49 83 f9 1f          	cmp    $0x1f,%r9
     689:	40 0f 96 c7          	setbe  %dil
     68d:	49 39 c1             	cmp    %rax,%r9
     690:	0f 92 c2             	setb   %dl
     693:	21 fa                	and    %edi,%edx
     695:	45 85 db             	test   %r11d,%r11d
     698:	0f 85 22 01 00 00    	jne    7c0 <_ntoa_long+0x280>
     69e:	84 d2                	test   %dl,%dl
     6a0:	74 22                	je     6c4 <_ntoa_long+0x184>
     6a2:	48 8d 7d af          	lea    -0x51(%rbp),%rdi
     6a6:	eb 0e                	jmp    6b6 <_ntoa_long+0x176>
     6a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     6af:	00 
     6b0:	49 83 f9 1f          	cmp    $0x1f,%r9
     6b4:	77 0e                	ja     6c4 <_ntoa_long+0x184>
     6b6:	49 83 c1 01          	add    $0x1,%r9
     6ba:	42 c6 04 0f 30       	movb   $0x30,(%rdi,%r9,1)
     6bf:	49 39 c1             	cmp    %rax,%r9
     6c2:	72 ec                	jb     6b0 <_ntoa_long+0x170>
     6c4:	45 85 c0             	test   %r8d,%r8d
     6c7:	0f 84 23 ff ff ff    	je     5f0 <_ntoa_long+0xb0>
     6cd:	49 83 f9 1f          	cmp    $0x1f,%r9
     6d1:	40 0f 96 c7          	setbe  %dil
     6d5:	8b 45 20             	mov    0x20(%rbp),%eax
     6d8:	49 39 c1             	cmp    %rax,%r9
     6db:	0f 83 0f ff ff ff    	jae    5f0 <_ntoa_long+0xb0>
     6e1:	40 84 ff             	test   %dil,%dil
     6e4:	0f 84 06 ff ff ff    	je     5f0 <_ntoa_long+0xb0>
     6ea:	48 8d 7d af          	lea    -0x51(%rbp),%rdi
     6ee:	eb 09                	jmp    6f9 <_ntoa_long+0x1b9>
     6f0:	49 39 c1             	cmp    %rax,%r9
     6f3:	0f 83 f7 fe ff ff    	jae    5f0 <_ntoa_long+0xb0>
     6f9:	49 83 c1 01          	add    $0x1,%r9
     6fd:	42 c6 04 0f 30       	movb   $0x30,(%rdi,%r9,1)
     702:	49 83 f9 1f          	cmp    $0x1f,%r9
     706:	76 e8                	jbe    6f0 <_ntoa_long+0x1b0>
     708:	45 85 ff             	test   %r15d,%r15d
     70b:	0f 85 e8 fe ff ff    	jne    5f9 <_ntoa_long+0xb9>
     711:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     718:	49 83 f9 20          	cmp    $0x20,%r9
     71c:	0f 84 0b ff ff ff    	je     62d <_ntoa_long+0xed>
     722:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
     726:	0f 85 bc 00 00 00    	jne    7e8 <_ntoa_long+0x2a8>
     72c:	41 f6 c2 04          	test   $0x4,%r10b
     730:	0f 84 32 01 00 00    	je     868 <_ntoa_long+0x328>
     736:	42 c6 44 0d b0 2b    	movb   $0x2b,-0x50(%rbp,%r9,1)
     73c:	49 83 c1 01          	add    $0x1,%r9
     740:	e9 e8 fe ff ff       	jmp    62d <_ntoa_long+0xed>
     745:	0f 1f 00             	nopl   (%rax)
     748:	4d 85 c9             	test   %r9,%r9
     74b:	0f 84 bf 00 00 00    	je     810 <_ntoa_long+0x2d0>
     751:	8b 45 18             	mov    0x18(%rbp),%eax
     754:	49 39 c1             	cmp    %rax,%r9
     757:	74 0c                	je     765 <_ntoa_long+0x225>
     759:	8b 45 20             	mov    0x20(%rbp),%eax
     75c:	49 39 c1             	cmp    %rax,%r9
     75f:	0f 85 9d fe ff ff    	jne    602 <_ntoa_long+0xc2>
     765:	49 8d 41 ff          	lea    -0x1(%r9),%rax
     769:	49 83 f9 01          	cmp    $0x1,%r9
     76d:	0f 84 3c 01 00 00    	je     8af <_ntoa_long+0x36f>
     773:	83 fe 10             	cmp    $0x10,%esi
     776:	0f 85 33 01 00 00    	jne    8af <_ntoa_long+0x36f>
     77c:	49 83 e9 02          	sub    $0x2,%r9
     780:	41 f6 c2 20          	test   $0x20,%r10b
     784:	0f 84 50 01 00 00    	je     8da <_ntoa_long+0x39a>
     78a:	42 c6 44 0d b0 58    	movb   $0x58,-0x50(%rbp,%r9,1)
     790:	49 89 c1             	mov    %rax,%r9
     793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     798:	4c 89 c8             	mov    %r9,%rax
     79b:	49 83 c1 01          	add    $0x1,%r9
     79f:	c6 44 05 b0 30       	movb   $0x30,-0x50(%rbp,%rax,1)
     7a4:	49 83 f9 20          	cmp    $0x20,%r9
     7a8:	0f 84 7f fe ff ff    	je     62d <_ntoa_long+0xed>
     7ae:	e9 6f ff ff ff       	jmp    722 <_ntoa_long+0x1e2>
     7b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     7b8:	45 31 ff             	xor    %r15d,%r15d
     7bb:	e9 c2 fd ff ff       	jmp    582 <_ntoa_long+0x42>
     7c0:	45 85 c0             	test   %r8d,%r8d
     7c3:	74 3b                	je     800 <_ntoa_long+0x2c0>
     7c5:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
     7c9:	75 06                	jne    7d1 <_ntoa_long+0x291>
     7cb:	41 f6 c2 0c          	test   $0xc,%r10b
     7cf:	74 04                	je     7d5 <_ntoa_long+0x295>
     7d1:	83 6d 20 01          	subl   $0x1,0x20(%rbp)
     7d5:	84 d2                	test   %dl,%dl
     7d7:	0f 85 c5 fe ff ff    	jne    6a2 <_ntoa_long+0x162>
     7dd:	e9 f3 fe ff ff       	jmp    6d5 <_ntoa_long+0x195>
     7e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     7e8:	42 c6 44 0d b0 2d    	movb   $0x2d,-0x50(%rbp,%r9,1)
     7ee:	49 83 c1 01          	add    $0x1,%r9
     7f2:	e9 36 fe ff ff       	jmp    62d <_ntoa_long+0xed>
     7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     7fe:	00 00 
     800:	84 d2                	test   %dl,%dl
     802:	0f 85 9a fe ff ff    	jne    6a2 <_ntoa_long+0x162>
     808:	e9 e3 fd ff ff       	jmp    5f0 <_ntoa_long+0xb0>
     80d:	0f 1f 00             	nopl   (%rax)
     810:	48 83 fe 10          	cmp    $0x10,%rsi
     814:	0f 84 aa 00 00 00    	je     8c4 <_ntoa_long+0x384>
     81a:	48 83 fe 02          	cmp    $0x2,%rsi
     81e:	0f 85 7c 00 00 00    	jne    8a0 <_ntoa_long+0x360>
     824:	b8 62 00 00 00       	mov    $0x62,%eax
     829:	88 45 b0             	mov    %al,-0x50(%rbp)
     82c:	41 b9 02 00 00 00    	mov    $0x2,%r9d
     832:	c6 45 b1 30          	movb   $0x30,-0x4f(%rbp)
     836:	e9 e7 fe ff ff       	jmp    722 <_ntoa_long+0x1e2>
     83b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     840:	41 f6 c2 20          	test   $0x20,%r10b
     844:	74 3b                	je     881 <_ntoa_long+0x341>
     846:	49 83 f9 20          	cmp    $0x20,%r9
     84a:	0f 84 dd fd ff ff    	je     62d <_ntoa_long+0xed>
     850:	49 8d 51 01          	lea    0x1(%r9),%rdx
     854:	42 c6 44 0d b0 58    	movb   $0x58,-0x50(%rbp,%r9,1)
     85a:	49 89 d1             	mov    %rdx,%r9
     85d:	e9 c1 fd ff ff       	jmp    623 <_ntoa_long+0xe3>
     862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     868:	41 f6 c2 08          	test   $0x8,%r10b
     86c:	0f 84 bb fd ff ff    	je     62d <_ntoa_long+0xed>
     872:	42 c6 44 0d b0 20    	movb   $0x20,-0x50(%rbp,%r9,1)
     878:	49 83 c1 01          	add    $0x1,%r9
     87c:	e9 ac fd ff ff       	jmp    62d <_ntoa_long+0xed>
     881:	49 83 f9 20          	cmp    $0x20,%r9
     885:	0f 84 a2 fd ff ff    	je     62d <_ntoa_long+0xed>
     88b:	4c 89 c8             	mov    %r9,%rax
     88e:	49 83 c1 01          	add    $0x1,%r9
     892:	c6 44 05 b0 78       	movb   $0x78,-0x50(%rbp,%rax,1)
     897:	e9 87 fd ff ff       	jmp    623 <_ntoa_long+0xe3>
     89c:	0f 1f 40 00          	nopl   0x0(%rax)
     8a0:	c6 45 b0 30          	movb   $0x30,-0x50(%rbp)
     8a4:	41 b9 01 00 00 00    	mov    $0x1,%r9d
     8aa:	e9 73 fe ff ff       	jmp    722 <_ntoa_long+0x1e2>
     8af:	48 83 fe 10          	cmp    $0x10,%rsi
     8b3:	74 33                	je     8e8 <_ntoa_long+0x3a8>
     8b5:	48 83 fe 02          	cmp    $0x2,%rsi
     8b9:	0f 84 5f fd ff ff    	je     61e <_ntoa_long+0xde>
     8bf:	e9 db fe ff ff       	jmp    79f <_ntoa_long+0x25f>
     8c4:	44 89 d0             	mov    %r10d,%eax
     8c7:	83 e0 20             	and    $0x20,%eax
     8ca:	83 f8 01             	cmp    $0x1,%eax
     8cd:	19 c0                	sbb    %eax,%eax
     8cf:	83 e0 20             	and    $0x20,%eax
     8d2:	83 c0 58             	add    $0x58,%eax
     8d5:	e9 4f ff ff ff       	jmp    829 <_ntoa_long+0x2e9>
     8da:	42 c6 44 0d b0 78    	movb   $0x78,-0x50(%rbp,%r9,1)
     8e0:	49 89 c1             	mov    %rax,%r9
     8e3:	e9 b0 fe ff ff       	jmp    798 <_ntoa_long+0x258>
     8e8:	41 f6 c2 20          	test   $0x20,%r10b
     8ec:	74 a4                	je     892 <_ntoa_long+0x352>
     8ee:	4c 89 ca             	mov    %r9,%rdx
     8f1:	49 89 c1             	mov    %rax,%r9
     8f4:	e9 5b ff ff ff       	jmp    854 <_ntoa_long+0x314>
     8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000900 <_etoa>:
     900:	55                   	push   %rbp
     901:	48 89 e5             	mov    %rsp,%rbp
     904:	41 57                	push   %r15
     906:	41 56                	push   %r14
     908:	41 55                	push   %r13
     90a:	49 89 d5             	mov    %rdx,%r13
     90d:	41 54                	push   %r12
     90f:	49 89 fc             	mov    %rdi,%r12
     912:	53                   	push   %rbx
     913:	44 89 cb             	mov    %r9d,%ebx
     916:	48 83 ec 38          	sub    $0x38,%rsp
     91a:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
     91e:	44 8b 75 10          	mov    0x10(%rbp),%r14d
     922:	0f 8a f8 01 00 00    	jp     b20 <_etoa+0x220>
     928:	66 0f 2f 05 00 00 00 	comisd 0x0(%rip),%xmm0        # 930 <_etoa+0x30>
     92f:	00 
			92c: R_X86_64_PC32	.LC0-0x4
     930:	0f 87 ea 01 00 00    	ja     b20 <_etoa+0x220>
     936:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # 93e <_etoa+0x3e>
     93d:	00 
			93a: R_X86_64_PC32	.LC1-0x4
     93e:	66 0f 2f c8          	comisd %xmm0,%xmm1
     942:	0f 87 d8 01 00 00    	ja     b20 <_etoa+0x220>
     948:	66 0f ef db          	pxor   %xmm3,%xmm3
     94c:	66 0f 28 c8          	movapd %xmm0,%xmm1
     950:	66 0f 28 d0          	movapd %xmm0,%xmm2
     954:	44 89 f2             	mov    %r14d,%edx
     957:	f2 0f c2 cb 01       	cmpltsd %xmm3,%xmm1
     95c:	81 e2 00 04 00 00    	and    $0x400,%edx
     962:	b8 06 00 00 00       	mov    $0x6,%eax
     967:	f2 0f 10 35 00 00 00 	movsd  0x0(%rip),%xmm6        # 96f <_etoa+0x6f>
     96e:	00 
			96b: R_X86_64_PC32	.LC13-0x4
     96f:	66 0f 57 15 00 00 00 	xorpd  0x0(%rip),%xmm2        # 977 <_etoa+0x77>
     976:	00 
			973: R_X86_64_PC32	.LC3-0x4
     977:	44 0f 44 c0          	cmove  %eax,%r8d
     97b:	66 0f ef db          	pxor   %xmm3,%xmm3
     97f:	66 0f 54 d1          	andpd  %xmm1,%xmm2
     983:	66 0f 55 c8          	andnpd %xmm0,%xmm1
     987:	66 0f 56 d1          	orpd   %xmm1,%xmm2
     98b:	66 48 0f 7e d0       	movq   %xmm2,%rax
     990:	48 89 c7             	mov    %rax,%rdi
     993:	48 c1 ef 34          	shr    $0x34,%rdi
     997:	81 e7 ff 07 00 00    	and    $0x7ff,%edi
     99d:	81 ef ff 03 00 00    	sub    $0x3ff,%edi
     9a3:	f2 0f 2a df          	cvtsi2sd %edi,%xmm3
     9a7:	f2 0f 59 1d 00 00 00 	mulsd  0x0(%rip),%xmm3        # 9af <_etoa+0xaf>
     9ae:	00 
			9ab: R_X86_64_PC32	.LC4-0x4
     9af:	48 bf ff ff ff ff ff 	movabs $0xfffffffffffff,%rdi
     9b6:	ff 0f 00 
     9b9:	48 21 f8             	and    %rdi,%rax
     9bc:	f2 0f 58 1d 00 00 00 	addsd  0x0(%rip),%xmm3        # 9c4 <_etoa+0xc4>
     9c3:	00 
			9c0: R_X86_64_PC32	.LC5-0x4
     9c4:	48 bf 00 00 00 00 00 	movabs $0x3ff0000000000000,%rdi
     9cb:	00 f0 3f 
     9ce:	48 09 f8             	or     %rdi,%rax
     9d1:	66 48 0f 6e c8       	movq   %rax,%xmm1
     9d6:	f2 0f 5c 0d 00 00 00 	subsd  0x0(%rip),%xmm1        # 9de <_etoa+0xde>
     9dd:	00 
			9da: R_X86_64_PC32	.LC6-0x4
     9de:	f2 0f 59 0d 00 00 00 	mulsd  0x0(%rip),%xmm1        # 9e6 <_etoa+0xe6>
     9e5:	00 
			9e2: R_X86_64_PC32	.LC7-0x4
     9e6:	f2 0f 58 d9          	addsd  %xmm1,%xmm3
     9ea:	66 0f ef c9          	pxor   %xmm1,%xmm1
     9ee:	f2 44 0f 2c d3       	cvttsd2si %xmm3,%r10d
     9f3:	f2 0f 10 1d 00 00 00 	movsd  0x0(%rip),%xmm3        # 9fb <_etoa+0xfb>
     9fa:	00 
			9f7: R_X86_64_PC32	.LC8-0x4
     9fb:	f2 41 0f 2a ca       	cvtsi2sd %r10d,%xmm1
     a00:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
     a04:	f2 0f 58 1d 00 00 00 	addsd  0x0(%rip),%xmm3        # a0c <_etoa+0x10c>
     a0b:	00 
			a08: R_X86_64_PC32	.LC9-0x4
     a0c:	f2 0f 59 0d 00 00 00 	mulsd  0x0(%rip),%xmm1        # a14 <_etoa+0x114>
     a13:	00 
			a10: R_X86_64_PC32	.LC10-0x4
     a14:	f2 0f 2c c3          	cvttsd2si %xmm3,%eax
     a18:	66 0f ef db          	pxor   %xmm3,%xmm3
     a1c:	f2 0f 2a d8          	cvtsi2sd %eax,%xmm3
     a20:	f2 0f 59 1d 00 00 00 	mulsd  0x0(%rip),%xmm3        # a28 <_etoa+0x128>
     a27:	00 
			a24: R_X86_64_PC32	.LC11-0x4
     a28:	05 ff 03 00 00       	add    $0x3ff,%eax
     a2d:	48 c1 e0 34          	shl    $0x34,%rax
     a31:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
     a35:	66 0f 28 e1          	movapd %xmm1,%xmm4
     a39:	66 0f 28 d9          	movapd %xmm1,%xmm3
     a3d:	f2 0f 59 e1          	mulsd  %xmm1,%xmm4
     a41:	f2 0f 58 d9          	addsd  %xmm1,%xmm3
     a45:	66 0f 28 fc          	movapd %xmm4,%xmm7
     a49:	f2 0f 5e 3d 00 00 00 	divsd  0x0(%rip),%xmm7        # a51 <_etoa+0x151>
     a50:	00 
			a4d: R_X86_64_PC32	.LC12-0x4
     a51:	f2 0f 58 fe          	addsd  %xmm6,%xmm7
     a55:	66 0f 28 ec          	movapd %xmm4,%xmm5
     a59:	f2 0f 5e ef          	divsd  %xmm7,%xmm5
     a5d:	66 48 0f 6e f8       	movq   %rax,%xmm7
     a62:	f2 0f 58 2d 00 00 00 	addsd  0x0(%rip),%xmm5        # a6a <_etoa+0x16a>
     a69:	00 
			a66: R_X86_64_PC32	.LC14-0x4
     a6a:	f2 0f 5e e5          	divsd  %xmm5,%xmm4
     a6e:	f2 0f 10 2d 00 00 00 	movsd  0x0(%rip),%xmm5        # a76 <_etoa+0x176>
     a75:	00 
			a72: R_X86_64_PC32	.LC15-0x4
     a76:	f2 0f 5c e9          	subsd  %xmm1,%xmm5
     a7a:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # a82 <_etoa+0x182>
     a81:	00 
			a7e: R_X86_64_PC32	.LC16-0x4
     a82:	f2 0f 58 e5          	addsd  %xmm5,%xmm4
     a86:	f2 0f 5e dc          	divsd  %xmm4,%xmm3
     a8a:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
     a8e:	f2 0f 59 cf          	mulsd  %xmm7,%xmm1
     a92:	66 0f 2f ca          	comisd %xmm2,%xmm1
     a96:	76 08                	jbe    aa0 <_etoa+0x1a0>
     a98:	f2 0f 5e ce          	divsd  %xmm6,%xmm1
     a9c:	41 83 ea 01          	sub    $0x1,%r10d
     aa0:	41 8d 42 63          	lea    0x63(%r10),%eax
     aa4:	45 31 db             	xor    %r11d,%r11d
     aa7:	3d c6 00 00 00       	cmp    $0xc6,%eax
     aac:	41 0f 97 c3          	seta   %r11b
     ab0:	41 83 c3 04          	add    $0x4,%r11d
     ab4:	41 f7 c6 00 08 00 00 	test   $0x800,%r14d
     abb:	0f 84 91 00 00 00    	je     b52 <_etoa+0x252>
     ac1:	66 0f 2f 15 00 00 00 	comisd 0x0(%rip),%xmm2        # ac9 <_etoa+0x1c9>
     ac8:	00 
			ac5: R_X86_64_PC32	.LC17-0x4
     ac9:	44 89 c0             	mov    %r8d,%eax
     acc:	72 72                	jb     b40 <_etoa+0x240>
     ace:	f2 0f 10 1d 00 00 00 	movsd  0x0(%rip),%xmm3        # ad6 <_etoa+0x1d6>
     ad5:	00 
			ad2: R_X86_64_PC32	.LC18-0x4
     ad6:	66 0f 2f da          	comisd %xmm2,%xmm3
     ada:	76 64                	jbe    b40 <_etoa+0x240>
     adc:	44 29 d0             	sub    %r10d,%eax
     adf:	44 89 f2             	mov    %r14d,%edx
     ae2:	83 e8 01             	sub    $0x1,%eax
     ae5:	45 39 d0             	cmp    %r10d,%r8d
     ae8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
     aee:	44 0f 4f c0          	cmovg  %eax,%r8d
     af2:	80 ce 04             	or     $0x4,%dh
     af5:	85 db                	test   %ebx,%ebx
     af7:	0f 85 b3 01 00 00    	jne    cb0 <_etoa+0x3b0>
     afd:	44 89 f0             	mov    %r14d,%eax
     b00:	66 0f ef c9          	pxor   %xmm1,%xmm1
     b04:	80 e4 f7             	and    $0xf7,%ah
     b07:	80 cc 04             	or     $0x4,%ah
     b0a:	66 0f 2f c8          	comisd %xmm0,%xmm1
     b0e:	0f 87 78 01 00 00    	ja     c8c <_etoa+0x38c>
     b14:	89 45 10             	mov    %eax,0x10(%rbp)
     b17:	45 31 c9             	xor    %r9d,%r9d
     b1a:	66 0f 28 c2          	movapd %xmm2,%xmm0
     b1e:	eb 07                	jmp    b27 <_etoa+0x227>
     b20:	44 89 75 10          	mov    %r14d,0x10(%rbp)
     b24:	41 89 d9             	mov    %ebx,%r9d
     b27:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     b2b:	4c 89 ea             	mov    %r13,%rdx
     b2e:	4c 89 e7             	mov    %r12,%rdi
     b31:	5b                   	pop    %rbx
     b32:	41 5c                	pop    %r12
     b34:	41 5d                	pop    %r13
     b36:	41 5e                	pop    %r14
     b38:	41 5f                	pop    %r15
     b3a:	5d                   	pop    %rbp
     b3b:	e9 90 01 00 00       	jmp    cd0 <_ftoa>
     b40:	83 fa 01             	cmp    $0x1,%edx
     b43:	44 89 c2             	mov    %r8d,%edx
     b46:	83 d2 ff             	adc    $0xffffffff,%edx
     b49:	45 85 c0             	test   %r8d,%r8d
     b4c:	0f 45 c2             	cmovne %edx,%eax
     b4f:	41 89 c0             	mov    %eax,%r8d
     b52:	44 89 f2             	mov    %r14d,%edx
     b55:	41 89 d9             	mov    %ebx,%r9d
     b58:	31 c0                	xor    %eax,%eax
     b5a:	c6 45 c8 01          	movb   $0x1,-0x38(%rbp)
     b5e:	83 e2 02             	and    $0x2,%edx
     b61:	45 29 d9             	sub    %r11d,%r9d
     b64:	41 39 db             	cmp    %ebx,%r11d
     b67:	44 0f 43 c8          	cmovae %eax,%r9d
     b6b:	83 fa 01             	cmp    $0x1,%edx
     b6e:	19 ff                	sbb    %edi,%edi
     b70:	83 c7 01             	add    $0x1,%edi
     b73:	85 d2                	test   %edx,%edx
     b75:	40 88 7d af          	mov    %dil,-0x51(%rbp)
     b79:	44 0f 45 c8          	cmovne %eax,%r9d
     b7d:	45 85 d2             	test   %r10d,%r10d
     b80:	74 04                	je     b86 <_etoa+0x286>
     b82:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
     b86:	44 89 f0             	mov    %r14d,%eax
     b89:	66 0f ef c9          	pxor   %xmm1,%xmm1
     b8d:	80 e4 f7             	and    $0xf7,%ah
     b90:	66 0f 2f c8          	comisd %xmm0,%xmm1
     b94:	0f 87 06 01 00 00    	ja     ca0 <_etoa+0x3a0>
     b9a:	48 83 ec 08          	sub    $0x8,%rsp
     b9e:	44 89 5d b0          	mov    %r11d,-0x50(%rbp)
     ba2:	4c 89 ea             	mov    %r13,%rdx
     ba5:	66 0f 28 c2          	movapd %xmm2,%xmm0
     ba9:	44 89 55 b4          	mov    %r10d,-0x4c(%rbp)
     bad:	4c 89 e7             	mov    %r12,%rdi
     bb0:	50                   	push   %rax
     bb1:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
     bb5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
     bb9:	e8 12 01 00 00       	call   cd0 <_ftoa>
     bbe:	80 7d c8 00          	cmpb   $0x0,-0x38(%rbp)
     bc2:	49 89 c7             	mov    %rax,%r15
     bc5:	58                   	pop    %rax
     bc6:	5a                   	pop    %rdx
     bc7:	0f 84 ad 00 00 00    	je     c7a <_etoa+0x37a>
     bcd:	41 83 e6 20          	and    $0x20,%r14d
     bd1:	49 8d 47 01          	lea    0x1(%r15),%rax
     bd5:	4c 89 fa             	mov    %r15,%rdx
     bd8:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
     bdc:	41 83 fe 01          	cmp    $0x1,%r14d
     be0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     be4:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
     be8:	19 ff                	sbb    %edi,%edi
     bea:	83 e7 20             	and    $0x20,%edi
     bed:	83 c7 45             	add    $0x45,%edi
     bf0:	41 ff d4             	call   *%r12
     bf3:	44 8b 55 b4          	mov    -0x4c(%rbp),%r10d
     bf7:	6a 05                	push   $0x5
     bf9:	4c 89 e7             	mov    %r12,%rdi
     bfc:	44 8b 5d b0          	mov    -0x50(%rbp),%r11d
     c00:	45 89 d0             	mov    %r10d,%r8d
     c03:	41 f7 d8             	neg    %r8d
     c06:	45 0f 48 c2          	cmovs  %r10d,%r8d
     c0a:	41 83 eb 01          	sub    $0x1,%r11d
     c0e:	41 c1 ea 1f          	shr    $0x1f,%r10d
     c12:	41 53                	push   %r11
     c14:	45 89 d1             	mov    %r10d,%r9d
     c17:	6a 00                	push   $0x0
     c19:	4d 63 c0             	movslq %r8d,%r8
     c1c:	6a 0a                	push   $0xa
     c1e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     c22:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
     c26:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
     c2a:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
     c2e:	e8 0d f9 ff ff       	call   540 <_ntoa_long>
     c33:	48 83 c4 20          	add    $0x20,%rsp
     c37:	80 7d af 00          	cmpb   $0x0,-0x51(%rbp)
     c3b:	49 89 c7             	mov    %rax,%r15
     c3e:	74 3a                	je     c7a <_etoa+0x37a>
     c40:	49 89 c6             	mov    %rax,%r14
     c43:	4d 29 ee             	sub    %r13,%r14
     c46:	49 39 de             	cmp    %rbx,%r14
     c49:	73 2f                	jae    c7a <_etoa+0x37a>
     c4b:	4c 8b 7d b8          	mov    -0x48(%rbp),%r15
     c4f:	49 89 c5             	mov    %rax,%r13
     c52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     c58:	49 83 c6 01          	add    $0x1,%r14
     c5c:	4c 89 ea             	mov    %r13,%rdx
     c5f:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     c63:	4c 89 f9             	mov    %r15,%rcx
     c66:	bf 20 00 00 00       	mov    $0x20,%edi
     c6b:	49 83 c5 01          	add    $0x1,%r13
     c6f:	41 ff d4             	call   *%r12
     c72:	49 39 de             	cmp    %rbx,%r14
     c75:	72 e1                	jb     c58 <_etoa+0x358>
     c77:	4d 89 ef             	mov    %r13,%r15
     c7a:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     c7e:	4c 89 f8             	mov    %r15,%rax
     c81:	5b                   	pop    %rbx
     c82:	41 5c                	pop    %r12
     c84:	41 5d                	pop    %r13
     c86:	41 5e                	pop    %r14
     c88:	41 5f                	pop    %r15
     c8a:	5d                   	pop    %rbp
     c8b:	c3                   	ret    
     c8c:	c6 45 c8 00          	movb   $0x0,-0x38(%rbp)
     c90:	45 31 c9             	xor    %r9d,%r9d
     c93:	45 31 db             	xor    %r11d,%r11d
     c96:	41 89 d6             	mov    %edx,%r14d
     c99:	c6 45 af 00          	movb   $0x0,-0x51(%rbp)
     c9d:	45 31 d2             	xor    %r10d,%r10d
     ca0:	66 0f 57 15 00 00 00 	xorpd  0x0(%rip),%xmm2        # ca8 <_etoa+0x3a8>
     ca7:	00 
			ca4: R_X86_64_PC32	.LC3-0x4
     ca8:	e9 ed fe ff ff       	jmp    b9a <_etoa+0x29a>
     cad:	0f 1f 00             	nopl   (%rax)
     cb0:	c6 45 af 00          	movb   $0x0,-0x51(%rbp)
     cb4:	41 89 d6             	mov    %edx,%r14d
     cb7:	41 89 d9             	mov    %ebx,%r9d
     cba:	45 31 d2             	xor    %r10d,%r10d
     cbd:	c6 45 c8 00          	movb   $0x0,-0x38(%rbp)
     cc1:	45 31 db             	xor    %r11d,%r11d
     cc4:	e9 bd fe ff ff       	jmp    b86 <_etoa+0x286>
     cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000cd0 <_ftoa>:
     cd0:	55                   	push   %rbp
     cd1:	49 89 fb             	mov    %rdi,%r11
     cd4:	48 89 e5             	mov    %rsp,%rbp
     cd7:	41 57                	push   %r15
     cd9:	41 56                	push   %r14
     cdb:	41 55                	push   %r13
     cdd:	41 54                	push   %r12
     cdf:	49 89 cc             	mov    %rcx,%r12
     ce2:	53                   	push   %rbx
     ce3:	48 89 f3             	mov    %rsi,%rbx
     ce6:	48 83 ec 38          	sub    $0x38,%rsp
     cea:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
     cee:	44 8b 6d 10          	mov    0x10(%rbp),%r13d
     cf2:	0f 8a 68 01 00 00    	jp     e60 <_ftoa+0x190>
     cf8:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # d00 <_ftoa+0x30>
     cff:	00 
			cfc: R_X86_64_PC32	.LC1-0x4
     d00:	66 0f 2f c8          	comisd %xmm0,%xmm1
     d04:	0f 87 96 02 00 00    	ja     fa0 <_ftoa+0x2d0>
     d0a:	66 0f 2f 05 00 00 00 	comisd 0x0(%rip),%xmm0        # d12 <_ftoa+0x42>
     d11:	00 
			d0e: R_X86_64_PC32	.LC0-0x4
     d12:	0f 87 00 01 00 00    	ja     e18 <_ftoa+0x148>
     d18:	66 0f 2f 05 00 00 00 	comisd 0x0(%rip),%xmm0        # d20 <_ftoa+0x50>
     d1f:	00 
			d1c: R_X86_64_PC32	.LC21-0x4
     d20:	0f 87 52 02 00 00    	ja     f78 <_ftoa+0x2a8>
     d26:	f2 0f 10 0d 00 00 00 	movsd  0x0(%rip),%xmm1        # d2e <_ftoa+0x5e>
     d2d:	00 
			d2a: R_X86_64_PC32	.LC24-0x4
     d2e:	66 0f 2f c8          	comisd %xmm0,%xmm1
     d32:	0f 87 40 02 00 00    	ja     f78 <_ftoa+0x2a8>
     d38:	66 0f ef c9          	pxor   %xmm1,%xmm1
     d3c:	45 31 f6             	xor    %r14d,%r14d
     d3f:	66 0f 2f c8          	comisd %xmm0,%xmm1
     d43:	0f 87 17 02 00 00    	ja     f60 <_ftoa+0x290>
     d49:	41 f7 c5 00 04 00 00 	test   $0x400,%r13d
     d50:	0f 85 22 01 00 00    	jne    e78 <_ftoa+0x1a8>
     d56:	f2 0f 10 15 00 00 00 	movsd  0x0(%rip),%xmm2        # d5e <_ftoa+0x8e>
     d5d:	00 
			d5a: R_X86_64_PC32	.LC18-0x4
     d5e:	31 c9                	xor    %ecx,%ecx
     d60:	41 b8 06 00 00 00    	mov    $0x6,%r8d
     d66:	f2 0f 2c f0          	cvttsd2si %xmm0,%esi
     d6a:	66 0f ef db          	pxor   %xmm3,%xmm3
     d6e:	66 0f 28 c8          	movapd %xmm0,%xmm1
     d72:	f2 0f 2a de          	cvtsi2sd %esi,%xmm3
     d76:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
     d7a:	f2 0f 10 1d 00 00 00 	movsd  0x0(%rip),%xmm3        # d82 <_ftoa+0xb2>
     d81:	00 
			d7e: R_X86_64_PC32	.LC25-0x4
     d82:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
     d86:	66 0f 2f cb          	comisd %xmm3,%xmm1
     d8a:	0f 83 c0 02 00 00    	jae    1050 <_ftoa+0x380>
     d90:	f2 4c 0f 2c d1       	cvttsd2si %xmm1,%r10
     d95:	4d 85 d2             	test   %r10,%r10
     d98:	0f 88 62 03 00 00    	js     1100 <_ftoa+0x430>
     d9e:	66 0f ef db          	pxor   %xmm3,%xmm3
     da2:	f2 49 0f 2a da       	cvtsi2sd %r10,%xmm3
     da7:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
     dab:	f2 0f 10 1d 00 00 00 	movsd  0x0(%rip),%xmm3        # db3 <_ftoa+0xe3>
     db2:	00 
			daf: R_X86_64_PC32	.LC9-0x4
     db3:	66 0f 2f cb          	comisd %xmm3,%xmm1
     db7:	0f 86 73 02 00 00    	jbe    1030 <_ftoa+0x360>
     dbd:	49 83 c2 01          	add    $0x1,%r10
     dc1:	0f 88 a9 03 00 00    	js     1170 <_ftoa+0x4a0>
     dc7:	66 0f ef c9          	pxor   %xmm1,%xmm1
     dcb:	f2 49 0f 2a ca       	cvtsi2sd %r10,%xmm1
     dd0:	66 0f 2f ca          	comisd %xmm2,%xmm1
     dd4:	72 06                	jb     ddc <_ftoa+0x10c>
     dd6:	83 c6 01             	add    $0x1,%esi
     dd9:	45 31 d2             	xor    %r10d,%r10d
     ddc:	45 85 c0             	test   %r8d,%r8d
     ddf:	0f 85 d3 01 00 00    	jne    fb8 <_ftoa+0x2e8>
     de5:	66 0f ef c9          	pxor   %xmm1,%xmm1
     de9:	f2 0f 2a ce          	cvtsi2sd %esi,%xmm1
     ded:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
     df1:	66 0f 2f d8          	comisd %xmm0,%xmm3
     df5:	76 0a                	jbe    e01 <_ftoa+0x131>
     df7:	66 0f 2f c3          	comisd %xmm3,%xmm0
     dfb:	0f 86 f1 00 00 00    	jbe    ef2 <_ftoa+0x222>
     e01:	89 f0                	mov    %esi,%eax
     e03:	83 e0 01             	and    $0x1,%eax
     e06:	83 f8 01             	cmp    $0x1,%eax
     e09:	83 de ff             	sbb    $0xffffffff,%esi
     e0c:	e9 e1 00 00 00       	jmp    ef2 <_ftoa+0x222>
     e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     e18:	44 89 e8             	mov    %r13d,%eax
     e1b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
			e1d: R_X86_64_32	.rodata.str1.1+0x1e
     e21:	41 55                	push   %r13
     e23:	83 e0 04             	and    $0x4,%eax
     e26:	41 51                	push   %r9
     e28:	83 f8 01             	cmp    $0x1,%eax
     e2b:	48 19 c9             	sbb    %rcx,%rcx
     e2e:	85 c0                	test   %eax,%eax
     e30:	b8 00 00 00 00       	mov    $0x0,%eax
			e31: R_X86_64_32	.rodata.str1.1+0x19
     e35:	4c 0f 45 c0          	cmovne %rax,%r8
     e39:	4c 8d 49 04          	lea    0x4(%rcx),%r9
     e3d:	4c 89 e1             	mov    %r12,%rcx
     e40:	48 89 de             	mov    %rbx,%rsi
     e43:	4c 89 df             	mov    %r11,%rdi
     e46:	e8 f5 f5 ff ff       	call   440 <_out_rev>
     e4b:	5a                   	pop    %rdx
     e4c:	59                   	pop    %rcx
     e4d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     e51:	5b                   	pop    %rbx
     e52:	41 5c                	pop    %r12
     e54:	41 5d                	pop    %r13
     e56:	41 5e                	pop    %r14
     e58:	41 5f                	pop    %r15
     e5a:	5d                   	pop    %rbp
     e5b:	c3                   	ret    
     e5c:	0f 1f 40 00          	nopl   0x0(%rax)
     e60:	41 55                	push   %r13
     e62:	41 b8 00 00 00 00    	mov    $0x0,%r8d
			e64: R_X86_64_32	.rodata.str1.1+0x22
     e68:	41 51                	push   %r9
     e6a:	41 b9 03 00 00 00    	mov    $0x3,%r9d
     e70:	eb cb                	jmp    e3d <_ftoa+0x16d>
     e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     e78:	41 83 f8 09          	cmp    $0x9,%r8d
     e7c:	0f 86 36 03 00 00    	jbe    11b8 <_ftoa+0x4e8>
     e82:	31 c9                	xor    %ecx,%ecx
     e84:	48 8d 45 af          	lea    -0x51(%rbp),%rax
     e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     e8f:	00 
     e90:	48 83 c1 01          	add    $0x1,%rcx
     e94:	41 83 e8 01          	sub    $0x1,%r8d
     e98:	c6 04 08 30          	movb   $0x30,(%rax,%rcx,1)
     e9c:	48 83 f9 1f          	cmp    $0x1f,%rcx
     ea0:	77 06                	ja     ea8 <_ftoa+0x1d8>
     ea2:	41 83 f8 09          	cmp    $0x9,%r8d
     ea6:	77 e8                	ja     e90 <_ftoa+0x1c0>
     ea8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # eaf <_ftoa+0x1df>
			eab: R_X86_64_PC32	.LC21-0x4
     eaf:	66 48 0f 6e d0       	movq   %rax,%xmm2
     eb4:	e9 ad fe ff ff       	jmp    d66 <_ftoa+0x96>
     eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     ec0:	48 63 c6             	movslq %esi,%rax
     ec3:	89 f7                	mov    %esi,%edi
     ec5:	48 83 c1 01          	add    $0x1,%rcx
     ec9:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
     ed0:	c1 ff 1f             	sar    $0x1f,%edi
     ed3:	48 c1 f8 22          	sar    $0x22,%rax
     ed7:	29 f8                	sub    %edi,%eax
     ed9:	8d 3c 80             	lea    (%rax,%rax,4),%edi
     edc:	01 ff                	add    %edi,%edi
     ede:	29 fe                	sub    %edi,%esi
     ee0:	83 c6 30             	add    $0x30,%esi
     ee3:	40 88 74 0d af       	mov    %sil,-0x51(%rbp,%rcx,1)
     ee8:	89 c6                	mov    %eax,%esi
     eea:	85 c0                	test   %eax,%eax
     eec:	0f 84 7e 01 00 00    	je     1070 <_ftoa+0x3a0>
     ef2:	48 83 f9 20          	cmp    $0x20,%rcx
     ef6:	75 c8                	jne    ec0 <_ftoa+0x1f0>
     ef8:	44 89 e8             	mov    %r13d,%eax
     efb:	83 e0 03             	and    $0x3,%eax
     efe:	83 f8 01             	cmp    $0x1,%eax
     f01:	75 4d                	jne    f50 <_ftoa+0x280>
     f03:	45 85 c9             	test   %r9d,%r9d
     f06:	74 48                	je     f50 <_ftoa+0x280>
     f08:	45 84 f6             	test   %r14b,%r14b
     f0b:	0f 85 87 02 00 00    	jne    1198 <_ftoa+0x4c8>
     f11:	41 f6 c5 0c          	test   $0xc,%r13b
     f15:	0f 85 7d 02 00 00    	jne    1198 <_ftoa+0x4c8>
     f1b:	44 89 ce             	mov    %r9d,%esi
     f1e:	48 39 f1             	cmp    %rsi,%rcx
     f21:	0f 83 fa 01 00 00    	jae    1121 <_ftoa+0x451>
     f27:	48 8d 45 af          	lea    -0x51(%rbp),%rax
     f2b:	eb 14                	jmp    f41 <_ftoa+0x271>
     f2d:	0f 1f 00             	nopl   (%rax)
     f30:	48 83 c1 01          	add    $0x1,%rcx
     f34:	c6 04 08 30          	movb   $0x30,(%rax,%rcx,1)
     f38:	48 39 f1             	cmp    %rsi,%rcx
     f3b:	0f 84 3e 01 00 00    	je     107f <_ftoa+0x3af>
     f41:	48 83 f9 20          	cmp    $0x20,%rcx
     f45:	75 e9                	jne    f30 <_ftoa+0x260>
     f47:	b9 20 00 00 00       	mov    $0x20,%ecx
     f4c:	0f 1f 40 00          	nopl   0x0(%rax)
     f50:	41 55                	push   %r13
     f52:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
     f56:	41 51                	push   %r9
     f58:	49 89 c9             	mov    %rcx,%r9
     f5b:	e9 dd fe ff ff       	jmp    e3d <_ftoa+0x16d>
     f60:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
     f64:	41 be 01 00 00 00    	mov    $0x1,%r14d
     f6a:	66 0f 28 c1          	movapd %xmm1,%xmm0
     f6e:	e9 d6 fd ff ff       	jmp    d49 <_ftoa+0x79>
     f73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
     f78:	44 89 6d 10          	mov    %r13d,0x10(%rbp)
     f7c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
     f80:	4c 89 e1             	mov    %r12,%rcx
     f83:	48 89 de             	mov    %rbx,%rsi
     f86:	4c 89 df             	mov    %r11,%rdi
     f89:	5b                   	pop    %rbx
     f8a:	41 5c                	pop    %r12
     f8c:	41 5d                	pop    %r13
     f8e:	41 5e                	pop    %r14
     f90:	41 5f                	pop    %r15
     f92:	5d                   	pop    %rbp
     f93:	e9 68 f9 ff ff       	jmp    900 <_etoa>
     f98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     f9f:	00 
     fa0:	41 55                	push   %r13
     fa2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
			fa4: R_X86_64_32	.rodata.str1.1+0x26
     fa8:	41 51                	push   %r9
     faa:	41 b9 04 00 00 00    	mov    $0x4,%r9d
     fb0:	e9 88 fe ff ff       	jmp    e3d <_ftoa+0x16d>
     fb5:	0f 1f 00             	nopl   (%rax)
     fb8:	41 8d 44 08 e0       	lea    -0x20(%r8,%rcx,1),%eax
     fbd:	89 75 a8             	mov    %esi,-0x58(%rbp)
     fc0:	4c 89 5d a0          	mov    %r11,-0x60(%rbp)
     fc4:	89 c6                	mov    %eax,%esi
     fc6:	49 89 d3             	mov    %rdx,%r11
     fc9:	44 88 75 af          	mov    %r14b,-0x51(%rbp)
     fcd:	eb 41                	jmp    1010 <_ftoa+0x340>
     fcf:	90                   	nop
     fd0:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
     fd7:	cc cc cc 
     fda:	48 8d 79 01          	lea    0x1(%rcx),%rdi
     fde:	45 8d 78 ff          	lea    -0x1(%r8),%r15d
     fe2:	49 f7 e2             	mul    %r10
     fe5:	4c 89 d0             	mov    %r10,%rax
     fe8:	48 c1 ea 03          	shr    $0x3,%rdx
     fec:	4c 8d 34 92          	lea    (%rdx,%rdx,4),%r14
     ff0:	4d 01 f6             	add    %r14,%r14
     ff3:	4c 29 f0             	sub    %r14,%rax
     ff6:	83 c0 30             	add    $0x30,%eax
     ff9:	88 44 3d af          	mov    %al,-0x51(%rbp,%rdi,1)
     ffd:	49 83 fa 09          	cmp    $0x9,%r10
    1001:	0f 86 99 00 00 00    	jbe    10a0 <_ftoa+0x3d0>
    1007:	45 89 f8             	mov    %r15d,%r8d
    100a:	49 89 d2             	mov    %rdx,%r10
    100d:	48 89 f9             	mov    %rdi,%rcx
    1010:	41 39 f0             	cmp    %esi,%r8d
    1013:	75 bb                	jne    fd0 <_ftoa+0x300>
    1015:	4c 89 da             	mov    %r11,%rdx
    1018:	44 0f b6 75 af       	movzbl -0x51(%rbp),%r14d
    101d:	8b 75 a8             	mov    -0x58(%rbp),%esi
    1020:	4c 8b 5d a0          	mov    -0x60(%rbp),%r11
    1024:	b9 20 00 00 00       	mov    $0x20,%ecx
    1029:	e9 c4 fe ff ff       	jmp    ef2 <_ftoa+0x222>
    102e:	66 90                	xchg   %ax,%ax
    1030:	66 0f 2f d9          	comisd %xmm1,%xmm3
    1034:	0f 87 a2 fd ff ff    	ja     ddc <_ftoa+0x10c>
    103a:	4d 85 d2             	test   %r10,%r10
    103d:	0f 85 1d 01 00 00    	jne    1160 <_ftoa+0x490>
    1043:	49 83 c2 01          	add    $0x1,%r10
    1047:	e9 90 fd ff ff       	jmp    ddc <_ftoa+0x10c>
    104c:	0f 1f 40 00          	nopl   0x0(%rax)
    1050:	66 0f 28 e1          	movapd %xmm1,%xmm4
    1054:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    1058:	f2 4c 0f 2c d4       	cvttsd2si %xmm4,%r10
    105d:	49 0f ba fa 3f       	btc    $0x3f,%r10
    1062:	e9 2e fd ff ff       	jmp    d95 <_ftoa+0xc5>
    1067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    106e:	00 00 
    1070:	44 89 e8             	mov    %r13d,%eax
    1073:	83 e0 03             	and    $0x3,%eax
    1076:	83 f8 01             	cmp    $0x1,%eax
    1079:	0f 84 4c 01 00 00    	je     11cb <_ftoa+0x4fb>
    107f:	48 83 f9 20          	cmp    $0x20,%rcx
    1083:	0f 84 c7 fe ff ff    	je     f50 <_ftoa+0x280>
    1089:	45 84 f6             	test   %r14b,%r14b
    108c:	0f 84 9e 00 00 00    	je     1130 <_ftoa+0x460>
    1092:	c6 44 0d b0 2d       	movb   $0x2d,-0x50(%rbp,%rcx,1)
    1097:	48 83 c1 01          	add    $0x1,%rcx
    109b:	e9 b0 fe ff ff       	jmp    f50 <_ftoa+0x280>
    10a0:	4c 89 da             	mov    %r11,%rdx
    10a3:	44 0f b6 75 af       	movzbl -0x51(%rbp),%r14d
    10a8:	8b 75 a8             	mov    -0x58(%rbp),%esi
    10ab:	4c 8b 5d a0          	mov    -0x60(%rbp),%r11
    10af:	48 83 ff 20          	cmp    $0x20,%rdi
    10b3:	0f 84 6b ff ff ff    	je     1024 <_ftoa+0x354>
    10b9:	41 8d 40 fe          	lea    -0x2(%r8),%eax
    10bd:	48 8d 44 01 02       	lea    0x2(%rcx,%rax,1),%rax
    10c2:	45 85 ff             	test   %r15d,%r15d
    10c5:	0f 84 e5 00 00 00    	je     11b0 <_ftoa+0x4e0>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    10d0:	48 83 c7 01          	add    $0x1,%rdi
    10d4:	c6 44 3d af 30       	movb   $0x30,-0x51(%rbp,%rdi,1)
    10d9:	48 83 ff 20          	cmp    $0x20,%rdi
    10dd:	0f 84 41 ff ff ff    	je     1024 <_ftoa+0x354>
    10e3:	48 39 c7             	cmp    %rax,%rdi
    10e6:	75 e8                	jne    10d0 <_ftoa+0x400>
    10e8:	c6 44 05 b0 2e       	movb   $0x2e,-0x50(%rbp,%rax,1)
    10ed:	48 8d 48 01          	lea    0x1(%rax),%rcx
    10f1:	e9 fc fd ff ff       	jmp    ef2 <_ftoa+0x222>
    10f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10fd:	00 00 00 
    1100:	4c 89 d0             	mov    %r10,%rax
    1103:	4c 89 d7             	mov    %r10,%rdi
    1106:	66 0f ef db          	pxor   %xmm3,%xmm3
    110a:	48 d1 e8             	shr    %rax
    110d:	83 e7 01             	and    $0x1,%edi
    1110:	48 09 f8             	or     %rdi,%rax
    1113:	f2 48 0f 2a d8       	cvtsi2sd %rax,%xmm3
    1118:	f2 0f 58 db          	addsd  %xmm3,%xmm3
    111c:	e9 86 fc ff ff       	jmp    da7 <_ftoa+0xd7>
    1121:	48 83 f9 20          	cmp    $0x20,%rcx
    1125:	0f 84 25 fe ff ff    	je     f50 <_ftoa+0x280>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1130:	41 f6 c5 04          	test   $0x4,%r13b
    1134:	75 1a                	jne    1150 <_ftoa+0x480>
    1136:	41 f6 c5 08          	test   $0x8,%r13b
    113a:	0f 84 10 fe ff ff    	je     f50 <_ftoa+0x280>
    1140:	c6 44 0d b0 20       	movb   $0x20,-0x50(%rbp,%rcx,1)
    1145:	48 83 c1 01          	add    $0x1,%rcx
    1149:	e9 02 fe ff ff       	jmp    f50 <_ftoa+0x280>
    114e:	66 90                	xchg   %ax,%ax
    1150:	c6 44 0d b0 2b       	movb   $0x2b,-0x50(%rbp,%rcx,1)
    1155:	48 83 c1 01          	add    $0x1,%rcx
    1159:	e9 f2 fd ff ff       	jmp    f50 <_ftoa+0x280>
    115e:	66 90                	xchg   %ax,%ax
    1160:	41 f6 c2 01          	test   $0x1,%r10b
    1164:	0f 84 72 fc ff ff    	je     ddc <_ftoa+0x10c>
    116a:	e9 d4 fe ff ff       	jmp    1043 <_ftoa+0x373>
    116f:	90                   	nop
    1170:	4c 89 d0             	mov    %r10,%rax
    1173:	4c 89 d7             	mov    %r10,%rdi
    1176:	66 0f ef c9          	pxor   %xmm1,%xmm1
    117a:	48 d1 e8             	shr    %rax
    117d:	83 e7 01             	and    $0x1,%edi
    1180:	48 09 f8             	or     %rdi,%rax
    1183:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1188:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    118c:	e9 3f fc ff ff       	jmp    dd0 <_ftoa+0x100>
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	41 8d 71 ff          	lea    -0x1(%r9),%esi
    119c:	49 89 f1             	mov    %rsi,%r9
    119f:	48 39 f1             	cmp    %rsi,%rcx
    11a2:	0f 82 7f fd ff ff    	jb     f27 <_ftoa+0x257>
    11a8:	e9 d2 fe ff ff       	jmp    107f <_ftoa+0x3af>
    11ad:	0f 1f 00             	nopl   (%rax)
    11b0:	48 89 f8             	mov    %rdi,%rax
    11b3:	e9 30 ff ff ff       	jmp    10e8 <_ftoa+0x418>
    11b8:	44 89 c0             	mov    %r8d,%eax
    11bb:	31 c9                	xor    %ecx,%ecx
    11bd:	f2 0f 10 14 c5 00 00 	movsd  0x0(,%rax,8),%xmm2
    11c4:	00 00 
			11c2: R_X86_64_32S	.rodata+0x4c0
    11c6:	e9 9b fb ff ff       	jmp    d66 <_ftoa+0x96>
    11cb:	45 85 c9             	test   %r9d,%r9d
    11ce:	0f 84 ab fe ff ff    	je     107f <_ftoa+0x3af>
    11d4:	e9 2f fd ff ff       	jmp    f08 <_ftoa+0x238>
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <_out_char>:
    11e0:	40 84 ff             	test   %dil,%dil
    11e3:	75 0b                	jne    11f0 <_out_char+0x10>
    11e5:	c3                   	ret    
    11e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11ed:	00 00 00 
    11f0:	40 0f be ff          	movsbl %dil,%edi
    11f4:	e9 00 00 00 00       	jmp    11f9 <_out_char+0x19>
			11f5: R_X86_64_PLT32	term_put_char-0x4
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <_out_fct>:
    1200:	40 84 ff             	test   %dil,%dil
    1203:	74 13                	je     1218 <_out_fct+0x18>
    1205:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    1209:	48 8b 06             	mov    (%rsi),%rax
    120c:	40 0f be ff          	movsbl %dil,%edi
    1210:	48 89 d6             	mov    %rdx,%rsi
    1213:	ff e0                	jmp    *%rax
    1215:	0f 1f 00             	nopl   (%rax)
    1218:	c3                   	ret    
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <_vsnprintf>:
    1220:	55                   	push   %rbp
    1221:	48 89 e5             	mov    %rsp,%rbp
    1224:	41 57                	push   %r15
    1226:	41 56                	push   %r14
    1228:	41 55                	push   %r13
    122a:	41 54                	push   %r12
    122c:	53                   	push   %rbx
    122d:	48 89 cb             	mov    %rcx,%rbx
    1230:	b9 00 00 00 00       	mov    $0x0,%ecx
			1231: R_X86_64_32	.text+0x430
    1235:	48 83 ec 48          	sub    $0x48,%rsp
    1239:	48 85 f6             	test   %rsi,%rsi
    123c:	48 0f 45 cf          	cmovne %rdi,%rcx
    1240:	45 31 ed             	xor    %r13d,%r13d
    1243:	49 89 cf             	mov    %rcx,%r15
    1246:	0f b6 0b             	movzbl (%rbx),%ecx
    1249:	84 c9                	test   %cl,%cl
    124b:	0f 84 b4 07 00 00    	je     1a05 <_vsnprintf+0x7e5>
    1251:	49 89 d6             	mov    %rdx,%r14
    1254:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    1258:	49 89 f4             	mov    %rsi,%r12
    125b:	4c 89 ea             	mov    %r13,%rdx
    125e:	eb 1e                	jmp    127e <_vsnprintf+0x5e>
    1260:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    1264:	0f be f9             	movsbl %cl,%edi
    1267:	4c 89 e6             	mov    %r12,%rsi
    126a:	4c 89 f1             	mov    %r14,%rcx
    126d:	41 ff d7             	call   *%r15
    1270:	4c 89 ea             	mov    %r13,%rdx
    1273:	0f b6 0b             	movzbl (%rbx),%ecx
    1276:	84 c9                	test   %cl,%cl
    1278:	0f 84 12 01 00 00    	je     1390 <_vsnprintf+0x170>
    127e:	48 83 c3 01          	add    $0x1,%rbx
    1282:	80 f9 25             	cmp    $0x25,%cl
    1285:	75 d9                	jne    1260 <_vsnprintf+0x40>
    1287:	31 ff                	xor    %edi,%edi
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1290:	0f be 03             	movsbl (%rbx),%eax
    1293:	48 8d 73 01          	lea    0x1(%rbx),%rsi
    1297:	8d 48 e0             	lea    -0x20(%rax),%ecx
    129a:	80 f9 10             	cmp    $0x10,%cl
    129d:	77 11                	ja     12b0 <_vsnprintf+0x90>
    129f:	0f b6 c9             	movzbl %cl,%ecx
    12a2:	ff 24 cd 00 00 00 00 	jmp    *0x0(,%rcx,8)
			12a5: R_X86_64_32S	.rodata+0x180
    12a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12b0:	8d 48 d0             	lea    -0x30(%rax),%ecx
    12b3:	80 f9 09             	cmp    $0x9,%cl
    12b6:	0f 86 0c 01 00 00    	jbe    13c8 <_vsnprintf+0x1a8>
    12bc:	45 31 c9             	xor    %r9d,%r9d
    12bf:	3c 2a                	cmp    $0x2a,%al
    12c1:	0f 84 89 01 00 00    	je     1450 <_vsnprintf+0x230>
    12c7:	45 31 c0             	xor    %r8d,%r8d
    12ca:	3c 2e                	cmp    $0x2e,%al
    12cc:	0f 84 25 01 00 00    	je     13f7 <_vsnprintf+0x1d7>
    12d2:	8d 48 98             	lea    -0x68(%rax),%ecx
    12d5:	80 f9 12             	cmp    $0x12,%cl
    12d8:	77 44                	ja     131e <_vsnprintf+0xfe>
    12da:	0f b6 c9             	movzbl %cl,%ecx
    12dd:	ff 24 cd 00 00 00 00 	jmp    *0x0(,%rcx,8)
			12e0: R_X86_64_32S	.rodata+0x208
    12e4:	0f 1f 40 00          	nopl   0x0(%rax)
    12e8:	83 cf 01             	or     $0x1,%edi
    12eb:	48 89 f3             	mov    %rsi,%rbx
    12ee:	eb a0                	jmp    1290 <_vsnprintf+0x70>
    12f0:	83 cf 02             	or     $0x2,%edi
    12f3:	eb f6                	jmp    12eb <_vsnprintf+0xcb>
    12f5:	0f 1f 00             	nopl   (%rax)
    12f8:	83 cf 04             	or     $0x4,%edi
    12fb:	eb ee                	jmp    12eb <_vsnprintf+0xcb>
    12fd:	0f 1f 00             	nopl   (%rax)
    1300:	83 cf 10             	or     $0x10,%edi
    1303:	eb e6                	jmp    12eb <_vsnprintf+0xcb>
    1305:	0f 1f 00             	nopl   (%rax)
    1308:	83 cf 08             	or     $0x8,%edi
    130b:	eb de                	jmp    12eb <_vsnprintf+0xcb>
    130d:	0f 1f 00             	nopl   (%rax)
    1310:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    1314:	81 cf 00 01 00 00    	or     $0x100,%edi
    131a:	48 83 c6 01          	add    $0x1,%rsi
    131e:	48 89 f3             	mov    %rsi,%rbx
    1321:	3c 67                	cmp    $0x67,%al
    1323:	7f 1b                	jg     1340 <_vsnprintf+0x120>
    1325:	3c 24                	cmp    $0x24,%al
    1327:	7e 45                	jle    136e <_vsnprintf+0x14e>
    1329:	8d 48 db             	lea    -0x25(%rax),%ecx
    132c:	80 f9 42             	cmp    $0x42,%cl
    132f:	77 3d                	ja     136e <_vsnprintf+0x14e>
    1331:	0f b6 c9             	movzbl %cl,%ecx
    1334:	ff 24 cd 00 00 00 00 	jmp    *0x0(,%rcx,8)
			1337: R_X86_64_32S	.rodata+0x2a0
    133b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1340:	8d 48 97             	lea    -0x69(%rax),%ecx
    1343:	80 f9 0f             	cmp    $0xf,%cl
    1346:	77 26                	ja     136e <_vsnprintf+0x14e>
    1348:	be 01 00 00 00       	mov    $0x1,%esi
    134d:	48 d3 e6             	shl    %cl,%rsi
    1350:	f7 c6 41 90 00 00    	test   $0x9041,%esi
    1356:	0f 85 d4 05 00 00    	jne    1930 <_vsnprintf+0x710>
    135c:	80 f9 0a             	cmp    $0xa,%cl
    135f:	0f 84 17 03 00 00    	je     167c <_vsnprintf+0x45c>
    1365:	80 f9 07             	cmp    $0x7,%cl
    1368:	0f 84 c7 02 00 00    	je     1635 <_vsnprintf+0x415>
    136e:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    1372:	0f be f8             	movsbl %al,%edi
    1375:	4c 89 f1             	mov    %r14,%rcx
    1378:	4c 89 e6             	mov    %r12,%rsi
    137b:	41 ff d7             	call   *%r15
    137e:	0f b6 0b             	movzbl (%rbx),%ecx
    1381:	4c 89 ea             	mov    %r13,%rdx
    1384:	84 c9                	test   %cl,%cl
    1386:	0f 85 f2 fe ff ff    	jne    127e <_vsnprintf+0x5e>
    138c:	0f 1f 40 00          	nopl   0x0(%rax)
    1390:	49 89 d5             	mov    %rdx,%r13
    1393:	4c 89 e6             	mov    %r12,%rsi
    1396:	4c 89 f2             	mov    %r14,%rdx
    1399:	44 89 eb             	mov    %r13d,%ebx
    139c:	49 39 d5             	cmp    %rdx,%r13
    139f:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    13a3:	4c 0f 43 e9          	cmovae %rcx,%r13
    13a7:	48 89 d1             	mov    %rdx,%rcx
    13aa:	31 ff                	xor    %edi,%edi
    13ac:	4c 89 ea             	mov    %r13,%rdx
    13af:	41 ff d7             	call   *%r15
    13b2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    13b6:	89 d8                	mov    %ebx,%eax
    13b8:	5b                   	pop    %rbx
    13b9:	41 5c                	pop    %r12
    13bb:	41 5d                	pop    %r13
    13bd:	41 5e                	pop    %r14
    13bf:	41 5f                	pop    %r15
    13c1:	5d                   	pop    %rbp
    13c2:	c3                   	ret    
    13c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    13c8:	45 31 c9             	xor    %r9d,%r9d
    13cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    13d0:	43 8d 0c 89          	lea    (%r9,%r9,4),%ecx
    13d4:	48 89 f3             	mov    %rsi,%rbx
    13d7:	48 83 c6 01          	add    $0x1,%rsi
    13db:	44 8d 4c 48 d0       	lea    -0x30(%rax,%rcx,2),%r9d
    13e0:	0f be 46 ff          	movsbl -0x1(%rsi),%eax
    13e4:	8d 48 d0             	lea    -0x30(%rax),%ecx
    13e7:	80 f9 09             	cmp    $0x9,%cl
    13ea:	76 e4                	jbe    13d0 <_vsnprintf+0x1b0>
    13ec:	45 31 c0             	xor    %r8d,%r8d
    13ef:	3c 2e                	cmp    $0x2e,%al
    13f1:	0f 85 db fe ff ff    	jne    12d2 <_vsnprintf+0xb2>
    13f7:	0f be 43 01          	movsbl 0x1(%rbx),%eax
    13fb:	48 89 f1             	mov    %rsi,%rcx
    13fe:	81 cf 00 04 00 00    	or     $0x400,%edi
    1404:	44 8d 58 d0          	lea    -0x30(%rax),%r11d
    1408:	41 80 fb 09          	cmp    $0x9,%r11b
    140c:	76 1a                	jbe    1428 <_vsnprintf+0x208>
    140e:	3c 2a                	cmp    $0x2a,%al
    1410:	0f 84 cd 03 00 00    	je     17e3 <_vsnprintf+0x5c3>
    1416:	48 89 f3             	mov    %rsi,%rbx
    1419:	48 83 c6 01          	add    $0x1,%rsi
    141d:	e9 b0 fe ff ff       	jmp    12d2 <_vsnprintf+0xb2>
    1422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1428:	43 8d 34 80          	lea    (%r8,%r8,4),%esi
    142c:	48 83 c1 01          	add    $0x1,%rcx
    1430:	44 8d 44 70 d0       	lea    -0x30(%rax,%rsi,2),%r8d
    1435:	0f be 01             	movsbl (%rcx),%eax
    1438:	8d 70 d0             	lea    -0x30(%rax),%esi
    143b:	40 80 fe 09          	cmp    $0x9,%sil
    143f:	76 e7                	jbe    1428 <_vsnprintf+0x208>
    1441:	48 89 cb             	mov    %rcx,%rbx
    1444:	48 8d 71 01          	lea    0x1(%rcx),%rsi
    1448:	e9 85 fe ff ff       	jmp    12d2 <_vsnprintf+0xb2>
    144d:	0f 1f 00             	nopl   (%rax)
    1450:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1454:	41 8b 02             	mov    (%r10),%eax
    1457:	83 f8 2f             	cmp    $0x2f,%eax
    145a:	77 34                	ja     1490 <_vsnprintf+0x270>
    145c:	89 c1                	mov    %eax,%ecx
    145e:	83 c0 08             	add    $0x8,%eax
    1461:	49 03 4a 10          	add    0x10(%r10),%rcx
    1465:	41 89 02             	mov    %eax,(%r10)
    1468:	44 8b 09             	mov    (%rcx),%r9d
    146b:	45 85 c9             	test   %r9d,%r9d
    146e:	79 06                	jns    1476 <_vsnprintf+0x256>
    1470:	83 cf 02             	or     $0x2,%edi
    1473:	41 f7 d9             	neg    %r9d
    1476:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    147a:	48 89 f3             	mov    %rsi,%rbx
    147d:	48 83 c6 01          	add    $0x1,%rsi
    1481:	e9 41 fe ff ff       	jmp    12c7 <_vsnprintf+0xa7>
    1486:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    148d:	00 00 00 
    1490:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1494:	49 8b 4b 08          	mov    0x8(%r11),%rcx
    1498:	48 8d 41 08          	lea    0x8(%rcx),%rax
    149c:	49 89 43 08          	mov    %rax,0x8(%r11)
    14a0:	eb c6                	jmp    1468 <_vsnprintf+0x248>
    14a2:	89 c6                	mov    %eax,%esi
    14a4:	89 f9                	mov    %edi,%ecx
    14a6:	83 e6 df             	and    $0xffffffdf,%esi
    14a9:	80 cd 08             	or     $0x8,%ch
    14ac:	40 80 fe 47          	cmp    $0x47,%sil
    14b0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    14b4:	0f 44 f9             	cmove  %ecx,%edi
    14b7:	83 e0 fd             	and    $0xfffffffd,%eax
    14ba:	89 f9                	mov    %edi,%ecx
    14bc:	83 c9 20             	or     $0x20,%ecx
    14bf:	3c 45                	cmp    $0x45,%al
    14c1:	8b 46 04             	mov    0x4(%rsi),%eax
    14c4:	0f 44 f9             	cmove  %ecx,%edi
    14c7:	3d af 00 00 00       	cmp    $0xaf,%eax
    14cc:	0f 87 87 03 00 00    	ja     1859 <_vsnprintf+0x639>
    14d2:	89 c1                	mov    %eax,%ecx
    14d4:	83 c0 10             	add    $0x10,%eax
    14d7:	48 03 4e 10          	add    0x10(%rsi),%rcx
    14db:	89 46 04             	mov    %eax,0x4(%rsi)
    14de:	48 83 ec 08          	sub    $0x8,%rsp
    14e2:	f2 0f 10 01          	movsd  (%rcx),%xmm0
    14e6:	4c 89 e6             	mov    %r12,%rsi
    14e9:	4c 89 f1             	mov    %r14,%rcx
    14ec:	57                   	push   %rdi
    14ed:	4c 89 ff             	mov    %r15,%rdi
    14f0:	e8 0b f4 ff ff       	call   900 <_etoa>
    14f5:	59                   	pop    %rcx
    14f6:	5e                   	pop    %rsi
    14f7:	48 89 c2             	mov    %rax,%rdx
    14fa:	e9 74 fd ff ff       	jmp    1273 <_vsnprintf+0x53>
    14ff:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    1503:	3c 6c                	cmp    $0x6c,%al
    1505:	0f 84 ce 04 00 00    	je     19d9 <_vsnprintf+0x7b9>
    150b:	81 cf 00 01 00 00    	or     $0x100,%edi
    1511:	48 83 c6 01          	add    $0x1,%rsi
    1515:	e9 04 fe ff ff       	jmp    131e <_vsnprintf+0xfe>
    151a:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
    151e:	3c 68                	cmp    $0x68,%al
    1520:	0f 84 a2 04 00 00    	je     19c8 <_vsnprintf+0x7a8>
    1526:	40 80 cf 80          	or     $0x80,%dil
    152a:	48 83 c6 01          	add    $0x1,%rsi
    152e:	e9 eb fd ff ff       	jmp    131e <_vsnprintf+0xfe>
    1533:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1537:	89 f9                	mov    %edi,%ecx
    1539:	83 c9 20             	or     $0x20,%ecx
    153c:	3c 46                	cmp    $0x46,%al
    153e:	8b 46 04             	mov    0x4(%rsi),%eax
    1541:	0f 44 f9             	cmove  %ecx,%edi
    1544:	3d af 00 00 00       	cmp    $0xaf,%eax
    1549:	0f 87 1f 03 00 00    	ja     186e <_vsnprintf+0x64e>
    154f:	89 c1                	mov    %eax,%ecx
    1551:	83 c0 10             	add    $0x10,%eax
    1554:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1558:	89 46 04             	mov    %eax,0x4(%rsi)
    155b:	48 83 ec 08          	sub    $0x8,%rsp
    155f:	f2 0f 10 01          	movsd  (%rcx),%xmm0
    1563:	4c 89 e6             	mov    %r12,%rsi
    1566:	4c 89 f1             	mov    %r14,%rcx
    1569:	57                   	push   %rdi
    156a:	4c 89 ff             	mov    %r15,%rdi
    156d:	e8 5e f7 ff ff       	call   cd0 <_ftoa>
    1572:	5f                   	pop    %rdi
    1573:	41 58                	pop    %r8
    1575:	48 89 c2             	mov    %rax,%rdx
    1578:	e9 f6 fc ff ff       	jmp    1273 <_vsnprintf+0x53>
    157d:	83 e7 02             	and    $0x2,%edi
    1580:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    1587:	89 7d b8             	mov    %edi,-0x48(%rbp)
    158a:	0f 84 3a 05 00 00    	je     1aca <_vsnprintf+0x8aa>
    1590:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1594:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    1598:	8b 08                	mov    (%rax),%ecx
    159a:	83 f9 2f             	cmp    $0x2f,%ecx
    159d:	0f 87 8c 02 00 00    	ja     182f <_vsnprintf+0x60f>
    15a3:	89 ce                	mov    %ecx,%esi
    15a5:	83 c1 08             	add    $0x8,%ecx
    15a8:	48 03 70 10          	add    0x10(%rax),%rsi
    15ac:	89 08                	mov    %ecx,(%rax)
    15ae:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
    15b2:	0f be 3e             	movsbl (%rsi),%edi
    15b5:	4c 89 f1             	mov    %r14,%rcx
    15b8:	4c 89 e6             	mov    %r12,%rsi
    15bb:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    15bf:	41 ff d7             	call   *%r15
    15c2:	8b 55 b8             	mov    -0x48(%rbp),%edx
    15c5:	44 8b 4d b0          	mov    -0x50(%rbp),%r9d
    15c9:	85 d2                	test   %edx,%edx
    15cb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    15cf:	0f 84 a9 fd ff ff    	je     137e <_vsnprintf+0x15e>
    15d5:	8b 45 a8             	mov    -0x58(%rbp),%eax
    15d8:	44 39 c8             	cmp    %r9d,%eax
    15db:	0f 83 9d fd ff ff    	jae    137e <_vsnprintf+0x15e>
    15e1:	41 83 e9 01          	sub    $0x1,%r9d
    15e5:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
    15e9:	41 29 c1             	sub    %eax,%r9d
    15ec:	4a 8d 44 0a 02       	lea    0x2(%rdx,%r9,1),%rax
    15f1:	48 89 c3             	mov    %rax,%rbx
    15f4:	0f 1f 40 00          	nopl   0x0(%rax)
    15f8:	4c 89 ea             	mov    %r13,%rdx
    15fb:	49 83 c5 01          	add    $0x1,%r13
    15ff:	4c 89 f1             	mov    %r14,%rcx
    1602:	4c 89 e6             	mov    %r12,%rsi
    1605:	bf 20 00 00 00       	mov    $0x20,%edi
    160a:	41 ff d7             	call   *%r15
    160d:	49 39 dd             	cmp    %rbx,%r13
    1610:	75 e6                	jne    15f8 <_vsnprintf+0x3d8>
    1612:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    1616:	e9 63 fd ff ff       	jmp    137e <_vsnprintf+0x15e>
    161b:	4c 8d 6a 01          	lea    0x1(%rdx),%r13
    161f:	4c 89 f1             	mov    %r14,%rcx
    1622:	4c 89 e6             	mov    %r12,%rsi
    1625:	bf 25 00 00 00       	mov    $0x25,%edi
    162a:	41 ff d7             	call   *%r15
    162d:	4c 89 ea             	mov    %r13,%rdx
    1630:	e9 3e fc ff ff       	jmp    1273 <_vsnprintf+0x53>
    1635:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1639:	83 cf 21             	or     $0x21,%edi
    163c:	8b 06                	mov    (%rsi),%eax
    163e:	83 f8 2f             	cmp    $0x2f,%eax
    1641:	0f 87 d3 01 00 00    	ja     181a <_vsnprintf+0x5fa>
    1647:	89 c1                	mov    %eax,%ecx
    1649:	83 c0 08             	add    $0x8,%eax
    164c:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1650:	89 06                	mov    %eax,(%rsi)
    1652:	48 8b 01             	mov    (%rcx),%rax
    1655:	57                   	push   %rdi
    1656:	6a 10                	push   $0x10
    1658:	41 50                	push   %r8
    165a:	6a 10                	push   $0x10
    165c:	45 31 c9             	xor    %r9d,%r9d
    165f:	49 89 c0             	mov    %rax,%r8
    1662:	4c 89 f1             	mov    %r14,%rcx
    1665:	4c 89 e6             	mov    %r12,%rsi
    1668:	4c 89 ff             	mov    %r15,%rdi
    166b:	e8 d0 ee ff ff       	call   540 <_ntoa_long>
    1670:	48 83 c4 20          	add    $0x20,%rsp
    1674:	48 89 c2             	mov    %rax,%rdx
    1677:	e9 f7 fb ff ff       	jmp    1273 <_vsnprintf+0x53>
    167c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1680:	8b 06                	mov    (%rsi),%eax
    1682:	83 f8 2f             	cmp    $0x2f,%eax
    1685:	0f 87 b9 01 00 00    	ja     1844 <_vsnprintf+0x624>
    168b:	89 c1                	mov    %eax,%ecx
    168d:	83 c0 08             	add    $0x8,%eax
    1690:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1694:	89 06                	mov    %eax,(%rsi)
    1696:	4c 8b 29             	mov    (%rcx),%r13
    1699:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    16a0:	44 89 c6             	mov    %r8d,%esi
    16a3:	45 85 c0             	test   %r8d,%r8d
    16a6:	48 0f 44 f0          	cmove  %rax,%rsi
    16aa:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    16af:	84 c0                	test   %al,%al
    16b1:	0f 84 2f 06 00 00    	je     1ce6 <_vsnprintf+0xac6>
    16b7:	4c 01 ee             	add    %r13,%rsi
    16ba:	4c 89 e9             	mov    %r13,%rcx
    16bd:	eb 0a                	jmp    16c9 <_vsnprintf+0x4a9>
    16bf:	90                   	nop
    16c0:	48 39 ce             	cmp    %rcx,%rsi
    16c3:	0f 84 23 03 00 00    	je     19ec <_vsnprintf+0x7cc>
    16c9:	48 83 c1 01          	add    $0x1,%rcx
    16cd:	80 39 00             	cmpb   $0x0,(%rcx)
    16d0:	75 ee                	jne    16c0 <_vsnprintf+0x4a0>
    16d2:	89 ce                	mov    %ecx,%esi
    16d4:	44 29 ee             	sub    %r13d,%esi
    16d7:	44 39 c6             	cmp    %r8d,%esi
    16da:	44 89 c1             	mov    %r8d,%ecx
    16dd:	41 89 fa             	mov    %edi,%r10d
    16e0:	0f 46 ce             	cmovbe %esi,%ecx
    16e3:	41 81 e2 00 04 00 00 	and    $0x400,%r10d
    16ea:	44 89 55 b8          	mov    %r10d,-0x48(%rbp)
    16ee:	0f 45 f1             	cmovne %ecx,%esi
    16f1:	83 e7 02             	and    $0x2,%edi
    16f4:	89 7d a8             	mov    %edi,-0x58(%rbp)
    16f7:	0f 84 4c 03 00 00    	je     1a49 <_vsnprintf+0x829>
    16fd:	84 c0                	test   %al,%al
    16ff:	0f 84 84 00 00 00    	je     1789 <_vsnprintf+0x569>
    1705:	49 29 d5             	sub    %rdx,%r13
    1708:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    170c:	44 8b 65 b8          	mov    -0x48(%rbp),%r12d
    1710:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    1714:	44 89 c3             	mov    %r8d,%ebx
    1717:	4c 89 75 b8          	mov    %r14,-0x48(%rbp)
    171b:	49 89 d6             	mov    %rdx,%r14
    171e:	4c 89 6d b0          	mov    %r13,-0x50(%rbp)
    1722:	89 75 a4             	mov    %esi,-0x5c(%rbp)
    1725:	44 89 4d a0          	mov    %r9d,-0x60(%rbp)
    1729:	eb 08                	jmp    1733 <_vsnprintf+0x513>
    172b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1730:	4d 89 ee             	mov    %r13,%r14
    1733:	45 85 e4             	test   %r12d,%r12d
    1736:	74 0d                	je     1745 <_vsnprintf+0x525>
    1738:	8d 4b ff             	lea    -0x1(%rbx),%ecx
    173b:	85 db                	test   %ebx,%ebx
    173d:	0f 84 d3 02 00 00    	je     1a16 <_vsnprintf+0x7f6>
    1743:	89 cb                	mov    %ecx,%ebx
    1745:	0f be f8             	movsbl %al,%edi
    1748:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    174c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1750:	4c 89 f2             	mov    %r14,%rdx
    1753:	41 ff d7             	call   *%r15
    1756:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    175a:	4d 8d 6e 01          	lea    0x1(%r14),%r13
    175e:	41 0f b6 44 06 01    	movzbl 0x1(%r14,%rax,1),%eax
    1764:	84 c0                	test   %al,%al
    1766:	75 c8                	jne    1730 <_vsnprintf+0x510>
    1768:	8b 75 a4             	mov    -0x5c(%rbp),%esi
    176b:	44 8b 4d a0          	mov    -0x60(%rbp),%r9d
    176f:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    1773:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    1777:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    177b:	8b 45 a8             	mov    -0x58(%rbp),%eax
    177e:	85 c0                	test   %eax,%eax
    1780:	0f 84 f8 fb ff ff    	je     137e <_vsnprintf+0x15e>
    1786:	4c 89 ea             	mov    %r13,%rdx
    1789:	44 39 ce             	cmp    %r9d,%esi
    178c:	0f 83 30 03 00 00    	jae    1ac2 <_vsnprintf+0x8a2>
    1792:	41 83 e9 01          	sub    $0x1,%r9d
    1796:	48 8d 42 01          	lea    0x1(%rdx),%rax
    179a:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    179e:	41 29 f1             	sub    %esi,%r9d
    17a1:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
    17a5:	49 89 c4             	mov    %rax,%r12
    17a8:	48 89 d3             	mov    %rdx,%rbx
    17ab:	4d 8d 2c 01          	lea    (%r9,%rax,1),%r13
    17af:	eb 0b                	jmp    17bc <_vsnprintf+0x59c>
    17b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    17b8:	49 83 c4 01          	add    $0x1,%r12
    17bc:	48 89 da             	mov    %rbx,%rdx
    17bf:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    17c3:	4c 89 e3             	mov    %r12,%rbx
    17c6:	4c 89 f1             	mov    %r14,%rcx
    17c9:	bf 20 00 00 00       	mov    $0x20,%edi
    17ce:	41 ff d7             	call   *%r15
    17d1:	4d 39 ec             	cmp    %r13,%r12
    17d4:	75 e2                	jne    17b8 <_vsnprintf+0x598>
    17d6:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    17da:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    17de:	e9 9b fb ff ff       	jmp    137e <_vsnprintf+0x15e>
    17e3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    17e7:	8b 06                	mov    (%rsi),%eax
    17e9:	83 f8 2f             	cmp    $0x2f,%eax
    17ec:	0f 87 42 02 00 00    	ja     1a34 <_vsnprintf+0x814>
    17f2:	89 c1                	mov    %eax,%ecx
    17f4:	83 c0 08             	add    $0x8,%eax
    17f7:	48 03 4e 10          	add    0x10(%rsi),%rcx
    17fb:	89 06                	mov    %eax,(%rsi)
    17fd:	44 8b 01             	mov    (%rcx),%r8d
    1800:	31 c0                	xor    %eax,%eax
    1802:	45 85 c0             	test   %r8d,%r8d
    1805:	44 0f 48 c0          	cmovs  %eax,%r8d
    1809:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
    180d:	48 83 c3 02          	add    $0x2,%rbx
    1811:	48 8d 73 01          	lea    0x1(%rbx),%rsi
    1815:	e9 b8 fa ff ff       	jmp    12d2 <_vsnprintf+0xb2>
    181a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    181e:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1822:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1826:	48 89 46 08          	mov    %rax,0x8(%rsi)
    182a:	e9 23 fe ff ff       	jmp    1652 <_vsnprintf+0x432>
    182f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1833:	48 8b 70 08          	mov    0x8(%rax),%rsi
    1837:	48 8d 4e 08          	lea    0x8(%rsi),%rcx
    183b:	48 89 48 08          	mov    %rcx,0x8(%rax)
    183f:	e9 6a fd ff ff       	jmp    15ae <_vsnprintf+0x38e>
    1844:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1848:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    184c:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1850:	48 89 46 08          	mov    %rax,0x8(%rsi)
    1854:	e9 3d fe ff ff       	jmp    1696 <_vsnprintf+0x476>
    1859:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    185d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1861:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1865:	48 89 46 08          	mov    %rax,0x8(%rsi)
    1869:	e9 70 fc ff ff       	jmp    14de <_vsnprintf+0x2be>
    186e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1872:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1876:	48 8d 41 08          	lea    0x8(%rcx),%rax
    187a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    187e:	e9 d8 fc ff ff       	jmp    155b <_vsnprintf+0x33b>
    1883:	89 c1                	mov    %eax,%ecx
    1885:	83 e1 df             	and    $0xffffffdf,%ecx
    1888:	80 f9 58             	cmp    $0x58,%cl
    188b:	0f 84 63 01 00 00    	je     19f4 <_vsnprintf+0x7d4>
    1891:	3c 62                	cmp    $0x62,%al
    1893:	0f 84 98 02 00 00    	je     1b31 <_vsnprintf+0x911>
    1899:	83 e7 ef             	and    $0xffffffef,%edi
    189c:	be 0a 00 00 00       	mov    $0xa,%esi
    18a1:	3c 69                	cmp    $0x69,%al
    18a3:	74 0b                	je     18b0 <_vsnprintf+0x690>
    18a5:	3c 64                	cmp    $0x64,%al
    18a7:	0f 85 9e 00 00 00    	jne    194b <_vsnprintf+0x72b>
    18ad:	0f 1f 00             	nopl   (%rax)
    18b0:	89 f9                	mov    %edi,%ecx
    18b2:	83 e1 fe             	and    $0xfffffffe,%ecx
    18b5:	f7 c7 00 04 00 00    	test   $0x400,%edi
    18bb:	0f 45 f9             	cmovne %ecx,%edi
    18be:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    18c2:	41 89 fb             	mov    %edi,%r11d
    18c5:	8b 09                	mov    (%rcx),%ecx
    18c7:	41 81 e3 00 02 00 00 	and    $0x200,%r11d
    18ce:	3c 69                	cmp    $0x69,%al
    18d0:	0f 84 7d 00 00 00    	je     1953 <_vsnprintf+0x733>
    18d6:	3c 64                	cmp    $0x64,%al
    18d8:	74 79                	je     1953 <_vsnprintf+0x733>
    18da:	45 85 db             	test   %r11d,%r11d
    18dd:	0f 85 d2 02 00 00    	jne    1bb5 <_vsnprintf+0x995>
    18e3:	f7 c7 00 01 00 00    	test   $0x100,%edi
    18e9:	0f 85 25 03 00 00    	jne    1c14 <_vsnprintf+0x9f4>
    18ef:	40 f6 c7 40          	test   $0x40,%dil
    18f3:	0f 85 63 02 00 00    	jne    1b5c <_vsnprintf+0x93c>
    18f9:	40 f6 c7 80          	test   $0x80,%dil
    18fd:	0f 84 7d 03 00 00    	je     1c80 <_vsnprintf+0xa60>
    1903:	83 f9 2f             	cmp    $0x2f,%ecx
    1906:	0f 87 4d 04 00 00    	ja     1d59 <_vsnprintf+0xb39>
    190c:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1910:	89 c8                	mov    %ecx,%eax
    1912:	83 c1 08             	add    $0x8,%ecx
    1915:	41 89 0b             	mov    %ecx,(%r11)
    1918:	49 03 43 10          	add    0x10(%r11),%rax
    191c:	0f b7 00             	movzwl (%rax),%eax
    191f:	57                   	push   %rdi
    1920:	41 51                	push   %r9
    1922:	45 31 c9             	xor    %r9d,%r9d
    1925:	41 50                	push   %r8
    1927:	41 89 c0             	mov    %eax,%r8d
    192a:	56                   	push   %rsi
    192b:	e9 7e 00 00 00       	jmp    19ae <_vsnprintf+0x78e>
    1930:	89 c1                	mov    %eax,%ecx
    1932:	83 e1 df             	and    $0xffffffdf,%ecx
    1935:	80 f9 58             	cmp    $0x58,%cl
    1938:	0f 84 ce 00 00 00    	je     1a0c <_vsnprintf+0x7ec>
    193e:	be 08 00 00 00       	mov    $0x8,%esi
    1943:	3c 6f                	cmp    $0x6f,%al
    1945:	0f 85 4e ff ff ff    	jne    1899 <_vsnprintf+0x679>
    194b:	83 e7 f3             	and    $0xfffffff3,%edi
    194e:	e9 5d ff ff ff       	jmp    18b0 <_vsnprintf+0x690>
    1953:	45 85 db             	test   %r11d,%r11d
    1956:	0f 85 21 02 00 00    	jne    1b7d <_vsnprintf+0x95d>
    195c:	f7 c7 00 01 00 00    	test   $0x100,%edi
    1962:	0f 85 74 02 00 00    	jne    1bdc <_vsnprintf+0x9bc>
    1968:	40 f6 c7 40          	test   $0x40,%dil
    196c:	0f 85 c9 01 00 00    	jne    1b3b <_vsnprintf+0x91b>
    1972:	40 f6 c7 80          	test   $0x80,%dil
    1976:	0f 84 24 03 00 00    	je     1ca0 <_vsnprintf+0xa80>
    197c:	83 f9 2f             	cmp    $0x2f,%ecx
    197f:	0f 87 a8 03 00 00    	ja     1d2d <_vsnprintf+0xb0d>
    1985:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1989:	89 c8                	mov    %ecx,%eax
    198b:	83 c1 08             	add    $0x8,%ecx
    198e:	41 89 0a             	mov    %ecx,(%r10)
    1991:	49 03 42 10          	add    0x10(%r10),%rax
    1995:	0f bf 00             	movswl (%rax),%eax
    1998:	89 c1                	mov    %eax,%ecx
    199a:	57                   	push   %rdi
    199b:	f7 d9                	neg    %ecx
    199d:	41 51                	push   %r9
    199f:	0f 48 c8             	cmovs  %eax,%ecx
    19a2:	41 50                	push   %r8
    19a4:	c1 e8 1f             	shr    $0x1f,%eax
    19a7:	56                   	push   %rsi
    19a8:	41 89 c1             	mov    %eax,%r9d
    19ab:	4c 63 c1             	movslq %ecx,%r8
    19ae:	4c 89 f1             	mov    %r14,%rcx
    19b1:	4c 89 e6             	mov    %r12,%rsi
    19b4:	4c 89 ff             	mov    %r15,%rdi
    19b7:	e8 84 eb ff ff       	call   540 <_ntoa_long>
    19bc:	48 83 c4 20          	add    $0x20,%rsp
    19c0:	48 89 c2             	mov    %rax,%rdx
    19c3:	e9 ab f8 ff ff       	jmp    1273 <_vsnprintf+0x53>
    19c8:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
    19cc:	40 80 cf c0          	or     $0xc0,%dil
    19d0:	48 8d 73 03          	lea    0x3(%rbx),%rsi
    19d4:	e9 45 f9 ff ff       	jmp    131e <_vsnprintf+0xfe>
    19d9:	0f b6 43 02          	movzbl 0x2(%rbx),%eax
    19dd:	81 cf 00 03 00 00    	or     $0x300,%edi
    19e3:	48 8d 73 03          	lea    0x3(%rbx),%rsi
    19e7:	e9 32 f9 ff ff       	jmp    131e <_vsnprintf+0xfe>
    19ec:	44 29 ee             	sub    %r13d,%esi
    19ef:	e9 e3 fc ff ff       	jmp    16d7 <_vsnprintf+0x4b7>
    19f4:	3c 58                	cmp    $0x58,%al
    19f6:	75 14                	jne    1a0c <_vsnprintf+0x7ec>
    19f8:	83 cf 20             	or     $0x20,%edi
    19fb:	be 10 00 00 00       	mov    $0x10,%esi
    1a00:	e9 46 ff ff ff       	jmp    194b <_vsnprintf+0x72b>
    1a05:	31 db                	xor    %ebx,%ebx
    1a07:	e9 90 f9 ff ff       	jmp    139c <_vsnprintf+0x17c>
    1a0c:	be 10 00 00 00       	mov    $0x10,%esi
    1a11:	e9 35 ff ff ff       	jmp    194b <_vsnprintf+0x72b>
    1a16:	4c 89 f2             	mov    %r14,%rdx
    1a19:	8b 75 a4             	mov    -0x5c(%rbp),%esi
    1a1c:	44 8b 4d a0          	mov    -0x60(%rbp),%r9d
    1a20:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    1a24:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    1a28:	49 89 d5             	mov    %rdx,%r13
    1a2b:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    1a2f:	e9 47 fd ff ff       	jmp    177b <_vsnprintf+0x55b>
    1a34:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1a38:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    1a3c:	48 8d 41 08          	lea    0x8(%rcx),%rax
    1a40:	48 89 46 08          	mov    %rax,0x8(%rsi)
    1a44:	e9 b4 fd ff ff       	jmp    17fd <_vsnprintf+0x5dd>
    1a49:	44 39 ce             	cmp    %r9d,%esi
    1a4c:	0f 83 bc 02 00 00    	jae    1d0e <_vsnprintf+0xaee>
    1a52:	41 8d 49 ff          	lea    -0x1(%r9),%ecx
    1a56:	48 8d 42 01          	lea    0x1(%rdx),%rax
    1a5a:	4c 89 6d b0          	mov    %r13,-0x50(%rbp)
    1a5e:	29 f1                	sub    %esi,%ecx
    1a60:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    1a64:	49 89 c5             	mov    %rax,%r13
    1a67:	48 89 d3             	mov    %rdx,%rbx
    1a6a:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
    1a6e:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
    1a72:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    1a76:	44 89 45 a0          	mov    %r8d,-0x60(%rbp)
    1a7a:	eb 08                	jmp    1a84 <_vsnprintf+0x864>
    1a7c:	0f 1f 40 00          	nopl   0x0(%rax)
    1a80:	49 83 c5 01          	add    $0x1,%r13
    1a84:	48 89 da             	mov    %rbx,%rdx
    1a87:	4c 89 f1             	mov    %r14,%rcx
    1a8a:	4c 89 eb             	mov    %r13,%rbx
    1a8d:	4c 89 e6             	mov    %r12,%rsi
    1a90:	bf 20 00 00 00       	mov    $0x20,%edi
    1a95:	41 ff d7             	call   *%r15
    1a98:	4c 39 6d c0          	cmp    %r13,-0x40(%rbp)
    1a9c:	75 e2                	jne    1a80 <_vsnprintf+0x860>
    1a9e:	4c 8b 6d b0          	mov    -0x50(%rbp),%r13
    1aa2:	44 8b 4d a4          	mov    -0x5c(%rbp),%r9d
    1aa6:	48 89 da             	mov    %rbx,%rdx
    1aa9:	44 8b 45 a0          	mov    -0x60(%rbp),%r8d
    1aad:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    1ab1:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    1ab6:	41 8d 71 01          	lea    0x1(%r9),%esi
    1aba:	84 c0                	test   %al,%al
    1abc:	0f 85 43 fc ff ff    	jne    1705 <_vsnprintf+0x4e5>
    1ac2:	49 89 d5             	mov    %rdx,%r13
    1ac5:	e9 b4 f8 ff ff       	jmp    137e <_vsnprintf+0x15e>
    1aca:	41 83 f9 01          	cmp    $0x1,%r9d
    1ace:	0f 86 2e 02 00 00    	jbe    1d02 <_vsnprintf+0xae2>
    1ad4:	48 8d 42 01          	lea    0x1(%rdx),%rax
    1ad8:	45 8d 69 fe          	lea    -0x2(%r9),%r13d
    1adc:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    1ae0:	48 89 d3             	mov    %rdx,%rbx
    1ae3:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
    1ae7:	49 01 c5             	add    %rax,%r13
    1aea:	49 89 c4             	mov    %rax,%r12
    1aed:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    1af1:	eb 09                	jmp    1afc <_vsnprintf+0x8dc>
    1af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1af8:	49 83 c4 01          	add    $0x1,%r12
    1afc:	48 89 da             	mov    %rbx,%rdx
    1aff:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    1b03:	4c 89 e3             	mov    %r12,%rbx
    1b06:	4c 89 f1             	mov    %r14,%rcx
    1b09:	bf 20 00 00 00       	mov    $0x20,%edi
    1b0e:	41 ff d7             	call   *%r15
    1b11:	4d 39 ec             	cmp    %r13,%r12
    1b14:	75 e2                	jne    1af8 <_vsnprintf+0x8d8>
    1b16:	44 8b 4d b0          	mov    -0x50(%rbp),%r9d
    1b1a:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    1b1e:	4c 89 e2             	mov    %r12,%rdx
    1b21:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    1b25:	41 8d 41 01          	lea    0x1(%r9),%eax
    1b29:	89 45 a8             	mov    %eax,-0x58(%rbp)
    1b2c:	e9 5f fa ff ff       	jmp    1590 <_vsnprintf+0x370>
    1b31:	be 02 00 00 00       	mov    $0x2,%esi
    1b36:	e9 10 fe ff ff       	jmp    194b <_vsnprintf+0x72b>
    1b3b:	83 f9 2f             	cmp    $0x2f,%ecx
    1b3e:	0f 87 78 01 00 00    	ja     1cbc <_vsnprintf+0xa9c>
    1b44:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1b48:	89 c8                	mov    %ecx,%eax
    1b4a:	83 c1 08             	add    $0x8,%ecx
    1b4d:	41 89 0a             	mov    %ecx,(%r10)
    1b50:	49 03 42 10          	add    0x10(%r10),%rax
    1b54:	0f be 00             	movsbl (%rax),%eax
    1b57:	e9 3c fe ff ff       	jmp    1998 <_vsnprintf+0x778>
    1b5c:	83 f9 2f             	cmp    $0x2f,%ecx
    1b5f:	0f 87 88 01 00 00    	ja     1ced <_vsnprintf+0xacd>
    1b65:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1b69:	89 c8                	mov    %ecx,%eax
    1b6b:	83 c1 08             	add    $0x8,%ecx
    1b6e:	41 89 0b             	mov    %ecx,(%r11)
    1b71:	49 03 43 10          	add    0x10(%r11),%rax
    1b75:	0f b6 00             	movzbl (%rax),%eax
    1b78:	e9 a2 fd ff ff       	jmp    191f <_vsnprintf+0x6ff>
    1b7d:	83 f9 2f             	cmp    $0x2f,%ecx
    1b80:	0f 87 d0 00 00 00    	ja     1c56 <_vsnprintf+0xa36>
    1b86:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1b8a:	89 c8                	mov    %ecx,%eax
    1b8c:	83 c1 08             	add    $0x8,%ecx
    1b8f:	41 89 0a             	mov    %ecx,(%r10)
    1b92:	49 03 42 10          	add    0x10(%r10),%rax
    1b96:	48 8b 00             	mov    (%rax),%rax
    1b99:	57                   	push   %rdi
    1b9a:	41 51                	push   %r9
    1b9c:	49 89 c1             	mov    %rax,%r9
    1b9f:	41 50                	push   %r8
    1ba1:	49 89 c0             	mov    %rax,%r8
    1ba4:	49 c1 e9 3f          	shr    $0x3f,%r9
    1ba8:	49 f7 d8             	neg    %r8
    1bab:	56                   	push   %rsi
    1bac:	4c 0f 48 c0          	cmovs  %rax,%r8
    1bb0:	e9 ad fa ff ff       	jmp    1662 <_vsnprintf+0x442>
    1bb5:	83 f9 2f             	cmp    $0x2f,%ecx
    1bb8:	0f 87 83 00 00 00    	ja     1c41 <_vsnprintf+0xa21>
    1bbe:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1bc2:	89 c8                	mov    %ecx,%eax
    1bc4:	83 c1 08             	add    $0x8,%ecx
    1bc7:	41 89 0a             	mov    %ecx,(%r10)
    1bca:	49 03 42 10          	add    0x10(%r10),%rax
    1bce:	48 8b 00             	mov    (%rax),%rax
    1bd1:	57                   	push   %rdi
    1bd2:	41 51                	push   %r9
    1bd4:	41 50                	push   %r8
    1bd6:	56                   	push   %rsi
    1bd7:	e9 80 fa ff ff       	jmp    165c <_vsnprintf+0x43c>
    1bdc:	83 f9 2f             	cmp    $0x2f,%ecx
    1bdf:	0f 87 86 00 00 00    	ja     1c6b <_vsnprintf+0xa4b>
    1be5:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1be9:	89 c8                	mov    %ecx,%eax
    1beb:	83 c1 08             	add    $0x8,%ecx
    1bee:	41 89 0a             	mov    %ecx,(%r10)
    1bf1:	49 03 42 10          	add    0x10(%r10),%rax
    1bf5:	48 8b 00             	mov    (%rax),%rax
    1bf8:	57                   	push   %rdi
    1bf9:	41 51                	push   %r9
    1bfb:	49 89 c1             	mov    %rax,%r9
    1bfe:	41 50                	push   %r8
    1c00:	49 89 c0             	mov    %rax,%r8
    1c03:	49 c1 e9 3f          	shr    $0x3f,%r9
    1c07:	49 f7 d8             	neg    %r8
    1c0a:	56                   	push   %rsi
    1c0b:	4c 0f 48 c0          	cmovs  %rax,%r8
    1c0f:	e9 9a fd ff ff       	jmp    19ae <_vsnprintf+0x78e>
    1c14:	83 f9 2f             	cmp    $0x2f,%ecx
    1c17:	0f 87 b4 00 00 00    	ja     1cd1 <_vsnprintf+0xab1>
    1c1d:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1c21:	89 c8                	mov    %ecx,%eax
    1c23:	83 c1 08             	add    $0x8,%ecx
    1c26:	41 89 0b             	mov    %ecx,(%r11)
    1c29:	49 03 43 10          	add    0x10(%r11),%rax
    1c2d:	48 8b 00             	mov    (%rax),%rax
    1c30:	57                   	push   %rdi
    1c31:	41 51                	push   %r9
    1c33:	45 31 c9             	xor    %r9d,%r9d
    1c36:	41 50                	push   %r8
    1c38:	49 89 c0             	mov    %rax,%r8
    1c3b:	56                   	push   %rsi
    1c3c:	e9 6d fd ff ff       	jmp    19ae <_vsnprintf+0x78e>
    1c41:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1c45:	49 8b 42 08          	mov    0x8(%r10),%rax
    1c49:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1c4d:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1c51:	e9 78 ff ff ff       	jmp    1bce <_vsnprintf+0x9ae>
    1c56:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1c5a:	49 8b 42 08          	mov    0x8(%r10),%rax
    1c5e:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1c62:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1c66:	e9 2b ff ff ff       	jmp    1b96 <_vsnprintf+0x976>
    1c6b:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1c6f:	49 8b 42 08          	mov    0x8(%r10),%rax
    1c73:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1c77:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1c7b:	e9 75 ff ff ff       	jmp    1bf5 <_vsnprintf+0x9d5>
    1c80:	83 f9 2f             	cmp    $0x2f,%ecx
    1c83:	0f 87 b9 00 00 00    	ja     1d42 <_vsnprintf+0xb22>
    1c89:	4c 8b 5d c8          	mov    -0x38(%rbp),%r11
    1c8d:	89 c8                	mov    %ecx,%eax
    1c8f:	83 c1 08             	add    $0x8,%ecx
    1c92:	49 03 43 10          	add    0x10(%r11),%rax
    1c96:	41 89 0b             	mov    %ecx,(%r11)
    1c99:	8b 00                	mov    (%rax),%eax
    1c9b:	e9 7f fc ff ff       	jmp    191f <_vsnprintf+0x6ff>
    1ca0:	83 f9 2f             	cmp    $0x2f,%ecx
    1ca3:	77 71                	ja     1d16 <_vsnprintf+0xaf6>
    1ca5:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1ca9:	89 c8                	mov    %ecx,%eax
    1cab:	83 c1 08             	add    $0x8,%ecx
    1cae:	49 03 42 10          	add    0x10(%r10),%rax
    1cb2:	41 89 0a             	mov    %ecx,(%r10)
    1cb5:	8b 00                	mov    (%rax),%eax
    1cb7:	e9 dc fc ff ff       	jmp    1998 <_vsnprintf+0x778>
    1cbc:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1cc0:	49 8b 42 08          	mov    0x8(%r10),%rax
    1cc4:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1cc8:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1ccc:	e9 83 fe ff ff       	jmp    1b54 <_vsnprintf+0x934>
    1cd1:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1cd5:	49 8b 42 08          	mov    0x8(%r10),%rax
    1cd9:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1cdd:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1ce1:	e9 47 ff ff ff       	jmp    1c2d <_vsnprintf+0xa0d>
    1ce6:	31 f6                	xor    %esi,%esi
    1ce8:	e9 ea f9 ff ff       	jmp    16d7 <_vsnprintf+0x4b7>
    1ced:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1cf1:	49 8b 42 08          	mov    0x8(%r10),%rax
    1cf5:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1cf9:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1cfd:	e9 73 fe ff ff       	jmp    1b75 <_vsnprintf+0x955>
    1d02:	c7 45 a8 02 00 00 00 	movl   $0x2,-0x58(%rbp)
    1d09:	e9 82 f8 ff ff       	jmp    1590 <_vsnprintf+0x370>
    1d0e:	83 c6 01             	add    $0x1,%esi
    1d11:	e9 a4 fd ff ff       	jmp    1aba <_vsnprintf+0x89a>
    1d16:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d1a:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d1e:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d22:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d26:	8b 00                	mov    (%rax),%eax
    1d28:	e9 6b fc ff ff       	jmp    1998 <_vsnprintf+0x778>
    1d2d:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d31:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d35:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d39:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d3d:	e9 53 fc ff ff       	jmp    1995 <_vsnprintf+0x775>
    1d42:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d46:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d4a:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d4e:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d52:	8b 00                	mov    (%rax),%eax
    1d54:	e9 c6 fb ff ff       	jmp    191f <_vsnprintf+0x6ff>
    1d59:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    1d5d:	49 8b 42 08          	mov    0x8(%r10),%rax
    1d61:	48 8d 48 08          	lea    0x8(%rax),%rcx
    1d65:	49 89 4a 08          	mov    %rcx,0x8(%r10)
    1d69:	e9 ae fb ff ff       	jmp    191c <_vsnprintf+0x6fc>
    1d6e:	66 90                	xchg   %ax,%ax

0000000000001d70 <printf_>:
    1d70:	55                   	push   %rbp
    1d71:	48 89 e5             	mov    %rsp,%rbp
    1d74:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1d7b:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    1d82:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    1d89:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1d90:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1d97:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1d9e:	84 c0                	test   %al,%al
    1da0:	74 20                	je     1dc2 <printf_+0x52>
    1da2:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1da6:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1daa:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1dae:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1db2:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1db6:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1dba:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1dbe:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1dc2:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1dc6:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1dcd:	48 89 f9             	mov    %rdi,%rcx
    1dd0:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    1dd7:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1dde:	bf 00 00 00 00       	mov    $0x0,%edi
			1ddf: R_X86_64_32	.text+0x11e0
    1de3:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1dea:	48 8d b5 37 ff ff ff 	lea    -0xc9(%rbp),%rsi
    1df1:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
    1df8:	00 00 00 
    1dfb:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    1e02:	00 00 00 
    1e05:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1e0c:	e8 0f f4 ff ff       	call   1220 <_vsnprintf>
    1e11:	c9                   	leave  
    1e12:	c3                   	ret    
    1e13:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1e1a:	00 00 00 00 
    1e1e:	66 90                	xchg   %ax,%ax

0000000000001e20 <sprintf_>:
    1e20:	55                   	push   %rbp
    1e21:	48 89 e5             	mov    %rsp,%rbp
    1e24:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1e2b:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    1e32:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1e39:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1e40:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1e47:	84 c0                	test   %al,%al
    1e49:	74 20                	je     1e6b <sprintf_+0x4b>
    1e4b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1e4f:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1e53:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1e57:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1e5b:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1e5f:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1e63:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1e67:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1e6b:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1e6f:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1e76:	48 89 f1             	mov    %rsi,%rcx
    1e79:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    1e80:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1e87:	48 89 fe             	mov    %rdi,%rsi
    1e8a:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1e91:	bf 00 00 00 00       	mov    $0x0,%edi
			1e92: R_X86_64_32	.text+0x420
    1e96:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    1e9d:	00 00 00 
    1ea0:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    1ea7:	00 00 00 
    1eaa:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1eb1:	e8 6a f3 ff ff       	call   1220 <_vsnprintf>
    1eb6:	c9                   	leave  
    1eb7:	c3                   	ret    
    1eb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1ebf:	00 

0000000000001ec0 <snprintf_>:
    1ec0:	55                   	push   %rbp
    1ec1:	48 89 e5             	mov    %rsp,%rbp
    1ec4:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1ecb:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1ed2:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1ed9:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1ee0:	84 c0                	test   %al,%al
    1ee2:	74 20                	je     1f04 <snprintf_+0x44>
    1ee4:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1ee8:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1eec:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1ef0:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1ef4:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1ef8:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1efc:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1f00:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1f04:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1f08:	48 89 d1             	mov    %rdx,%rcx
    1f0b:	48 89 f2             	mov    %rsi,%rdx
    1f0e:	48 89 fe             	mov    %rdi,%rsi
    1f11:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    1f18:	bf 00 00 00 00       	mov    $0x0,%edi
			1f19: R_X86_64_32	.text+0x420
    1f1d:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    1f24:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1f2b:	c7 85 38 ff ff ff 18 	movl   $0x18,-0xc8(%rbp)
    1f32:	00 00 00 
    1f35:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    1f3c:	00 00 00 
    1f3f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    1f46:	e8 d5 f2 ff ff       	call   1220 <_vsnprintf>
    1f4b:	c9                   	leave  
    1f4c:	c3                   	ret    
    1f4d:	0f 1f 00             	nopl   (%rax)

0000000000001f50 <vprintf_>:
    1f50:	55                   	push   %rbp
    1f51:	48 89 f9             	mov    %rdi,%rcx
    1f54:	49 89 f0             	mov    %rsi,%r8
    1f57:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    1f5e:	bf 00 00 00 00       	mov    $0x0,%edi
			1f5f: R_X86_64_32	.text+0x11e0
    1f63:	48 89 e5             	mov    %rsp,%rbp
    1f66:	48 83 ec 10          	sub    $0x10,%rsp
    1f6a:	48 8d 75 ff          	lea    -0x1(%rbp),%rsi
    1f6e:	e8 ad f2 ff ff       	call   1220 <_vsnprintf>
    1f73:	c9                   	leave  
    1f74:	c3                   	ret    
    1f75:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1f7c:	00 00 00 00 

0000000000001f80 <vsnprintf_>:
    1f80:	49 89 c8             	mov    %rcx,%r8
    1f83:	48 89 d1             	mov    %rdx,%rcx
    1f86:	48 89 f2             	mov    %rsi,%rdx
    1f89:	48 89 fe             	mov    %rdi,%rsi
    1f8c:	bf 00 00 00 00       	mov    $0x0,%edi
			1f8d: R_X86_64_32	.text+0x420
    1f91:	e9 8a f2 ff ff       	jmp    1220 <_vsnprintf>
    1f96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1f9d:	00 00 00 

0000000000001fa0 <fctprintf>:
    1fa0:	55                   	push   %rbp
    1fa1:	48 89 e5             	mov    %rsp,%rbp
    1fa4:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    1fab:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    1fb2:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    1fb9:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    1fc0:	84 c0                	test   %al,%al
    1fc2:	74 20                	je     1fe4 <fctprintf+0x44>
    1fc4:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    1fc8:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    1fcc:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    1fd0:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    1fd4:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    1fd8:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    1fdc:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    1fe0:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    1fe4:	48 8d 45 10          	lea    0x10(%rbp),%rax
    1fe8:	48 89 bd 20 ff ff ff 	mov    %rdi,-0xe0(%rbp)
    1fef:	48 89 d1             	mov    %rdx,%rcx
    1ff2:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
    1ff9:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    2000:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    2007:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    200e:	bf 00 00 00 00       	mov    $0x0,%edi
			200f: R_X86_64_32	.text+0x1200
    2013:	48 89 b5 28 ff ff ff 	mov    %rsi,-0xd8(%rbp)
    201a:	48 8d b5 20 ff ff ff 	lea    -0xe0(%rbp),%rsi
    2021:	c7 85 38 ff ff ff 18 	movl   $0x18,-0xc8(%rbp)
    2028:	00 00 00 
    202b:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    2032:	00 00 00 
    2035:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    203c:	e8 df f1 ff ff       	call   1220 <_vsnprintf>
    2041:	c9                   	leave  
    2042:	c3                   	ret    
    2043:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 00 
    204e:	66 90                	xchg   %ax,%ax

0000000000002050 <_putchar>:
    2050:	40 0f be ff          	movsbl %dil,%edi
    2054:	e9 00 00 00 00       	jmp    2059 <_putchar+0x9>
			2055: R_X86_64_PLT32	term_put_char-0x4
    2059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002060 <malloc>:
    2060:	55                   	push   %rbp
    2061:	48 89 e5             	mov    %rsp,%rbp
    2064:	e8 00 00 00 00       	call   2069 <malloc+0x9>
			2065: R_X86_64_PLT32	kmalloc-0x4
    2069:	5d                   	pop    %rbp
    206a:	48 98                	cltq   
    206c:	c3                   	ret    
    206d:	0f 1f 00             	nopl   (%rax)

0000000000002070 <free>:
    2070:	e9 00 00 00 00       	jmp    2075 <free+0x5>
			2071: R_X86_64_PLT32	kfree-0x4
    2075:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    207c:	00 00 00 
    207f:	90                   	nop

0000000000002080 <asprintf>:
    2080:	55                   	push   %rbp
    2081:	48 89 e5             	mov    %rsp,%rbp
    2084:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    208b:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    2092:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    2099:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    20a0:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    20a7:	84 c0                	test   %al,%al
    20a9:	74 20                	je     20cb <asprintf+0x4b>
    20ab:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    20af:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    20b3:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    20b7:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    20bb:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    20bf:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    20c3:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    20c7:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    20cb:	48 8d 45 10          	lea    0x10(%rbp),%rax
    20cf:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
    20d6:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    20dd:	00 00 00 
    20e0:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    20e7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    20ee:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    20f5:	00 00 00 
    20f8:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    20ff:	e8 00 00 00 00       	call   2104 <asprintf+0x84>
			2100: R_X86_64_PLT32	vasprintf-0x4
    2104:	c9                   	leave  
    2105:	c3                   	ret    
    2106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    210d:	00 00 00 

0000000000002110 <putchar>:
    2110:	55                   	push   %rbp
    2111:	48 89 e5             	mov    %rsp,%rbp
    2114:	53                   	push   %rbx
    2115:	89 fb                	mov    %edi,%ebx
    2117:	40 0f be ff          	movsbl %dil,%edi
    211b:	48 83 ec 08          	sub    $0x8,%rsp
    211f:	e8 00 00 00 00       	call   2124 <putchar+0x14>
			2120: R_X86_64_PLT32	_putchar-0x4
    2124:	89 d8                	mov    %ebx,%eax
    2126:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    212a:	c9                   	leave  
    212b:	c3                   	ret    
    212c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002130 <puts>:
    2130:	55                   	push   %rbp
    2131:	48 89 e5             	mov    %rsp,%rbp
    2134:	41 55                	push   %r13
    2136:	41 54                	push   %r12
    2138:	49 89 fc             	mov    %rdi,%r12
    213b:	53                   	push   %rbx
    213c:	48 83 ec 08          	sub    $0x8,%rsp
    2140:	0f be 3f             	movsbl (%rdi),%edi
    2143:	40 84 ff             	test   %dil,%dil
    2146:	74 38                	je     2180 <puts+0x50>
    2148:	31 db                	xor    %ebx,%ebx
    214a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2150:	e8 00 00 00 00       	call   2155 <puts+0x25>
			2151: R_X86_64_PLT32	putchar-0x4
    2155:	49 89 dd             	mov    %rbx,%r13
    2158:	48 83 c3 01          	add    $0x1,%rbx
    215c:	41 0f be 3c 1c       	movsbl (%r12,%rbx,1),%edi
    2161:	40 84 ff             	test   %dil,%dil
    2164:	75 ea                	jne    2150 <puts+0x20>
    2166:	bf 0a 00 00 00       	mov    $0xa,%edi
    216b:	e8 00 00 00 00       	call   2170 <puts+0x40>
			216c: R_X86_64_PLT32	putchar-0x4
    2170:	48 83 c4 08          	add    $0x8,%rsp
    2174:	41 8d 45 02          	lea    0x2(%r13),%eax
    2178:	5b                   	pop    %rbx
    2179:	41 5c                	pop    %r12
    217b:	41 5d                	pop    %r13
    217d:	5d                   	pop    %rbp
    217e:	c3                   	ret    
    217f:	90                   	nop
    2180:	48 83 c4 08          	add    $0x8,%rsp
    2184:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2189:	5b                   	pop    %rbx
    218a:	41 5c                	pop    %r12
    218c:	41 5d                	pop    %r13
    218e:	5d                   	pop    %rbp
    218f:	c3                   	ret    

0000000000002190 <vasprintf>:
    2190:	55                   	push   %rbp
    2191:	48 89 e5             	mov    %rsp,%rbp
    2194:	41 56                	push   %r14
    2196:	49 89 d6             	mov    %rdx,%r14
    2199:	41 55                	push   %r13
    219b:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    219f:	49 89 fd             	mov    %rdi,%r13
    21a2:	31 ff                	xor    %edi,%edi
    21a4:	41 54                	push   %r12
    21a6:	49 89 f4             	mov    %rsi,%r12
    21a9:	53                   	push   %rbx
    21aa:	48 83 ec 20          	sub    $0x20,%rsp
    21ae:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
    21b2:	0f 11 45 c8          	movups %xmm0,-0x38(%rbp)
    21b6:	48 8b 42 10          	mov    0x10(%rdx),%rax
    21ba:	48 89 f2             	mov    %rsi,%rdx
    21bd:	31 f6                	xor    %esi,%esi
    21bf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    21c3:	e8 00 00 00 00       	call   21c8 <vasprintf+0x38>
			21c4: R_X86_64_PLT32	vsnprintf_-0x4
    21c8:	85 c0                	test   %eax,%eax
    21ca:	78 3c                	js     2208 <vasprintf+0x78>
    21cc:	48 98                	cltq   
    21ce:	48 8d 58 01          	lea    0x1(%rax),%rbx
    21d2:	48 89 df             	mov    %rbx,%rdi
    21d5:	e8 00 00 00 00       	call   21da <vasprintf+0x4a>
			21d6: R_X86_64_PLT32	malloc-0x4
    21da:	49 89 45 00          	mov    %rax,0x0(%r13)
    21de:	48 89 c7             	mov    %rax,%rdi
    21e1:	48 85 c0             	test   %rax,%rax
    21e4:	74 22                	je     2208 <vasprintf+0x78>
    21e6:	4c 89 f1             	mov    %r14,%rcx
    21e9:	4c 89 e2             	mov    %r12,%rdx
    21ec:	48 89 de             	mov    %rbx,%rsi
    21ef:	e8 00 00 00 00       	call   21f4 <vasprintf+0x64>
			21f0: R_X86_64_PLT32	vsnprintf_-0x4
    21f4:	48 83 c4 20          	add    $0x20,%rsp
    21f8:	5b                   	pop    %rbx
    21f9:	41 5c                	pop    %r12
    21fb:	41 5d                	pop    %r13
    21fd:	41 5e                	pop    %r14
    21ff:	5d                   	pop    %rbp
    2200:	c3                   	ret    
    2201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2208:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    220d:	eb e5                	jmp    21f4 <vasprintf+0x64>
    220f:	90                   	nop

0000000000002210 <abs>:
    2210:	89 f8                	mov    %edi,%eax
    2212:	f7 d8                	neg    %eax
    2214:	0f 48 c7             	cmovs  %edi,%eax
    2217:	c3                   	ret    
    2218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    221f:	00 

0000000000002220 <atoi>:
    2220:	55                   	push   %rbp
    2221:	48 89 e5             	mov    %rsp,%rbp
    2224:	41 55                	push   %r13
    2226:	45 31 ed             	xor    %r13d,%r13d
    2229:	41 54                	push   %r12
    222b:	53                   	push   %rbx
    222c:	48 89 fb             	mov    %rdi,%rbx
    222f:	48 83 ec 08          	sub    $0x8,%rsp
    2233:	0f b6 07             	movzbl (%rdi),%eax
    2236:	3c 2b                	cmp    $0x2b,%al
    2238:	74 0a                	je     2244 <atoi+0x24>
    223a:	3c 2d                	cmp    $0x2d,%al
    223c:	75 0a                	jne    2248 <atoi+0x28>
    223e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    2244:	48 83 c3 01          	add    $0x1,%rbx
    2248:	45 31 e4             	xor    %r12d,%r12d
    224b:	eb 13                	jmp    2260 <atoi+0x40>
    224d:	0f 1f 00             	nopl   (%rax)
    2250:	0f be 03             	movsbl (%rbx),%eax
    2253:	43 8d 14 a4          	lea    (%r12,%r12,4),%edx
    2257:	48 83 c3 01          	add    $0x1,%rbx
    225b:	44 8d 64 50 d0       	lea    -0x30(%rax,%rdx,2),%r12d
    2260:	0f be 3b             	movsbl (%rbx),%edi
    2263:	e8 00 00 00 00       	call   2268 <atoi+0x48>
			2264: R_X86_64_PLT32	isdigit-0x4
    2268:	85 c0                	test   %eax,%eax
    226a:	75 e4                	jne    2250 <atoi+0x30>
    226c:	44 89 e0             	mov    %r12d,%eax
    226f:	f7 d8                	neg    %eax
    2271:	45 84 ed             	test   %r13b,%r13b
    2274:	44 0f 45 e0          	cmovne %eax,%r12d
    2278:	48 83 c4 08          	add    $0x8,%rsp
    227c:	5b                   	pop    %rbx
    227d:	44 89 e0             	mov    %r12d,%eax
    2280:	41 5c                	pop    %r12
    2282:	41 5d                	pop    %r13
    2284:	5d                   	pop    %rbp
    2285:	c3                   	ret    
    2286:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228d:	00 00 00 

0000000000002290 <atol>:
    2290:	55                   	push   %rbp
    2291:	48 89 e5             	mov    %rsp,%rbp
    2294:	41 55                	push   %r13
    2296:	41 54                	push   %r12
    2298:	53                   	push   %rbx
    2299:	48 89 fb             	mov    %rdi,%rbx
    229c:	48 83 ec 08          	sub    $0x8,%rsp
    22a0:	eb 0a                	jmp    22ac <atol+0x1c>
    22a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    22a8:	48 83 c3 01          	add    $0x1,%rbx
    22ac:	0f be 3b             	movsbl (%rbx),%edi
    22af:	e8 00 00 00 00       	call   22b4 <atol+0x24>
			22b0: R_X86_64_PLT32	isspace-0x4
    22b4:	85 c0                	test   %eax,%eax
    22b6:	75 f0                	jne    22a8 <atol+0x18>
    22b8:	0f b6 03             	movzbl (%rbx),%eax
    22bb:	45 31 e4             	xor    %r12d,%r12d
    22be:	3c 2b                	cmp    $0x2b,%al
    22c0:	74 0a                	je     22cc <atol+0x3c>
    22c2:	3c 2d                	cmp    $0x2d,%al
    22c4:	75 0a                	jne    22d0 <atol+0x40>
    22c6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    22cc:	48 83 c3 01          	add    $0x1,%rbx
    22d0:	45 31 ed             	xor    %r13d,%r13d
    22d3:	eb 18                	jmp    22ed <atol+0x5d>
    22d5:	0f 1f 00             	nopl   (%rax)
    22d8:	0f be 03             	movsbl (%rbx),%eax
    22db:	4b 8d 54 ad 00       	lea    0x0(%r13,%r13,4),%rdx
    22e0:	48 83 c3 01          	add    $0x1,%rbx
    22e4:	83 e8 30             	sub    $0x30,%eax
    22e7:	48 98                	cltq   
    22e9:	4c 8d 2c 50          	lea    (%rax,%rdx,2),%r13
    22ed:	0f be 3b             	movsbl (%rbx),%edi
    22f0:	e8 00 00 00 00       	call   22f5 <atol+0x65>
			22f1: R_X86_64_PLT32	isdigit-0x4
    22f5:	85 c0                	test   %eax,%eax
    22f7:	75 df                	jne    22d8 <atol+0x48>
    22f9:	4c 89 e8             	mov    %r13,%rax
    22fc:	48 f7 d8             	neg    %rax
    22ff:	45 84 e4             	test   %r12b,%r12b
    2302:	4c 0f 45 e8          	cmovne %rax,%r13
    2306:	48 83 c4 08          	add    $0x8,%rsp
    230a:	5b                   	pop    %rbx
    230b:	41 5c                	pop    %r12
    230d:	4c 89 e8             	mov    %r13,%rax
    2310:	41 5d                	pop    %r13
    2312:	5d                   	pop    %rbp
    2313:	c3                   	ret    
    2314:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    231b:	00 00 00 
    231e:	66 90                	xchg   %ax,%ax

0000000000002320 <atoll>:
    2320:	55                   	push   %rbp
    2321:	48 89 e5             	mov    %rsp,%rbp
    2324:	41 55                	push   %r13
    2326:	41 54                	push   %r12
    2328:	53                   	push   %rbx
    2329:	48 89 fb             	mov    %rdi,%rbx
    232c:	48 83 ec 08          	sub    $0x8,%rsp
    2330:	eb 0a                	jmp    233c <atoll+0x1c>
    2332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2338:	48 83 c3 01          	add    $0x1,%rbx
    233c:	0f be 3b             	movsbl (%rbx),%edi
    233f:	e8 00 00 00 00       	call   2344 <atoll+0x24>
			2340: R_X86_64_PLT32	isspace-0x4
    2344:	85 c0                	test   %eax,%eax
    2346:	75 f0                	jne    2338 <atoll+0x18>
    2348:	0f b6 03             	movzbl (%rbx),%eax
    234b:	45 31 e4             	xor    %r12d,%r12d
    234e:	3c 2b                	cmp    $0x2b,%al
    2350:	74 0a                	je     235c <atoll+0x3c>
    2352:	3c 2d                	cmp    $0x2d,%al
    2354:	75 0a                	jne    2360 <atoll+0x40>
    2356:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    235c:	48 83 c3 01          	add    $0x1,%rbx
    2360:	45 31 ed             	xor    %r13d,%r13d
    2363:	eb 18                	jmp    237d <atoll+0x5d>
    2365:	0f 1f 00             	nopl   (%rax)
    2368:	0f be 03             	movsbl (%rbx),%eax
    236b:	4b 8d 54 ad 00       	lea    0x0(%r13,%r13,4),%rdx
    2370:	48 83 c3 01          	add    $0x1,%rbx
    2374:	83 e8 30             	sub    $0x30,%eax
    2377:	48 98                	cltq   
    2379:	4c 8d 2c 50          	lea    (%rax,%rdx,2),%r13
    237d:	0f be 3b             	movsbl (%rbx),%edi
    2380:	e8 00 00 00 00       	call   2385 <atoll+0x65>
			2381: R_X86_64_PLT32	isdigit-0x4
    2385:	85 c0                	test   %eax,%eax
    2387:	75 df                	jne    2368 <atoll+0x48>
    2389:	4c 89 e8             	mov    %r13,%rax
    238c:	48 f7 d8             	neg    %rax
    238f:	45 84 e4             	test   %r12b,%r12b
    2392:	4c 0f 45 e8          	cmovne %rax,%r13
    2396:	48 83 c4 08          	add    $0x8,%rsp
    239a:	5b                   	pop    %rbx
    239b:	41 5c                	pop    %r12
    239d:	4c 89 e8             	mov    %r13,%rax
    23a0:	41 5d                	pop    %r13
    23a2:	5d                   	pop    %rbp
    23a3:	c3                   	ret    
    23a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ab:	00 00 00 
    23ae:	66 90                	xchg   %ax,%ax

00000000000023b0 <bsearch>:
    23b0:	55                   	push   %rbp
    23b1:	48 89 e5             	mov    %rsp,%rbp
    23b4:	41 57                	push   %r15
    23b6:	41 56                	push   %r14
    23b8:	41 55                	push   %r13
    23ba:	49 89 f5             	mov    %rsi,%r13
    23bd:	41 54                	push   %r12
    23bf:	49 89 cc             	mov    %rcx,%r12
    23c2:	53                   	push   %rbx
    23c3:	48 89 d3             	mov    %rdx,%rbx
    23c6:	48 83 ec 18          	sub    $0x18,%rsp
    23ca:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    23ce:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    23d2:	48 85 d2             	test   %rdx,%rdx
    23d5:	75 19                	jne    23f0 <bsearch+0x40>
    23d7:	eb 44                	jmp    241d <bsearch+0x6d>
    23d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    23e0:	48 83 eb 01          	sub    $0x1,%rbx
    23e4:	4f 8d 2c 27          	lea    (%r15,%r12,1),%r13
    23e8:	48 d1 eb             	shr    %rbx
    23eb:	48 85 db             	test   %rbx,%rbx
    23ee:	74 2d                	je     241d <bsearch+0x6d>
    23f0:	49 89 de             	mov    %rbx,%r14
    23f3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    23f7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    23fb:	49 d1 ee             	shr    %r14
    23fe:	4c 89 f2             	mov    %r14,%rdx
    2401:	49 0f af d4          	imul   %r12,%rdx
    2405:	4d 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%r15
    240a:	4c 89 fe             	mov    %r15,%rsi
    240d:	ff d0                	call   *%rax
    240f:	85 c0                	test   %eax,%eax
    2411:	74 0d                	je     2420 <bsearch+0x70>
    2413:	7f cb                	jg     23e0 <bsearch+0x30>
    2415:	4c 89 f3             	mov    %r14,%rbx
    2418:	48 85 db             	test   %rbx,%rbx
    241b:	75 d3                	jne    23f0 <bsearch+0x40>
    241d:	45 31 ff             	xor    %r15d,%r15d
    2420:	48 83 c4 18          	add    $0x18,%rsp
    2424:	4c 89 f8             	mov    %r15,%rax
    2427:	5b                   	pop    %rbx
    2428:	41 5c                	pop    %r12
    242a:	41 5d                	pop    %r13
    242c:	41 5e                	pop    %r14
    242e:	41 5f                	pop    %r15
    2430:	5d                   	pop    %rbp
    2431:	c3                   	ret    
    2432:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2439:	00 00 00 
    243c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002440 <calloc>:
    2440:	55                   	push   %rbp
    2441:	48 89 f8             	mov    %rdi,%rax
    2444:	48 09 f0             	or     %rsi,%rax
    2447:	48 c1 e8 20          	shr    $0x20,%rax
    244b:	48 89 e5             	mov    %rsp,%rbp
    244e:	41 54                	push   %r12
    2450:	53                   	push   %rbx
    2451:	74 0d                	je     2460 <calloc+0x20>
    2453:	48 85 ff             	test   %rdi,%rdi
    2456:	74 08                	je     2460 <calloc+0x20>
    2458:	48 89 f8             	mov    %rdi,%rax
    245b:	48 f7 e6             	mul    %rsi
    245e:	70 30                	jo     2490 <calloc+0x50>
    2460:	48 89 fb             	mov    %rdi,%rbx
    2463:	48 0f af de          	imul   %rsi,%rbx
    2467:	48 89 df             	mov    %rbx,%rdi
    246a:	e8 00 00 00 00       	call   246f <calloc+0x2f>
			246b: R_X86_64_PLT32	malloc-0x4
    246f:	49 89 c4             	mov    %rax,%r12
    2472:	48 85 c0             	test   %rax,%rax
    2475:	74 19                	je     2490 <calloc+0x50>
    2477:	48 89 da             	mov    %rbx,%rdx
    247a:	31 f6                	xor    %esi,%esi
    247c:	48 89 c7             	mov    %rax,%rdi
    247f:	e8 00 00 00 00       	call   2484 <calloc+0x44>
			2480: R_X86_64_PLT32	memset-0x4
    2484:	4c 89 e0             	mov    %r12,%rax
    2487:	5b                   	pop    %rbx
    2488:	41 5c                	pop    %r12
    248a:	5d                   	pop    %rbp
    248b:	c3                   	ret    
    248c:	0f 1f 40 00          	nopl   0x0(%rax)
    2490:	45 31 e4             	xor    %r12d,%r12d
    2493:	eb ef                	jmp    2484 <calloc+0x44>
    2495:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249c:	00 00 00 
    249f:	90                   	nop

00000000000024a0 <div>:
    24a0:	89 f8                	mov    %edi,%eax
    24a2:	99                   	cltd   
    24a3:	f7 fe                	idiv   %esi
    24a5:	48 c1 e2 20          	shl    $0x20,%rdx
    24a9:	48 09 d0             	or     %rdx,%rax
    24ac:	c3                   	ret    
    24ad:	0f 1f 00             	nopl   (%rax)

00000000000024b0 <heapsort>:
    24b0:	55                   	push   %rbp
    24b1:	48 89 e5             	mov    %rsp,%rbp
    24b4:	41 57                	push   %r15
    24b6:	41 56                	push   %r14
    24b8:	41 55                	push   %r13
    24ba:	41 54                	push   %r12
    24bc:	53                   	push   %rbx
    24bd:	48 83 ec 48          	sub    $0x48,%rsp
    24c1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    24c5:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    24c9:	48 83 fe 01          	cmp    $0x1,%rsi
    24cd:	0f 86 cc 02 00 00    	jbe    279f <heapsort+0x2ef>
    24d3:	49 89 d6             	mov    %rdx,%r14
    24d6:	48 85 d2             	test   %rdx,%rdx
    24d9:	0f 84 d1 02 00 00    	je     27b0 <heapsort+0x300>
    24df:	48 89 d7             	mov    %rdx,%rdi
    24e2:	49 89 f4             	mov    %rsi,%r12
    24e5:	e8 00 00 00 00       	call   24ea <heapsort+0x3a>
			24e6: R_X86_64_PLT32	malloc-0x4
    24ea:	49 89 c5             	mov    %rax,%r13
    24ed:	48 85 c0             	test   %rax,%rax
    24f0:	0f 84 ba 02 00 00    	je     27b0 <heapsort+0x300>
    24f6:	4c 89 e0             	mov    %r12,%rax
    24f9:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    24fd:	48 d1 e8             	shr    %rax
    2500:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    2504:	4c 29 f3             	sub    %r14,%rbx
    2507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    250e:	00 00 
    2510:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    2514:	4c 8d 3c 09          	lea    (%rcx,%rcx,1),%r15
    2518:	4d 39 fc             	cmp    %r15,%r12
    251b:	0f 82 af 00 00 00    	jb     25d0 <heapsort+0x120>
    2521:	4c 89 f2             	mov    %r14,%rdx
    2524:	49 0f af d7          	imul   %r15,%rdx
    2528:	48 01 da             	add    %rbx,%rdx
    252b:	4d 39 e7             	cmp    %r12,%r15
    252e:	72 66                	jb     2596 <heapsort+0xe6>
    2530:	4d 89 f9             	mov    %r15,%r9
    2533:	49 0f af ce          	imul   %r14,%rcx
    2537:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    253b:	48 89 d7             	mov    %rdx,%rdi
    253e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2542:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    2546:	4c 8d 3c 0b          	lea    (%rbx,%rcx,1),%r15
    254a:	4c 89 fe             	mov    %r15,%rsi
    254d:	ff d0                	call   *%rax
    254f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    2553:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2557:	85 c0                	test   %eax,%eax
    2559:	7e 75                	jle    25d0 <heapsort+0x120>
    255b:	4a 8d 3c 32          	lea    (%rdx,%r14,1),%rdi
    255f:	90                   	nop
    2560:	41 0f b6 07          	movzbl (%r15),%eax
    2564:	0f b6 32             	movzbl (%rdx),%esi
    2567:	48 83 c2 01          	add    $0x1,%rdx
    256b:	49 83 c7 01          	add    $0x1,%r15
    256f:	41 88 77 ff          	mov    %sil,-0x1(%r15)
    2573:	88 42 ff             	mov    %al,-0x1(%rdx)
    2576:	48 39 d7             	cmp    %rdx,%rdi
    2579:	75 e5                	jne    2560 <heapsort+0xb0>
    257b:	4f 8d 3c 09          	lea    (%r9,%r9,1),%r15
    257f:	4d 39 fc             	cmp    %r15,%r12
    2582:	72 4c                	jb     25d0 <heapsort+0x120>
    2584:	4c 89 f2             	mov    %r14,%rdx
    2587:	4c 89 c9             	mov    %r9,%rcx
    258a:	49 0f af d7          	imul   %r15,%rdx
    258e:	48 01 da             	add    %rbx,%rdx
    2591:	4d 39 e7             	cmp    %r12,%r15
    2594:	73 9a                	jae    2530 <heapsort+0x80>
    2596:	4a 8d 04 32          	lea    (%rdx,%r14,1),%rax
    259a:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    259e:	48 89 d7             	mov    %rdx,%rdi
    25a1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    25a5:	48 89 c6             	mov    %rax,%rsi
    25a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    25ac:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    25b0:	ff d0                	call   *%rax
    25b2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    25b6:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    25ba:	85 c0                	test   %eax,%eax
    25bc:	0f 89 6e ff ff ff    	jns    2530 <heapsort+0x80>
    25c2:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    25c6:	4d 8d 4f 01          	lea    0x1(%r15),%r9
    25ca:	e9 64 ff ff ff       	jmp    2533 <heapsort+0x83>
    25cf:	90                   	nop
    25d0:	48 83 6d a0 01       	subq   $0x1,-0x60(%rbp)
    25d5:	0f 85 35 ff ff ff    	jne    2510 <heapsort+0x60>
    25db:	4d 89 e1             	mov    %r12,%r9
    25de:	4d 0f af ce          	imul   %r14,%r9
    25e2:	4e 8d 3c 0b          	lea    (%rbx,%r9,1),%r15
    25e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25ed:	00 00 00 
    25f0:	31 c0                	xor    %eax,%eax
    25f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    25f8:	41 0f b6 14 07       	movzbl (%r15,%rax,1),%edx
    25fd:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    2602:	48 83 c0 01          	add    $0x1,%rax
    2606:	4c 39 f0             	cmp    %r14,%rax
    2609:	75 ed                	jne    25f8 <heapsort+0x148>
    260b:	31 c0                	xor    %eax,%eax
    260d:	0f 1f 00             	nopl   (%rax)
    2610:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    2614:	0f b6 14 07          	movzbl (%rdi,%rax,1),%edx
    2618:	41 88 14 07          	mov    %dl,(%r15,%rax,1)
    261c:	48 83 c0 01          	add    $0x1,%rax
    2620:	4c 39 f0             	cmp    %r14,%rax
    2623:	75 eb                	jne    2610 <heapsort+0x160>
    2625:	49 83 ec 01          	sub    $0x1,%r12
    2629:	49 83 fc 01          	cmp    $0x1,%r12
    262d:	0f 84 36 01 00 00    	je     2769 <heapsort+0x2b9>
    2633:	41 ba 02 00 00 00    	mov    $0x2,%r10d
    2639:	b9 01 00 00 00       	mov    $0x1,%ecx
    263e:	66 90                	xchg   %ax,%ax
    2640:	4c 89 f2             	mov    %r14,%rdx
    2643:	49 0f af d2          	imul   %r10,%rdx
    2647:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    264b:	48 8d 3c 13          	lea    (%rbx,%rdx,1),%rdi
    264f:	4d 39 e2             	cmp    %r12,%r10
    2652:	0f 82 c8 00 00 00    	jb     2720 <heapsort+0x270>
    2658:	48 89 fa             	mov    %rdi,%rdx
    265b:	4c 89 d6             	mov    %r10,%rsi
    265e:	49 0f af ce          	imul   %r14,%rcx
    2662:	31 c0                	xor    %eax,%eax
    2664:	48 01 d9             	add    %rbx,%rcx
    2667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    266e:	00 00 
    2670:	44 0f b6 14 07       	movzbl (%rdi,%rax,1),%r10d
    2675:	44 88 14 01          	mov    %r10b,(%rcx,%rax,1)
    2679:	48 83 c0 01          	add    $0x1,%rax
    267d:	4c 39 f0             	cmp    %r14,%rax
    2680:	75 ee                	jne    2670 <heapsort+0x1c0>
    2682:	4c 8d 14 36          	lea    (%rsi,%rsi,1),%r10
    2686:	48 89 f1             	mov    %rsi,%rcx
    2689:	4d 39 d4             	cmp    %r10,%r12
    268c:	73 b2                	jae    2640 <heapsort+0x190>
    268e:	48 d1 e9             	shr    %rcx
    2691:	4d 89 f2             	mov    %r14,%r10
    2694:	4c 0f af d1          	imul   %rcx,%r10
    2698:	49 01 da             	add    %rbx,%r10
    269b:	48 83 fe 01          	cmp    $0x1,%rsi
    269f:	0f 84 cb 00 00 00    	je     2770 <heapsort+0x2c0>
    26a5:	0f 1f 00             	nopl   (%rax)
    26a8:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    26ac:	4c 89 d6             	mov    %r10,%rsi
    26af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    26b3:	4c 89 ef             	mov    %r13,%rdi
    26b6:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    26ba:	4c 89 55 c0          	mov    %r10,-0x40(%rbp)
    26be:	ff d0                	call   *%rax
    26c0:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    26c4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    26c8:	85 c0                	test   %eax,%eax
    26ca:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    26ce:	0f 88 9c 00 00 00    	js     2770 <heapsort+0x2c0>
    26d4:	31 c0                	xor    %eax,%eax
    26d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26dd:	00 00 00 
    26e0:	41 0f b6 34 02       	movzbl (%r10,%rax,1),%esi
    26e5:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
    26e9:	48 83 c0 01          	add    $0x1,%rax
    26ed:	49 39 c6             	cmp    %rax,%r14
    26f0:	75 ee                	jne    26e0 <heapsort+0x230>
    26f2:	48 89 c8             	mov    %rcx,%rax
    26f5:	4c 89 f2             	mov    %r14,%rdx
    26f8:	4d 89 f2             	mov    %r14,%r10
    26fb:	48 d1 e8             	shr    %rax
    26fe:	48 0f af d1          	imul   %rcx,%rdx
    2702:	4c 0f af d0          	imul   %rax,%r10
    2706:	48 01 da             	add    %rbx,%rdx
    2709:	49 01 da             	add    %rbx,%r10
    270c:	48 83 f9 01          	cmp    $0x1,%rcx
    2710:	74 5e                	je     2770 <heapsort+0x2c0>
    2712:	48 89 c1             	mov    %rax,%rcx
    2715:	eb 91                	jmp    26a8 <heapsort+0x1f8>
    2717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    271e:	00 00 
    2720:	4a 8d 04 37          	lea    (%rdi,%r14,1),%rax
    2724:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    2728:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    272c:	48 89 c6             	mov    %rax,%rsi
    272f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    2733:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2737:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    273b:	ff d0                	call   *%rax
    273d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    2741:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    2745:	85 c0                	test   %eax,%eax
    2747:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    274b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    274f:	0f 89 03 ff ff ff    	jns    2658 <heapsort+0x1a8>
    2755:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2759:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    275d:	49 8d 72 01          	lea    0x1(%r10),%rsi
    2761:	48 01 c2             	add    %rax,%rdx
    2764:	e9 f5 fe ff ff       	jmp    265e <heapsort+0x1ae>
    2769:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    276d:	0f 1f 00             	nopl   (%rax)
    2770:	31 c0                	xor    %eax,%eax
    2772:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2778:	41 0f b6 4c 05 00    	movzbl 0x0(%r13,%rax,1),%ecx
    277e:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
    2781:	48 83 c0 01          	add    $0x1,%rax
    2785:	49 39 c6             	cmp    %rax,%r14
    2788:	75 ee                	jne    2778 <heapsort+0x2c8>
    278a:	4d 29 f7             	sub    %r14,%r15
    278d:	49 83 fc 01          	cmp    $0x1,%r12
    2791:	0f 85 59 fe ff ff    	jne    25f0 <heapsort+0x140>
    2797:	4c 89 ef             	mov    %r13,%rdi
    279a:	e8 00 00 00 00       	call   279f <heapsort+0x2ef>
			279b: R_X86_64_PLT32	free-0x4
    279f:	31 c0                	xor    %eax,%eax
    27a1:	48 83 c4 48          	add    $0x48,%rsp
    27a5:	5b                   	pop    %rbx
    27a6:	41 5c                	pop    %r12
    27a8:	41 5d                	pop    %r13
    27aa:	41 5e                	pop    %r14
    27ac:	41 5f                	pop    %r15
    27ae:	5d                   	pop    %rbp
    27af:	c3                   	ret    
    27b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    27b5:	eb ea                	jmp    27a1 <heapsort+0x2f1>
    27b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    27be:	00 00 

00000000000027c0 <heapsort_r>:
    27c0:	55                   	push   %rbp
    27c1:	48 89 e5             	mov    %rsp,%rbp
    27c4:	41 57                	push   %r15
    27c6:	41 56                	push   %r14
    27c8:	41 55                	push   %r13
    27ca:	41 54                	push   %r12
    27cc:	53                   	push   %rbx
    27cd:	48 83 ec 48          	sub    $0x48,%rsp
    27d1:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    27d5:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    27d9:	48 83 fe 01          	cmp    $0x1,%rsi
    27dd:	0f 86 33 03 00 00    	jbe    2b16 <heapsort_r+0x356>
    27e3:	49 89 d6             	mov    %rdx,%r14
    27e6:	48 85 d2             	test   %rdx,%rdx
    27e9:	0f 84 3d 03 00 00    	je     2b2c <heapsort_r+0x36c>
    27ef:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    27f3:	48 89 d7             	mov    %rdx,%rdi
    27f6:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    27fa:	e8 00 00 00 00       	call   27ff <heapsort_r+0x3f>
			27fb: R_X86_64_PLT32	malloc-0x4
    27ff:	48 85 c0             	test   %rax,%rax
    2802:	0f 84 24 03 00 00    	je     2b2c <heapsort_r+0x36c>
    2808:	4c 8b 5d b8          	mov    -0x48(%rbp),%r11
    280c:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    2810:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    2814:	4c 89 f0             	mov    %r14,%rax
    2817:	4c 89 d3             	mov    %r10,%rbx
    281a:	4c 89 5d 98          	mov    %r11,-0x68(%rbp)
    281e:	4d 89 dd             	mov    %r11,%r13
    2821:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
    2825:	48 d1 eb             	shr    %rbx
    2828:	4d 29 f5             	sub    %r14,%r13
    282b:	49 89 de             	mov    %rbx,%r14
    282e:	48 89 c3             	mov    %rax,%rbx
    2831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2838:	4f 8d 14 36          	lea    (%r14,%r14,1),%r10
    283c:	4d 89 f3             	mov    %r14,%r11
    283f:	4c 39 55 b8          	cmp    %r10,-0x48(%rbp)
    2843:	0f 82 be 00 00 00    	jb     2907 <heapsort_r+0x147>
    2849:	4c 89 75 a8          	mov    %r14,-0x58(%rbp)
    284d:	49 89 df             	mov    %rbx,%r15
    2850:	4d 89 d6             	mov    %r10,%r14
    2853:	4c 89 db             	mov    %r11,%rbx
    2856:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    285d:	00 00 00 
    2860:	4c 89 f9             	mov    %r15,%rcx
    2863:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2867:	49 0f af ce          	imul   %r14,%rcx
    286b:	4d 8d 64 0d 00       	lea    0x0(%r13,%rcx,1),%r12
    2870:	49 39 c6             	cmp    %rax,%r14
    2873:	72 5b                	jb     28d0 <heapsort_r+0x110>
    2875:	4c 89 f1             	mov    %r14,%rcx
    2878:	49 0f af df          	imul   %r15,%rbx
    287c:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    2880:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2884:	4c 89 e6             	mov    %r12,%rsi
    2887:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    288b:	4c 01 eb             	add    %r13,%rbx
    288e:	48 89 da             	mov    %rbx,%rdx
    2891:	ff d0                	call   *%rax
    2893:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    2897:	85 c0                	test   %eax,%eax
    2899:	7e 65                	jle    2900 <heapsort_r+0x140>
    289b:	4b 8d 34 3c          	lea    (%r12,%r15,1),%rsi
    289f:	90                   	nop
    28a0:	0f b6 03             	movzbl (%rbx),%eax
    28a3:	41 0f b6 14 24       	movzbl (%r12),%edx
    28a8:	49 83 c4 01          	add    $0x1,%r12
    28ac:	48 83 c3 01          	add    $0x1,%rbx
    28b0:	88 53 ff             	mov    %dl,-0x1(%rbx)
    28b3:	41 88 44 24 ff       	mov    %al,-0x1(%r12)
    28b8:	4c 39 e6             	cmp    %r12,%rsi
    28bb:	75 e3                	jne    28a0 <heapsort_r+0xe0>
    28bd:	4c 8d 34 09          	lea    (%rcx,%rcx,1),%r14
    28c1:	4c 39 75 b8          	cmp    %r14,-0x48(%rbp)
    28c5:	72 39                	jb     2900 <heapsort_r+0x140>
    28c7:	48 89 cb             	mov    %rcx,%rbx
    28ca:	eb 94                	jmp    2860 <heapsort_r+0xa0>
    28cc:	0f 1f 40 00          	nopl   0x0(%rax)
    28d0:	4b 8d 04 3c          	lea    (%r12,%r15,1),%rax
    28d4:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    28d8:	4c 89 e6             	mov    %r12,%rsi
    28db:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    28df:	48 89 c2             	mov    %rax,%rdx
    28e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    28e6:	ff d0                	call   *%rax
    28e8:	85 c0                	test   %eax,%eax
    28ea:	79 89                	jns    2875 <heapsort_r+0xb5>
    28ec:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    28f0:	49 8d 4e 01          	lea    0x1(%r14),%rcx
    28f4:	eb 82                	jmp    2878 <heapsort_r+0xb8>
    28f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28fd:	00 00 00 
    2900:	4c 8b 75 a8          	mov    -0x58(%rbp),%r14
    2904:	4c 89 fb             	mov    %r15,%rbx
    2907:	49 83 ee 01          	sub    $0x1,%r14
    290b:	0f 85 27 ff ff ff    	jne    2838 <heapsort_r+0x78>
    2911:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
    2915:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    2919:	49 89 de             	mov    %rbx,%r14
    291c:	4d 89 ec             	mov    %r13,%r12
    291f:	4c 8b 5d 98          	mov    -0x68(%rbp),%r11
    2923:	4c 89 d2             	mov    %r10,%rdx
    2926:	49 89 ff             	mov    %rdi,%r15
    2929:	48 0f af d3          	imul   %rbx,%rdx
    292d:	4c 01 ea             	add    %r13,%rdx
    2930:	31 c0                	xor    %eax,%eax
    2932:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2938:	0f b6 0c 02          	movzbl (%rdx,%rax,1),%ecx
    293c:	41 88 0c 07          	mov    %cl,(%r15,%rax,1)
    2940:	48 83 c0 01          	add    $0x1,%rax
    2944:	4c 39 f0             	cmp    %r14,%rax
    2947:	75 ef                	jne    2938 <heapsort_r+0x178>
    2949:	31 c0                	xor    %eax,%eax
    294b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2950:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
    2955:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
    2958:	48 83 c0 01          	add    $0x1,%rax
    295c:	4c 39 f0             	cmp    %r14,%rax
    295f:	75 ef                	jne    2950 <heapsort_r+0x190>
    2961:	49 83 ea 01          	sub    $0x1,%r10
    2965:	49 83 fa 01          	cmp    $0x1,%r10
    2969:	0f 84 b8 01 00 00    	je     2b27 <heapsort_r+0x367>
    296f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    2973:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    2979:	4c 89 f3             	mov    %r14,%rbx
    297c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    2982:	4c 89 5d a0          	mov    %r11,-0x60(%rbp)
    2986:	4d 89 e6             	mov    %r12,%r14
    2989:	4d 89 d4             	mov    %r10,%r12
    298c:	4c 89 7d 90          	mov    %r15,-0x70(%rbp)
    2990:	4d 89 c7             	mov    %r8,%r15
    2993:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2998:	49 89 d9             	mov    %rbx,%r9
    299b:	4d 0f af cf          	imul   %r15,%r9
    299f:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    29a3:	4b 8d 34 0e          	lea    (%r14,%r9,1),%rsi
    29a7:	4d 39 e7             	cmp    %r12,%r15
    29aa:	72 34                	jb     29e0 <heapsort_r+0x220>
    29ac:	49 89 f1             	mov    %rsi,%r9
    29af:	4c 89 f8             	mov    %r15,%rax
    29b2:	4c 0f af eb          	imul   %rbx,%r13
    29b6:	31 d2                	xor    %edx,%edx
    29b8:	4d 01 f5             	add    %r14,%r13
    29bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    29c0:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
    29c4:	41 88 4c 15 00       	mov    %cl,0x0(%r13,%rdx,1)
    29c9:	48 83 c2 01          	add    $0x1,%rdx
    29cd:	48 39 da             	cmp    %rbx,%rdx
    29d0:	75 ee                	jne    29c0 <heapsort_r+0x200>
    29d2:	4c 8d 3c 00          	lea    (%rax,%rax,1),%r15
    29d6:	4d 39 fc             	cmp    %r15,%r12
    29d9:	72 45                	jb     2a20 <heapsort_r+0x260>
    29db:	49 89 c5             	mov    %rax,%r13
    29de:	eb b8                	jmp    2998 <heapsort_r+0x1d8>
    29e0:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    29e4:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    29e8:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    29ec:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    29f0:	48 89 c2             	mov    %rax,%rdx
    29f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    29f7:	ff d0                	call   *%rax
    29f9:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    29fd:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2a01:	85 c0                	test   %eax,%eax
    2a03:	79 a7                	jns    29ac <heapsort_r+0x1ec>
    2a05:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    2a09:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    2a0d:	49 8d 47 01          	lea    0x1(%r15),%rax
    2a11:	49 01 f9             	add    %rdi,%r9
    2a14:	eb 9c                	jmp    29b2 <heapsort_r+0x1f2>
    2a16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a1d:	00 00 00 
    2a20:	4d 89 e2             	mov    %r12,%r10
    2a23:	49 89 c5             	mov    %rax,%r13
    2a26:	4d 89 f4             	mov    %r14,%r12
    2a29:	49 89 de             	mov    %rbx,%r14
    2a2c:	49 d1 ed             	shr    %r13
    2a2f:	4c 89 f1             	mov    %r14,%rcx
    2a32:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    2a36:	4c 8b 7d 90          	mov    -0x70(%rbp),%r15
    2a3a:	49 0f af cd          	imul   %r13,%rcx
    2a3e:	4c 8b 5d a0          	mov    -0x60(%rbp),%r11
    2a42:	4c 89 cb             	mov    %r9,%rbx
    2a45:	4c 01 e1             	add    %r12,%rcx
    2a48:	48 83 f8 01          	cmp    $0x1,%rax
    2a4c:	0f 84 9a 00 00 00    	je     2aec <heapsort_r+0x32c>
    2a52:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    2a56:	4c 89 e3             	mov    %r12,%rbx
    2a59:	4d 89 cc             	mov    %r9,%r12
    2a5c:	4c 89 5d a8          	mov    %r11,-0x58(%rbp)
    2a60:	4c 89 55 a0          	mov    %r10,-0x60(%rbp)
    2a64:	4c 89 7d b8          	mov    %r15,-0x48(%rbp)
    2a68:	4d 89 f7             	mov    %r14,%r15
    2a6b:	49 89 ce             	mov    %rcx,%r14
    2a6e:	66 90                	xchg   %ax,%ax
    2a70:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    2a74:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2a78:	4c 89 f2             	mov    %r14,%rdx
    2a7b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2a7f:	ff d0                	call   *%rax
    2a81:	85 c0                	test   %eax,%eax
    2a83:	78 4b                	js     2ad0 <heapsort_r+0x310>
    2a85:	31 c0                	xor    %eax,%eax
    2a87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2a8e:	00 00 
    2a90:	41 0f b6 14 06       	movzbl (%r14,%rax,1),%edx
    2a95:	41 88 14 04          	mov    %dl,(%r12,%rax,1)
    2a99:	48 83 c0 01          	add    $0x1,%rax
    2a9d:	49 39 c7             	cmp    %rax,%r15
    2aa0:	75 ee                	jne    2a90 <heapsort_r+0x2d0>
    2aa2:	4c 89 e8             	mov    %r13,%rax
    2aa5:	4d 89 f8             	mov    %r15,%r8
    2aa8:	4c 89 f9             	mov    %r15,%rcx
    2aab:	48 d1 e8             	shr    %rax
    2aae:	4d 0f af c5          	imul   %r13,%r8
    2ab2:	48 0f af c8          	imul   %rax,%rcx
    2ab6:	4e 8d 24 03          	lea    (%rbx,%r8,1),%r12
    2aba:	4c 8d 34 0b          	lea    (%rbx,%rcx,1),%r14
    2abe:	49 83 fd 01          	cmp    $0x1,%r13
    2ac2:	74 0c                	je     2ad0 <heapsort_r+0x310>
    2ac4:	49 89 c5             	mov    %rax,%r13
    2ac7:	eb a7                	jmp    2a70 <heapsort_r+0x2b0>
    2ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2ad0:	4c 89 e0             	mov    %r12,%rax
    2ad3:	4d 89 fe             	mov    %r15,%r14
    2ad6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    2ada:	4c 8b 5d a8          	mov    -0x58(%rbp),%r11
    2ade:	4c 8b 55 a0          	mov    -0x60(%rbp),%r10
    2ae2:	4c 8b 7d b8          	mov    -0x48(%rbp),%r15
    2ae6:	49 89 dc             	mov    %rbx,%r12
    2ae9:	48 89 c3             	mov    %rax,%rbx
    2aec:	31 c0                	xor    %eax,%eax
    2aee:	66 90                	xchg   %ax,%ax
    2af0:	41 0f b6 0c 07       	movzbl (%r15,%rax,1),%ecx
    2af5:	88 0c 03             	mov    %cl,(%rbx,%rax,1)
    2af8:	48 83 c0 01          	add    $0x1,%rax
    2afc:	49 39 c6             	cmp    %rax,%r14
    2aff:	75 ef                	jne    2af0 <heapsort_r+0x330>
    2b01:	4c 29 f2             	sub    %r14,%rdx
    2b04:	49 83 fa 01          	cmp    $0x1,%r10
    2b08:	0f 85 22 fe ff ff    	jne    2930 <heapsort_r+0x170>
    2b0e:	4c 89 ff             	mov    %r15,%rdi
    2b11:	e8 00 00 00 00       	call   2b16 <heapsort_r+0x356>
			2b12: R_X86_64_PLT32	free-0x4
    2b16:	31 c0                	xor    %eax,%eax
    2b18:	48 83 c4 48          	add    $0x48,%rsp
    2b1c:	5b                   	pop    %rbx
    2b1d:	41 5c                	pop    %r12
    2b1f:	41 5d                	pop    %r13
    2b21:	41 5e                	pop    %r14
    2b23:	41 5f                	pop    %r15
    2b25:	5d                   	pop    %rbp
    2b26:	c3                   	ret    
    2b27:	4c 89 db             	mov    %r11,%rbx
    2b2a:	eb c0                	jmp    2aec <heapsort_r+0x32c>
    2b2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2b31:	eb e5                	jmp    2b18 <heapsort_r+0x358>
    2b33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b3a:	00 00 00 
    2b3d:	0f 1f 00             	nopl   (%rax)

0000000000002b40 <imaxabs>:
    2b40:	48 89 f8             	mov    %rdi,%rax
    2b43:	48 f7 d8             	neg    %rax
    2b46:	48 0f 48 c7          	cmovs  %rdi,%rax
    2b4a:	c3                   	ret    
    2b4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002b50 <imaxdiv>:
    2b50:	48 89 f8             	mov    %rdi,%rax
    2b53:	48 99                	cqto   
    2b55:	48 f7 fe             	idiv   %rsi
    2b58:	c3                   	ret    
    2b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002b60 <labs>:
    2b60:	48 89 f8             	mov    %rdi,%rax
    2b63:	48 f7 d8             	neg    %rax
    2b66:	48 0f 48 c7          	cmovs  %rdi,%rax
    2b6a:	c3                   	ret    
    2b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002b70 <ldiv>:
    2b70:	48 89 f8             	mov    %rdi,%rax
    2b73:	48 99                	cqto   
    2b75:	48 f7 fe             	idiv   %rsi
    2b78:	c3                   	ret    
    2b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002b80 <llabs>:
    2b80:	48 89 f8             	mov    %rdi,%rax
    2b83:	48 f7 d8             	neg    %rax
    2b86:	48 0f 48 c7          	cmovs  %rdi,%rax
    2b8a:	c3                   	ret    
    2b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002b90 <lldiv>:
    2b90:	48 89 f8             	mov    %rdi,%rax
    2b93:	48 99                	cqto   
    2b95:	48 f7 fe             	idiv   %rsi
    2b98:	c3                   	ret    
    2b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002ba0 <_qsort>:
    2ba0:	55                   	push   %rbp
    2ba1:	49 89 d3             	mov    %rdx,%r11
    2ba4:	48 89 e5             	mov    %rsp,%rbp
    2ba7:	41 57                	push   %r15
    2ba9:	41 56                	push   %r14
    2bab:	41 55                	push   %r13
    2bad:	49 89 cd             	mov    %rcx,%r13
    2bb0:	41 54                	push   %r12
    2bb2:	49 89 fc             	mov    %rdi,%r12
    2bb5:	41 8d 78 ff          	lea    -0x1(%r8),%edi
    2bb9:	53                   	push   %rbx
    2bba:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    2bc1:	89 7d 84             	mov    %edi,-0x7c(%rbp)
    2bc4:	48 89 d7             	mov    %rdx,%rdi
    2bc7:	48 c1 ef 03          	shr    $0x3,%rdi
    2bcb:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
    2bcf:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    2bd3:	48 89 d7             	mov    %rdx,%rdi
    2bd6:	48 f7 df             	neg    %rdi
    2bd9:	45 85 c0             	test   %r8d,%r8d
    2bdc:	0f 8e b7 03 00 00    	jle    2f99 <_qsort+0x3f9>
    2be2:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    2be6:	48 89 fb             	mov    %rdi,%rbx
    2be9:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    2bed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2bf1:	c7 45 c0 02 00 00 00 	movl   $0x2,-0x40(%rbp)
    2bf8:	4c 09 e0             	or     %r12,%rax
    2bfb:	a8 07                	test   $0x7,%al
    2bfd:	0f 84 e1 07 00 00    	je     33e4 <_qsort+0x844>
    2c03:	48 83 7d 88 06       	cmpq   $0x6,-0x78(%rbp)
    2c08:	0f 86 ee 07 00 00    	jbe    33fc <_qsort+0x85c>
    2c0e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2c12:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    2c16:	48 89 c2             	mov    %rax,%rdx
    2c19:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
    2c1d:	48 d1 ea             	shr    %rdx
    2c20:	4c 0f af cf          	imul   %rdi,%r9
    2c24:	48 0f af d7          	imul   %rdi,%rdx
    2c28:	4d 01 e1             	add    %r12,%r9
    2c2b:	4d 8d 2c 14          	lea    (%r12,%rdx,1),%r13
    2c2f:	48 83 f8 07          	cmp    $0x7,%rax
    2c33:	0f 84 47 01 00 00    	je     2d80 <_qsort+0x1e0>
    2c39:	48 83 f8 28          	cmp    $0x28,%rax
    2c3d:	0f 86 8e 05 00 00    	jbe    31d1 <_qsort+0x631>
    2c43:	48 c1 e8 03          	shr    $0x3,%rax
    2c47:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    2c4b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    2c4f:	48 0f af f8          	imul   %rax,%rdi
    2c53:	49 8d 04 7c          	lea    (%r12,%rdi,2),%rax
    2c57:	4d 8d 3c 3c          	lea    (%r12,%rdi,1),%r15
    2c5b:	49 89 fe             	mov    %rdi,%r14
    2c5e:	4c 89 e7             	mov    %r12,%rdi
    2c61:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2c65:	4c 89 fe             	mov    %r15,%rsi
    2c68:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
    2c6c:	ff d2                	call   *%rdx
    2c6e:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    2c72:	85 c0                	test   %eax,%eax
    2c74:	0f 88 62 09 00 00    	js     35dc <_qsort+0xa3c>
    2c7a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    2c7e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2c82:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    2c86:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    2c8a:	41 ff d7             	call   *%r15
    2c8d:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    2c91:	85 c0                	test   %eax,%eax
    2c93:	0f 8e 06 0a 00 00    	jle    369f <_qsort+0xaff>
    2c99:	4c 89 f7             	mov    %r14,%rdi
    2c9c:	4d 89 ef             	mov    %r13,%r15
    2c9f:	4b 8d 44 35 00       	lea    0x0(%r13,%r14,1),%rax
    2ca4:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
    2ca8:	48 f7 df             	neg    %rdi
    2cab:	4d 29 f7             	sub    %r14,%r15
    2cae:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2cb2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    2cb6:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    2cba:	4c 89 ee             	mov    %r13,%rsi
    2cbd:	4c 89 ff             	mov    %r15,%rdi
    2cc0:	ff d2                	call   *%rdx
    2cc2:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    2cc6:	85 c0                	test   %eax,%eax
    2cc8:	0f 88 7e 09 00 00    	js     364c <_qsort+0xaac>
    2cce:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    2cd2:	4c 8b 75 a8          	mov    -0x58(%rbp),%r14
    2cd6:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
    2cda:	4c 89 ef             	mov    %r13,%rdi
    2cdd:	41 ff d6             	call   *%r14
    2ce0:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    2ce4:	85 c0                	test   %eax,%eax
    2ce6:	0f 8e 98 09 00 00    	jle    3684 <_qsort+0xae4>
    2cec:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2cf0:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2cf4:	4d 8d 34 01          	lea    (%r9,%rax,1),%r14
    2cf8:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
    2cfc:	4c 89 f6             	mov    %r14,%rsi
    2cff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2d03:	4c 89 ff             	mov    %r15,%rdi
    2d06:	ff d0                	call   *%rax
    2d08:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2d0c:	85 c0                	test   %eax,%eax
    2d0e:	4c 89 ce             	mov    %r9,%rsi
    2d11:	0f 88 02 09 00 00    	js     3619 <_qsort+0xa79>
    2d17:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2d1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2d1f:	4c 89 f7             	mov    %r14,%rdi
    2d22:	ff d0                	call   *%rax
    2d24:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2d28:	85 c0                	test   %eax,%eax
    2d2a:	7f 19                	jg     2d45 <_qsort+0x1a5>
    2d2c:	4c 89 ce             	mov    %r9,%rsi
    2d2f:	4c 89 ff             	mov    %r15,%rdi
    2d32:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2d36:	ff d0                	call   *%rax
    2d38:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2d3c:	85 c0                	test   %eax,%eax
    2d3e:	4d 0f 49 f9          	cmovns %r9,%r15
    2d42:	4d 89 fe             	mov    %r15,%r14
    2d45:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2d49:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    2d4d:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2d51:	4c 89 ee             	mov    %r13,%rsi
    2d54:	41 ff d7             	call   *%r15
    2d57:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2d5b:	85 c0                	test   %eax,%eax
    2d5d:	0f 88 4d 06 00 00    	js     33b0 <_qsort+0x810>
    2d63:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    2d67:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    2d6b:	4c 89 f6             	mov    %r14,%rsi
    2d6e:	4c 89 ef             	mov    %r13,%rdi
    2d71:	41 ff d7             	call   *%r15
    2d74:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    2d78:	85 c0                	test   %eax,%eax
    2d7a:	0f 8e 3e 08 00 00    	jle    35be <_qsort+0xa1e>
    2d80:	8b 7d c0             	mov    -0x40(%rbp),%edi
    2d83:	85 ff                	test   %edi,%edi
    2d85:	0f 85 fd 03 00 00    	jne    3188 <_qsort+0x5e8>
    2d8b:	49 8b 04 24          	mov    (%r12),%rax
    2d8f:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    2d93:	49 89 0c 24          	mov    %rcx,(%r12)
    2d97:	49 89 45 00          	mov    %rax,0x0(%r13)
    2d9b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2d9f:	4c 01 e0             	add    %r12,%rax
    2da2:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    2da9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    2db0:	45 31 f6             	xor    %r14d,%r14d
    2db3:	4d 89 cd             	mov    %r9,%r13
    2db6:	4c 89 75 b8          	mov    %r14,-0x48(%rbp)
    2dba:	4d 89 ce             	mov    %r9,%r14
    2dbd:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    2dc4:	49 89 c7             	mov    %rax,%r15
    2dc7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    2dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2dd0:	4c 89 f9             	mov    %r15,%rcx
    2dd3:	4d 39 fe             	cmp    %r15,%r14
    2dd6:	0f 82 d4 00 00 00    	jb     2eb0 <_qsort+0x310>
    2ddc:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
    2de0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2de4:	4c 89 e6             	mov    %r12,%rsi
    2de7:	4c 89 ff             	mov    %r15,%rdi
    2dea:	ff d0                	call   *%rax
    2dec:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2df0:	85 c0                	test   %eax,%eax
    2df2:	0f 8e 70 02 00 00    	jle    3068 <_qsort+0x4c8>
    2df8:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    2dfc:	4d 89 ec             	mov    %r13,%r12
    2dff:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    2e03:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    2e07:	eb 2c                	jmp    2e35 <_qsort+0x295>
    2e09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2e10:	49 8b 06             	mov    (%r14),%rax
    2e13:	49 8b 0c 24          	mov    (%r12),%rcx
    2e17:	49 89 0e             	mov    %rcx,(%r14)
    2e1a:	49 89 04 24          	mov    %rax,(%r12)
    2e1e:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    2e25:	00 
    2e26:	49 01 dc             	add    %rbx,%r12
    2e29:	49 01 de             	add    %rbx,%r14
    2e2c:	4d 39 fe             	cmp    %r15,%r14
    2e2f:	0f 82 db 01 00 00    	jb     3010 <_qsort+0x470>
    2e35:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2e39:	4c 89 f7             	mov    %r14,%rdi
    2e3c:	41 ff d5             	call   *%r13
    2e3f:	85 c0                	test   %eax,%eax
    2e41:	0f 88 79 01 00 00    	js     2fc0 <_qsort+0x420>
    2e47:	75 e0                	jne    2e29 <_qsort+0x289>
    2e49:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    2e4c:	85 c9                	test   %ecx,%ecx
    2e4e:	74 c0                	je     2e10 <_qsort+0x270>
    2e50:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    2e54:	74 32                	je     2e88 <_qsort+0x2e8>
    2e56:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    2e5a:	4c 89 e1             	mov    %r12,%rcx
    2e5d:	4c 89 f0             	mov    %r14,%rax
    2e60:	4d 8d 0c 3e          	lea    (%r14,%rdi,1),%r9
    2e64:	0f 1f 40 00          	nopl   0x0(%rax)
    2e68:	0f b6 10             	movzbl (%rax),%edx
    2e6b:	0f b6 31             	movzbl (%rcx),%esi
    2e6e:	48 83 c0 01          	add    $0x1,%rax
    2e72:	48 83 c1 01          	add    $0x1,%rcx
    2e76:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    2e7a:	88 51 ff             	mov    %dl,-0x1(%rcx)
    2e7d:	4c 39 c8             	cmp    %r9,%rax
    2e80:	75 e6                	jne    2e68 <_qsort+0x2c8>
    2e82:	eb 9a                	jmp    2e1e <_qsort+0x27e>
    2e84:	0f 1f 40 00          	nopl   0x0(%rax)
    2e88:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    2e8c:	31 c0                	xor    %eax,%eax
    2e8e:	66 90                	xchg   %ax,%ax
    2e90:	49 8b 14 c6          	mov    (%r14,%rax,8),%rdx
    2e94:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    2e98:	49 89 0c c6          	mov    %rcx,(%r14,%rax,8)
    2e9c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    2ea0:	48 83 c0 01          	add    $0x1,%rax
    2ea4:	48 39 f0             	cmp    %rsi,%rax
    2ea7:	75 e7                	jne    2e90 <_qsort+0x2f0>
    2ea9:	e9 70 ff ff ff       	jmp    2e1e <_qsort+0x27e>
    2eae:	66 90                	xchg   %ax,%ax
    2eb0:	4c 89 e8             	mov    %r13,%rax
    2eb3:	4d 89 f1             	mov    %r14,%r9
    2eb6:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    2eba:	4d 89 fd             	mov    %r15,%r13
    2ebd:	49 89 c7             	mov    %rax,%r15
    2ec0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    2ec4:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    2ec8:	4d 89 e8             	mov    %r13,%r8
    2ecb:	48 89 d0             	mov    %rdx,%rax
    2ece:	48 0f af c7          	imul   %rdi,%rax
    2ed2:	4d 8d 14 04          	lea    (%r12,%rax,1),%r10
    2ed6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2eda:	49 29 c0             	sub    %rax,%r8
    2edd:	4c 29 e0             	sub    %r12,%rax
    2ee0:	4c 39 c0             	cmp    %r8,%rax
    2ee3:	49 0f 47 c0          	cmova  %r8,%rax
    2ee7:	48 85 c0             	test   %rax,%rax
    2eea:	0f 85 2f 02 00 00    	jne    311f <_qsort+0x57f>
    2ef0:	4c 89 d6             	mov    %r10,%rsi
    2ef3:	4d 89 fb             	mov    %r15,%r11
    2ef6:	48 89 df             	mov    %rbx,%rdi
    2ef9:	48 29 d6             	sub    %rdx,%rsi
    2efc:	4d 29 cb             	sub    %r9,%r11
    2eff:	4c 29 fe             	sub    %r15,%rsi
    2f02:	4c 39 de             	cmp    %r11,%rsi
    2f05:	49 0f 47 f3          	cmova  %r11,%rsi
    2f09:	48 85 f6             	test   %rsi,%rsi
    2f0c:	74 41                	je     2f4f <_qsort+0x3af>
    2f0e:	4c 89 d0             	mov    %r10,%rax
    2f11:	48 29 f0             	sub    %rsi,%rax
    2f14:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    2f18:	0f 87 09 06 00 00    	ja     3527 <_qsort+0x987>
    2f1e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2f22:	48 c1 ee 03          	shr    $0x3,%rsi
    2f26:	48 89 f1             	mov    %rsi,%rcx
    2f29:	31 f6                	xor    %esi,%esi
    2f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2f30:	49 8b 54 f5 00       	mov    0x0(%r13,%rsi,8),%rdx
    2f35:	48 8b 3c f0          	mov    (%rax,%rsi,8),%rdi
    2f39:	49 89 7c f5 00       	mov    %rdi,0x0(%r13,%rsi,8)
    2f3e:	48 89 14 f0          	mov    %rdx,(%rax,%rsi,8)
    2f42:	48 83 c6 01          	add    $0x1,%rsi
    2f46:	48 39 ce             	cmp    %rcx,%rsi
    2f49:	75 e5                	jne    2f30 <_qsort+0x390>
    2f4b:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    2f4f:	4d 85 f6             	test   %r14,%r14
    2f52:	0f 84 85 02 00 00    	je     31dd <_qsort+0x63d>
    2f58:	4c 39 45 b0          	cmp    %r8,-0x50(%rbp)
    2f5c:	0f 82 a9 03 00 00    	jb     330b <_qsort+0x76b>
    2f62:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    2f66:	4c 39 df             	cmp    %r11,%rdi
    2f69:	0f 83 e3 03 00 00    	jae    3352 <_qsort+0x7b2>
    2f6f:	4c 89 d8             	mov    %r11,%rax
    2f72:	31 d2                	xor    %edx,%edx
    2f74:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
    2f78:	4d 29 f9             	sub    %r15,%r9
    2f7b:	48 f7 f7             	div    %rdi
    2f7e:	4f 8d 24 0a          	lea    (%r10,%r9,1),%r12
    2f82:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    2f86:	8b 45 84             	mov    -0x7c(%rbp),%eax
    2f89:	83 f8 ff             	cmp    $0xffffffff,%eax
    2f8c:	0f 85 5b fc ff ff    	jne    2bed <_qsort+0x4d>
    2f92:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    2f96:	49 89 fb             	mov    %rdi,%r11
    2f99:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    2f9d:	4c 89 e9             	mov    %r13,%rcx
    2fa0:	4c 89 e7             	mov    %r12,%rdi
    2fa3:	4c 89 da             	mov    %r11,%rdx
    2fa6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    2fad:	5b                   	pop    %rbx
    2fae:	41 5c                	pop    %r12
    2fb0:	41 5d                	pop    %r13
    2fb2:	41 5e                	pop    %r14
    2fb4:	41 5f                	pop    %r15
    2fb6:	5d                   	pop    %rbp
    2fb7:	e9 00 00 00 00       	jmp    2fbc <_qsort+0x41c>
			2fb8: R_X86_64_PLT32	heapsort-0x4
    2fbc:	0f 1f 40 00          	nopl   0x0(%rax)
    2fc0:	4d 89 e5             	mov    %r12,%r13
    2fc3:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    2fc7:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
    2fcb:	4d 39 fe             	cmp    %r15,%r14
    2fce:	0f 82 dc fe ff ff    	jb     2eb0 <_qsort+0x310>
    2fd4:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2fd7:	85 d2                	test   %edx,%edx
    2fd9:	75 55                	jne    3030 <_qsort+0x490>
    2fdb:	49 8b 07             	mov    (%r15),%rax
    2fde:	49 8b 16             	mov    (%r14),%rdx
    2fe1:	49 89 17             	mov    %rdx,(%r15)
    2fe4:	49 89 06             	mov    %rax,(%r14)
    2fe7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2feb:	4d 8d 14 07          	lea    (%r15,%rax,1),%r10
    2fef:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2ff3:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    2ffa:	00 
    2ffb:	49 29 c6             	sub    %rax,%r14
    2ffe:	4d 89 d7             	mov    %r10,%r15
    3001:	e9 ca fd ff ff       	jmp    2dd0 <_qsort+0x230>
    3006:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    300d:	00 00 00 
    3010:	4d 89 fd             	mov    %r15,%r13
    3013:	4d 89 f1             	mov    %r14,%r9
    3016:	4d 89 e7             	mov    %r12,%r15
    3019:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    301d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    3021:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
    3025:	e9 96 fe ff ff       	jmp    2ec0 <_qsort+0x320>
    302a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3030:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3034:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3038:	4c 89 f0             	mov    %r14,%rax
    303b:	4d 8d 14 3f          	lea    (%r15,%rdi,1),%r10
    303f:	74 6f                	je     30b0 <_qsort+0x510>
    3041:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3048:	0f b6 11             	movzbl (%rcx),%edx
    304b:	0f b6 30             	movzbl (%rax),%esi
    304e:	48 83 c1 01          	add    $0x1,%rcx
    3052:	48 83 c0 01          	add    $0x1,%rax
    3056:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
    305a:	88 50 ff             	mov    %dl,-0x1(%rax)
    305d:	4c 39 d1             	cmp    %r10,%rcx
    3060:	75 e6                	jne    3048 <_qsort+0x4a8>
    3062:	eb 8b                	jmp    2fef <_qsort+0x44f>
    3064:	0f 1f 40 00          	nopl   0x0(%rax)
    3068:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    306c:	4d 8d 14 3f          	lea    (%r15,%rdi,1),%r10
    3070:	75 8c                	jne    2ffe <_qsort+0x45e>
    3072:	8b 75 c0             	mov    -0x40(%rbp),%esi
    3075:	85 f6                	test   %esi,%esi
    3077:	75 6d                	jne    30e6 <_qsort+0x546>
    3079:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    307d:	49 8b 17             	mov    (%r15),%rdx
    3080:	48 8b 06             	mov    (%rsi),%rax
    3083:	48 89 16             	mov    %rdx,(%rsi)
    3086:	4c 8d 14 3e          	lea    (%rsi,%rdi,1),%r10
    308a:	49 89 07             	mov    %rax,(%r15)
    308d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3091:	4c 89 55 90          	mov    %r10,-0x70(%rbp)
    3095:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    309c:	00 
    309d:	4d 8d 14 07          	lea    (%r15,%rax,1),%r10
    30a1:	e9 58 ff ff ff       	jmp    2ffe <_qsort+0x45e>
    30a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    30ad:	00 00 00 
    30b0:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    30b4:	31 c0                	xor    %eax,%eax
    30b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    30bd:	00 00 00 
    30c0:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    30c4:	49 8b 0c c6          	mov    (%r14,%rax,8),%rcx
    30c8:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    30cc:	49 89 14 c6          	mov    %rdx,(%r14,%rax,8)
    30d0:	48 83 c0 01          	add    $0x1,%rax
    30d4:	48 39 c6             	cmp    %rax,%rsi
    30d7:	75 e7                	jne    30c0 <_qsort+0x520>
    30d9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    30dd:	4d 8d 14 07          	lea    (%r15,%rax,1),%r10
    30e1:	e9 09 ff ff ff       	jmp    2fef <_qsort+0x44f>
    30e6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    30ea:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    30ee:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    30f2:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    30f6:	0f 84 55 04 00 00    	je     3551 <_qsort+0x9b1>
    30fc:	0f 1f 40 00          	nopl   0x0(%rax)
    3100:	0f b6 10             	movzbl (%rax),%edx
    3103:	0f b6 31             	movzbl (%rcx),%esi
    3106:	48 83 c0 01          	add    $0x1,%rax
    310a:	48 83 c1 01          	add    $0x1,%rcx
    310e:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3112:	88 51 ff             	mov    %dl,-0x1(%rcx)
    3115:	49 39 c2             	cmp    %rax,%r10
    3118:	75 e6                	jne    3100 <_qsort+0x560>
    311a:	e9 6e ff ff ff       	jmp    308d <_qsort+0x4ed>
    311f:	4c 89 ee             	mov    %r13,%rsi
    3122:	48 29 c6             	sub    %rax,%rsi
    3125:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3129:	0f 87 a5 03 00 00    	ja     34d4 <_qsort+0x934>
    312f:	48 c1 e8 03          	shr    $0x3,%rax
    3133:	31 c9                	xor    %ecx,%ecx
    3135:	0f 1f 00             	nopl   (%rax)
    3138:	49 8b 14 cc          	mov    (%r12,%rcx,8),%rdx
    313c:	48 8b 3c ce          	mov    (%rsi,%rcx,8),%rdi
    3140:	49 89 3c cc          	mov    %rdi,(%r12,%rcx,8)
    3144:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    3148:	48 83 c1 01          	add    $0x1,%rcx
    314c:	48 39 c8             	cmp    %rcx,%rax
    314f:	75 e7                	jne    3138 <_qsort+0x598>
    3151:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3155:	4c 89 d1             	mov    %r10,%rcx
    3158:	4d 89 fb             	mov    %r15,%r11
    315b:	4d 29 cb             	sub    %r9,%r11
    315e:	48 29 c1             	sub    %rax,%rcx
    3161:	48 89 c7             	mov    %rax,%rdi
    3164:	4c 29 f9             	sub    %r15,%rcx
    3167:	48 f7 df             	neg    %rdi
    316a:	48 89 ce             	mov    %rcx,%rsi
    316d:	4c 39 d9             	cmp    %r11,%rcx
    3170:	49 0f 47 f3          	cmova  %r11,%rsi
    3174:	48 85 f6             	test   %rsi,%rsi
    3177:	0f 84 d2 fd ff ff    	je     2f4f <_qsort+0x3af>
    317d:	4c 89 d0             	mov    %r10,%rax
    3180:	48 29 f0             	sub    %rsi,%rax
    3183:	e9 96 fd ff ff       	jmp    2f1e <_qsort+0x37e>
    3188:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    318c:	4c 01 e0             	add    %r12,%rax
    318f:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3193:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    319a:	4c 89 e0             	mov    %r12,%rax
    319d:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
    31a4:	0f 84 e0 03 00 00    	je     358a <_qsort+0x9ea>
    31aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    31b0:	0f b6 10             	movzbl (%rax),%edx
    31b3:	41 0f b6 4d 00       	movzbl 0x0(%r13),%ecx
    31b8:	48 83 c0 01          	add    $0x1,%rax
    31bc:	49 83 c5 01          	add    $0x1,%r13
    31c0:	88 48 ff             	mov    %cl,-0x1(%rax)
    31c3:	41 88 55 ff          	mov    %dl,-0x1(%r13)
    31c7:	48 39 f0             	cmp    %rsi,%rax
    31ca:	75 e4                	jne    31b0 <_qsort+0x610>
    31cc:	e9 d8 fb ff ff       	jmp    2da9 <_qsort+0x209>
    31d1:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    31d5:	4d 89 ce             	mov    %r9,%r14
    31d8:	e9 68 fb ff ff       	jmp    2d45 <_qsort+0x1a5>
    31dd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    31e1:	48 c1 e8 02          	shr    $0x2,%rax
    31e5:	48 83 c0 01          	add    $0x1,%rax
    31e9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    31ed:	4c 39 95 78 ff ff ff 	cmp    %r10,-0x88(%rbp)
    31f4:	0f 83 58 01 00 00    	jae    3352 <_qsort+0x7b2>
    31fa:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    3201:	4c 89 55 88          	mov    %r10,-0x78(%rbp)
    3205:	45 31 ed             	xor    %r13d,%r13d
    3208:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
    320f:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
    3216:	4c 89 bd 60 ff ff ff 	mov    %r15,-0xa0(%rbp)
    321d:	4c 89 9d 70 ff ff ff 	mov    %r11,-0x90(%rbp)
    3224:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    3228:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
    322f:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    3233:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    3237:	4d 89 ec             	mov    %r13,%r12
    323a:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
    323e:	4d 89 e6             	mov    %r12,%r14
    3241:	49 89 df             	mov    %rbx,%r15
    3244:	48 89 d3             	mov    %rdx,%rbx
    3247:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    324b:	49 89 c4             	mov    %rax,%r12
    324e:	eb 22                	jmp    3272 <_qsort+0x6d2>
    3250:	4b 8b 44 3d 00       	mov    0x0(%r13,%r15,1),%rax
    3255:	49 8b 55 00          	mov    0x0(%r13),%rdx
    3259:	4b 89 54 3d 00       	mov    %rdx,0x0(%r13,%r15,1)
    325e:	49 89 45 00          	mov    %rax,0x0(%r13)
    3262:	49 83 c6 01          	add    $0x1,%r14
    3266:	4d 29 fc             	sub    %r15,%r12
    3269:	4c 39 75 a0          	cmp    %r14,-0x60(%rbp)
    326d:	72 67                	jb     32d6 <_qsort+0x736>
    326f:	4c 89 eb             	mov    %r13,%rbx
    3272:	48 39 5d c8          	cmp    %rbx,-0x38(%rbp)
    3276:	0f 83 14 01 00 00    	jae    3390 <_qsort+0x7f0>
    327c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3280:	48 89 de             	mov    %rbx,%rsi
    3283:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
    3287:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    328b:	4c 89 ef             	mov    %r13,%rdi
    328e:	ff d0                	call   *%rax
    3290:	85 c0                	test   %eax,%eax
    3292:	0f 8e f8 00 00 00    	jle    3390 <_qsort+0x7f0>
    3298:	8b 45 c0             	mov    -0x40(%rbp),%eax
    329b:	85 c0                	test   %eax,%eax
    329d:	74 b1                	je     3250 <_qsort+0x6b0>
    329f:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    32a3:	4c 89 e8             	mov    %r13,%rax
    32a6:	0f 84 b8 00 00 00    	je     3364 <_qsort+0x7c4>
    32ac:	0f 1f 40 00          	nopl   0x0(%rax)
    32b0:	0f b6 13             	movzbl (%rbx),%edx
    32b3:	0f b6 08             	movzbl (%rax),%ecx
    32b6:	48 83 c3 01          	add    $0x1,%rbx
    32ba:	48 83 c0 01          	add    $0x1,%rax
    32be:	88 4b ff             	mov    %cl,-0x1(%rbx)
    32c1:	88 50 ff             	mov    %dl,-0x1(%rax)
    32c4:	4c 39 e3             	cmp    %r12,%rbx
    32c7:	75 e7                	jne    32b0 <_qsort+0x710>
    32c9:	49 83 c6 01          	add    $0x1,%r14
    32cd:	4d 29 fc             	sub    %r15,%r12
    32d0:	4c 39 75 a0          	cmp    %r14,-0x60(%rbp)
    32d4:	73 99                	jae    326f <_qsort+0x6cf>
    32d6:	4c 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%r8
    32dd:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
    32e4:	4c 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%r15
    32eb:	4c 8b 55 88          	mov    -0x78(%rbp),%r10
    32ef:	4c 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%r11
    32f6:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
    32fa:	48 8b 9d 58 ff ff ff 	mov    -0xa8(%rbp),%rbx
    3301:	4c 39 45 b0          	cmp    %r8,-0x50(%rbp)
    3305:	0f 83 57 fc ff ff    	jae    2f62 <_qsort+0x3c2>
    330b:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    330f:	4c 89 c0             	mov    %r8,%rax
    3312:	31 d2                	xor    %edx,%edx
    3314:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
    3318:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    331c:	4c 89 5d b8          	mov    %r11,-0x48(%rbp)
    3320:	48 f7 f7             	div    %rdi
    3323:	4c 89 55 c0          	mov    %r10,-0x40(%rbp)
    3327:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    332b:	48 89 fa             	mov    %rdi,%rdx
    332e:	4c 89 e7             	mov    %r12,%rdi
    3331:	48 89 c6             	mov    %rax,%rsi
    3334:	e8 67 f8 ff ff       	call   2ba0 <_qsort>
    3339:	4c 8b 5d b8          	mov    -0x48(%rbp),%r11
    333d:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3341:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    3345:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    3349:	4c 39 df             	cmp    %r11,%rdi
    334c:	0f 82 1d fc ff ff    	jb     2f6f <_qsort+0x3cf>
    3352:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3359:	5b                   	pop    %rbx
    335a:	41 5c                	pop    %r12
    335c:	41 5d                	pop    %r13
    335e:	41 5e                	pop    %r14
    3360:	41 5f                	pop    %r15
    3362:	5d                   	pop    %rbp
    3363:	c3                   	ret    
    3364:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    3368:	31 c0                	xor    %eax,%eax
    336a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3370:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    3374:	49 8b 4c c5 00       	mov    0x0(%r13,%rax,8),%rcx
    3379:	48 89 0c c3          	mov    %rcx,(%rbx,%rax,8)
    337d:	49 89 54 c5 00       	mov    %rdx,0x0(%r13,%rax,8)
    3382:	48 83 c0 01          	add    $0x1,%rax
    3386:	48 39 c6             	cmp    %rax,%rsi
    3389:	75 e5                	jne    3370 <_qsort+0x7d0>
    338b:	e9 d2 fe ff ff       	jmp    3262 <_qsort+0x6c2>
    3390:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3394:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3398:	4d 89 f4             	mov    %r14,%r12
    339b:	4c 89 fb             	mov    %r15,%rbx
    339e:	48 39 c2             	cmp    %rax,%rdx
    33a1:	0f 82 93 fe ff ff    	jb     323a <_qsort+0x69a>
    33a7:	eb a9                	jmp    3352 <_qsort+0x7b2>
    33a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    33b0:	4c 89 f6             	mov    %r14,%rsi
    33b3:	4c 89 ef             	mov    %r13,%rdi
    33b6:	41 ff d7             	call   *%r15
    33b9:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    33bd:	85 c0                	test   %eax,%eax
    33bf:	0f 88 bb f9 ff ff    	js     2d80 <_qsort+0x1e0>
    33c5:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    33c9:	4c 89 f6             	mov    %r14,%rsi
    33cc:	41 ff d7             	call   *%r15
    33cf:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    33d3:	85 c0                	test   %eax,%eax
    33d5:	0f 88 f9 01 00 00    	js     35d4 <_qsort+0xa34>
    33db:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
    33df:	e9 9c f9 ff ff       	jmp    2d80 <_qsort+0x1e0>
    33e4:	31 c0                	xor    %eax,%eax
    33e6:	48 83 7d b0 08       	cmpq   $0x8,-0x50(%rbp)
    33eb:	0f 95 c0             	setne  %al
    33ee:	48 83 7d 88 06       	cmpq   $0x6,-0x78(%rbp)
    33f3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    33f6:	0f 87 12 f8 ff ff    	ja     2c0e <_qsort+0x6e>
    33fc:	4c 8b 5d b0          	mov    -0x50(%rbp),%r11
    3400:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3404:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    3408:	49 0f af c3          	imul   %r11,%rax
    340c:	4b 8d 3c 1c          	lea    (%r12,%r11,1),%rdi
    3410:	4c 89 db             	mov    %r11,%rbx
    3413:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    3417:	48 f7 db             	neg    %rbx
    341a:	4c 01 e0             	add    %r12,%rax
    341d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3421:	48 39 c7             	cmp    %rax,%rdi
    3424:	0f 83 28 ff ff ff    	jae    3352 <_qsort+0x7b2>
    342a:	4c 89 6d b8          	mov    %r13,-0x48(%rbp)
    342e:	4c 8b 75 98          	mov    -0x68(%rbp),%r14
    3432:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    3436:	4d 89 dc             	mov    %r11,%r12
    3439:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    343d:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    3441:	73 77                	jae    34ba <_qsort+0x91a>
    3443:	49 89 c5             	mov    %rax,%r13
    3446:	eb 1c                	jmp    3464 <_qsort+0x8c4>
    3448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    344f:	00 
    3450:	49 8b 07             	mov    (%r15),%rax
    3453:	49 8b 34 1f          	mov    (%r15,%rbx,1),%rsi
    3457:	49 89 37             	mov    %rsi,(%r15)
    345a:	49 89 04 1f          	mov    %rax,(%r15,%rbx,1)
    345e:	4c 39 6d c8          	cmp    %r13,-0x38(%rbp)
    3462:	73 56                	jae    34ba <_qsort+0x91a>
    3464:	4d 89 ef             	mov    %r13,%r15
    3467:	4d 29 e5             	sub    %r12,%r13
    346a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    346e:	4c 89 fe             	mov    %r15,%rsi
    3471:	4c 89 ef             	mov    %r13,%rdi
    3474:	ff d0                	call   *%rax
    3476:	85 c0                	test   %eax,%eax
    3478:	7e 40                	jle    34ba <_qsort+0x91a>
    347a:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
    347e:	45 85 c0             	test   %r8d,%r8d
    3481:	74 cd                	je     3450 <_qsort+0x8b0>
    3483:	83 7d c0 01          	cmpl   $0x1,-0x40(%rbp)
    3487:	4c 89 e8             	mov    %r13,%rax
    348a:	4f 8d 04 27          	lea    (%r15,%r12,1),%r8
    348e:	0f 84 3c 02 00 00    	je     36d0 <_qsort+0xb30>
    3494:	0f 1f 40 00          	nopl   0x0(%rax)
    3498:	41 0f b6 37          	movzbl (%r15),%esi
    349c:	0f b6 38             	movzbl (%rax),%edi
    349f:	49 83 c7 01          	add    $0x1,%r15
    34a3:	48 83 c0 01          	add    $0x1,%rax
    34a7:	41 88 7f ff          	mov    %dil,-0x1(%r15)
    34ab:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    34af:	4d 39 c7             	cmp    %r8,%r15
    34b2:	75 e4                	jne    3498 <_qsort+0x8f8>
    34b4:	4c 39 6d c8          	cmp    %r13,-0x38(%rbp)
    34b8:	72 aa                	jb     3464 <_qsort+0x8c4>
    34ba:	4c 01 65 b0          	add    %r12,-0x50(%rbp)
    34be:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    34c2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    34c6:	48 39 f8             	cmp    %rdi,%rax
    34c9:	0f 82 6a ff ff ff    	jb     3439 <_qsort+0x899>
    34cf:	e9 7e fe ff ff       	jmp    3352 <_qsort+0x7b2>
    34d4:	4c 01 e0             	add    %r12,%rax
    34d7:	4c 89 e7             	mov    %r12,%rdi
    34da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34e0:	0f b6 17             	movzbl (%rdi),%edx
    34e3:	44 0f b6 1e          	movzbl (%rsi),%r11d
    34e7:	48 83 c7 01          	add    $0x1,%rdi
    34eb:	48 83 c6 01          	add    $0x1,%rsi
    34ef:	44 88 5f ff          	mov    %r11b,-0x1(%rdi)
    34f3:	88 56 ff             	mov    %dl,-0x1(%rsi)
    34f6:	48 39 f8             	cmp    %rdi,%rax
    34f9:	75 e5                	jne    34e0 <_qsort+0x940>
    34fb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    34ff:	4c 89 d6             	mov    %r10,%rsi
    3502:	4d 89 fb             	mov    %r15,%r11
    3505:	48 89 df             	mov    %rbx,%rdi
    3508:	4d 29 cb             	sub    %r9,%r11
    350b:	48 29 c6             	sub    %rax,%rsi
    350e:	4c 29 fe             	sub    %r15,%rsi
    3511:	4c 39 de             	cmp    %r11,%rsi
    3514:	49 0f 47 f3          	cmova  %r11,%rsi
    3518:	48 85 f6             	test   %rsi,%rsi
    351b:	0f 84 2e fa ff ff    	je     2f4f <_qsort+0x3af>
    3521:	4c 89 d0             	mov    %r10,%rax
    3524:	48 29 f0             	sub    %rsi,%rax
    3527:	49 8d 54 35 00       	lea    0x0(%r13,%rsi,1),%rdx
    352c:	0f 1f 40 00          	nopl   0x0(%rax)
    3530:	0f b6 31             	movzbl (%rcx),%esi
    3533:	44 0f b6 28          	movzbl (%rax),%r13d
    3537:	48 83 c1 01          	add    $0x1,%rcx
    353b:	48 83 c0 01          	add    $0x1,%rax
    353f:	44 88 69 ff          	mov    %r13b,-0x1(%rcx)
    3543:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3547:	48 39 ca             	cmp    %rcx,%rdx
    354a:	75 e4                	jne    3530 <_qsort+0x990>
    354c:	e9 fe f9 ff ff       	jmp    2f4f <_qsort+0x3af>
    3551:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3555:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    3559:	31 c0                	xor    %eax,%eax
    355b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3560:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    3564:	49 8b 34 c7          	mov    (%r15,%rax,8),%rsi
    3568:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    356c:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    3570:	48 83 c0 01          	add    $0x1,%rax
    3574:	48 39 c7             	cmp    %rax,%rdi
    3577:	75 e7                	jne    3560 <_qsort+0x9c0>
    3579:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    357d:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    3581:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    3585:	e9 03 fb ff ff       	jmp    308d <_qsort+0x4ed>
    358a:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    358e:	31 c0                	xor    %eax,%eax
    3590:	49 8b 14 c4          	mov    (%r12,%rax,8),%rdx
    3594:	49 8b 4c c5 00       	mov    0x0(%r13,%rax,8),%rcx
    3599:	49 89 0c c4          	mov    %rcx,(%r12,%rax,8)
    359d:	49 89 54 c5 00       	mov    %rdx,0x0(%r13,%rax,8)
    35a2:	48 83 c0 01          	add    $0x1,%rax
    35a6:	48 39 c6             	cmp    %rax,%rsi
    35a9:	75 e5                	jne    3590 <_qsort+0x9f0>
    35ab:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    35af:	4c 01 e0             	add    %r12,%rax
    35b2:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    35b9:	e9 eb f7 ff ff       	jmp    2da9 <_qsort+0x209>
    35be:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    35c2:	4c 89 f6             	mov    %r14,%rsi
    35c5:	41 ff d7             	call   *%r15
    35c8:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    35cc:	85 c0                	test   %eax,%eax
    35ce:	0f 88 07 fe ff ff    	js     33db <_qsort+0x83b>
    35d4:	4d 89 f5             	mov    %r14,%r13
    35d7:	e9 a4 f7 ff ff       	jmp    2d80 <_qsort+0x1e0>
    35dc:	4c 89 ff             	mov    %r15,%rdi
    35df:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    35e3:	4c 8b 7d a8          	mov    -0x58(%rbp),%r15
    35e7:	41 ff d7             	call   *%r15
    35ea:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    35ee:	85 c0                	test   %eax,%eax
    35f0:	0f 88 a3 f6 ff ff    	js     2c99 <_qsort+0xf9>
    35f6:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    35fa:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    35fe:	4c 89 e7             	mov    %r12,%rdi
    3601:	41 ff d7             	call   *%r15
    3604:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    3608:	85 c0                	test   %eax,%eax
    360a:	0f 88 a9 00 00 00    	js     36b9 <_qsort+0xb19>
    3610:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
    3614:	e9 80 f6 ff ff       	jmp    2c99 <_qsort+0xf9>
    3619:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    361d:	4c 89 f7             	mov    %r14,%rdi
    3620:	ff d0                	call   *%rax
    3622:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    3626:	85 c0                	test   %eax,%eax
    3628:	0f 88 17 f7 ff ff    	js     2d45 <_qsort+0x1a5>
    362e:	4c 89 ce             	mov    %r9,%rsi
    3631:	4c 89 ff             	mov    %r15,%rdi
    3634:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3638:	ff d0                	call   *%rax
    363a:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    363e:	85 c0                	test   %eax,%eax
    3640:	4d 0f 48 f9          	cmovs  %r9,%r15
    3644:	4d 89 fe             	mov    %r15,%r14
    3647:	e9 f9 f6 ff ff       	jmp    2d45 <_qsort+0x1a5>
    364c:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
    3650:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    3654:	4c 89 ef             	mov    %r13,%rdi
    3657:	4c 89 f6             	mov    %r14,%rsi
    365a:	ff d2                	call   *%rdx
    365c:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    3660:	85 c0                	test   %eax,%eax
    3662:	0f 88 84 f6 ff ff    	js     2cec <_qsort+0x14c>
    3668:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    366c:	4c 89 f6             	mov    %r14,%rsi
    366f:	4c 89 ff             	mov    %r15,%rdi
    3672:	ff d2                	call   *%rdx
    3674:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    3678:	85 c0                	test   %eax,%eax
    367a:	78 1a                	js     3696 <_qsort+0xaf6>
    367c:	4d 89 fd             	mov    %r15,%r13
    367f:	e9 68 f6 ff ff       	jmp    2cec <_qsort+0x14c>
    3684:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    3688:	4c 89 ff             	mov    %r15,%rdi
    368b:	41 ff d6             	call   *%r14
    368e:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    3692:	85 c0                	test   %eax,%eax
    3694:	78 e6                	js     367c <_qsort+0xadc>
    3696:	4c 8b 6d b8          	mov    -0x48(%rbp),%r13
    369a:	e9 4d f6 ff ff       	jmp    2cec <_qsort+0x14c>
    369f:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    36a3:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    36a7:	4c 89 e7             	mov    %r12,%rdi
    36aa:	41 ff d7             	call   *%r15
    36ad:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    36b1:	85 c0                	test   %eax,%eax
    36b3:	0f 88 57 ff ff ff    	js     3610 <_qsort+0xa70>
    36b9:	4b 8d 04 74          	lea    (%r12,%r14,2),%rax
    36bd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    36c1:	e9 d3 f5 ff ff       	jmp    2c99 <_qsort+0xf9>
    36c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    36cd:	00 00 00 
    36d0:	31 c0                	xor    %eax,%eax
    36d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    36d8:	49 8b 34 c7          	mov    (%r15,%rax,8),%rsi
    36dc:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    36e1:	49 89 3c c7          	mov    %rdi,(%r15,%rax,8)
    36e5:	49 89 74 c5 00       	mov    %rsi,0x0(%r13,%rax,8)
    36ea:	48 83 c0 01          	add    $0x1,%rax
    36ee:	4c 39 f0             	cmp    %r14,%rax
    36f1:	75 e5                	jne    36d8 <_qsort+0xb38>
    36f3:	e9 66 fd ff ff       	jmp    345e <_qsort+0x8be>
    36f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    36ff:	00 

0000000000003700 <qsort>:
    3700:	55                   	push   %rbp
    3701:	48 89 e5             	mov    %rsp,%rbp
    3704:	41 56                	push   %r14
    3706:	49 89 ce             	mov    %rcx,%r14
    3709:	41 55                	push   %r13
    370b:	49 89 d5             	mov    %rdx,%r13
    370e:	41 54                	push   %r12
    3710:	49 89 fc             	mov    %rdi,%r12
    3713:	48 89 f7             	mov    %rsi,%rdi
    3716:	53                   	push   %rbx
    3717:	48 89 f3             	mov    %rsi,%rbx
    371a:	e8 00 00 00 00       	call   371f <qsort+0x1f>
			371b: R_X86_64_PLT32	flsl-0x4
    371f:	4c 89 f1             	mov    %r14,%rcx
    3722:	4c 89 ea             	mov    %r13,%rdx
    3725:	48 89 de             	mov    %rbx,%rsi
    3728:	4c 89 e7             	mov    %r12,%rdi
    372b:	5b                   	pop    %rbx
    372c:	44 8d 44 00 fe       	lea    -0x2(%rax,%rax,1),%r8d
    3731:	41 5c                	pop    %r12
    3733:	41 5d                	pop    %r13
    3735:	41 5e                	pop    %r14
    3737:	5d                   	pop    %rbp
    3738:	e9 63 f4 ff ff       	jmp    2ba0 <_qsort>
    373d:	0f 1f 00             	nopl   (%rax)

0000000000003740 <_qsort>:
    3740:	55                   	push   %rbp
    3741:	49 89 d3             	mov    %rdx,%r11
    3744:	48 89 e5             	mov    %rsp,%rbp
    3747:	41 57                	push   %r15
    3749:	41 56                	push   %r14
    374b:	49 89 fe             	mov    %rdi,%r14
    374e:	41 8d 79 ff          	lea    -0x1(%r9),%edi
    3752:	41 55                	push   %r13
    3754:	41 54                	push   %r12
    3756:	53                   	push   %rbx
    3757:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    375e:	89 bd 74 ff ff ff    	mov    %edi,-0x8c(%rbp)
    3764:	48 89 d7             	mov    %rdx,%rdi
    3767:	48 c1 ef 03          	shr    $0x3,%rdi
    376b:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
    3772:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    3776:	48 89 d7             	mov    %rdx,%rdi
    3779:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    377d:	48 f7 df             	neg    %rdi
    3780:	4c 89 45 a0          	mov    %r8,-0x60(%rbp)
    3784:	45 85 c9             	test   %r9d,%r9d
    3787:	0f 8e d9 03 00 00    	jle    3b66 <_qsort+0x426>
    378d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    3791:	48 89 fb             	mov    %rdi,%rbx
    3794:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3798:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    379f:	4c 09 f0             	or     %r14,%rax
    37a2:	a8 07                	test   $0x7,%al
    37a4:	0f 84 08 08 00 00    	je     3fb2 <_qsort+0x872>
    37aa:	48 83 bd 78 ff ff ff 	cmpq   $0x6,-0x88(%rbp)
    37b1:	06 
    37b2:	0f 86 15 08 00 00    	jbe    3fcd <_qsort+0x88d>
    37b8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    37bf:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    37c3:	48 89 c1             	mov    %rax,%rcx
    37c6:	4c 8d 50 ff          	lea    -0x1(%rax),%r10
    37ca:	4c 0f af d7          	imul   %rdi,%r10
    37ce:	48 d1 e9             	shr    %rcx
    37d1:	48 0f af cf          	imul   %rdi,%rcx
    37d5:	4b 8d 34 16          	lea    (%r14,%r10,1),%rsi
    37d9:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
    37dd:	4d 8d 24 0e          	lea    (%r14,%rcx,1),%r12
    37e1:	48 83 f8 07          	cmp    $0x7,%rax
    37e5:	0f 84 39 01 00 00    	je     3924 <_qsort+0x1e4>
    37eb:	48 83 f8 28          	cmp    $0x28,%rax
    37ef:	0f 86 af 05 00 00    	jbe    3da4 <_qsort+0x664>
    37f5:	48 c1 e8 03          	shr    $0x3,%rax
    37f9:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    37fd:	4c 89 f6             	mov    %r14,%rsi
    3800:	48 0f af f8          	imul   %rax,%rdi
    3804:	49 8d 04 7e          	lea    (%r14,%rdi,2),%rax
    3808:	4d 8d 3c 3e          	lea    (%r14,%rdi,1),%r15
    380c:	49 89 fd             	mov    %rdi,%r13
    380f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3813:	4c 89 fa             	mov    %r15,%rdx
    3816:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    381a:	4c 89 7d c0          	mov    %r15,-0x40(%rbp)
    381e:	ff d1                	call   *%rcx
    3820:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3824:	85 c0                	test   %eax,%eax
    3826:	0f 88 8e 09 00 00    	js     41ba <_qsort+0xa7a>
    382c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    3830:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3834:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    3838:	41 ff d7             	call   *%r15
    383b:	85 c0                	test   %eax,%eax
    383d:	0f 8e 3a 0a 00 00    	jle    427d <_qsort+0xb3d>
    3843:	4c 89 ef             	mov    %r13,%rdi
    3846:	4d 89 e7             	mov    %r12,%r15
    3849:	4b 8d 04 2c          	lea    (%r12,%r13,1),%rax
    384d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    3851:	48 f7 df             	neg    %rdi
    3854:	4d 29 ef             	sub    %r13,%r15
    3857:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    385b:	4c 89 e2             	mov    %r12,%rdx
    385e:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
    3862:	4c 89 fe             	mov    %r15,%rsi
    3865:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3869:	ff d1                	call   *%rcx
    386b:	85 c0                	test   %eax,%eax
    386d:	0f 88 b7 09 00 00    	js     422a <_qsort+0xaea>
    3873:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3877:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    387b:	4c 89 e6             	mov    %r12,%rsi
    387e:	4c 8b 6d a0          	mov    -0x60(%rbp),%r13
    3882:	41 ff d5             	call   *%r13
    3885:	85 c0                	test   %eax,%eax
    3887:	0f 8e d5 09 00 00    	jle    4262 <_qsort+0xb22>
    388d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3891:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
    3895:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3899:	49 01 c5             	add    %rax,%r13
    389c:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    38a1:	4c 89 ea             	mov    %r13,%rdx
    38a4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    38a8:	4c 89 7d b0          	mov    %r15,-0x50(%rbp)
    38ac:	4c 89 fe             	mov    %r15,%rsi
    38af:	ff d0                	call   *%rax
    38b1:	85 c0                	test   %eax,%eax
    38b3:	0f 88 36 09 00 00    	js     41ef <_qsort+0xaaf>
    38b9:	4c 8b 7d 98          	mov    -0x68(%rbp),%r15
    38bd:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    38c1:	4c 89 ee             	mov    %r13,%rsi
    38c4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    38c8:	4c 89 fa             	mov    %r15,%rdx
    38cb:	ff d0                	call   *%rax
    38cd:	85 c0                	test   %eax,%eax
    38cf:	7f 20                	jg     38f1 <_qsort+0x1b1>
    38d1:	4d 89 fd             	mov    %r15,%r13
    38d4:	4c 89 fa             	mov    %r15,%rdx
    38d7:	4c 8b 7d b0          	mov    -0x50(%rbp),%r15
    38db:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    38df:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    38e3:	4c 89 fe             	mov    %r15,%rsi
    38e6:	ff d0                	call   *%rax
    38e8:	85 c0                	test   %eax,%eax
    38ea:	4d 0f 49 fd          	cmovns %r13,%r15
    38ee:	4d 89 fd             	mov    %r15,%r13
    38f1:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    38f5:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    38f9:	4c 89 e2             	mov    %r12,%rdx
    38fc:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    3900:	41 ff d7             	call   *%r15
    3903:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3907:	4c 89 ea             	mov    %r13,%rdx
    390a:	4c 89 e6             	mov    %r12,%rsi
    390d:	85 c0                	test   %eax,%eax
    390f:	0f 88 73 06 00 00    	js     3f88 <_qsort+0x848>
    3915:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    3919:	41 ff d7             	call   *%r15
    391c:	85 c0                	test   %eax,%eax
    391e:	0f 8e 78 08 00 00    	jle    419c <_qsort+0xa5c>
    3924:	44 8b 45 b8          	mov    -0x48(%rbp),%r8d
    3928:	45 85 c0             	test   %r8d,%r8d
    392b:	0f 85 be 03 00 00    	jne    3cef <_qsort+0x5af>
    3931:	49 8b 06             	mov    (%r14),%rax
    3934:	49 8b 14 24          	mov    (%r12),%rdx
    3938:	49 89 16             	mov    %rdx,(%r14)
    393b:	49 89 04 24          	mov    %rax,(%r12)
    393f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3943:	4c 01 f0             	add    %r14,%rax
    3946:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    394d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    3954:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    3958:	45 31 e4             	xor    %r12d,%r12d
    395b:	4c 89 65 b0          	mov    %r12,-0x50(%rbp)
    395f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    3966:	49 89 c7             	mov    %rax,%r15
    3969:	49 89 fc             	mov    %rdi,%r12
    396c:	49 89 fd             	mov    %rdi,%r13
    396f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    3973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3978:	4c 89 f9             	mov    %r15,%rcx
    397b:	4d 39 fc             	cmp    %r15,%r12
    397e:	0f 82 ec 00 00 00    	jb     3a70 <_qsort+0x330>
    3984:	4c 89 7d c0          	mov    %r15,-0x40(%rbp)
    3988:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    398c:	4c 89 f2             	mov    %r14,%rdx
    398f:	4c 89 fe             	mov    %r15,%rsi
    3992:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3996:	ff d0                	call   *%rax
    3998:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    399c:	85 c0                	test   %eax,%eax
    399e:	0f 8e 9c 02 00 00    	jle    3c40 <_qsort+0x500>
    39a4:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    39a8:	4d 89 ee             	mov    %r13,%r14
    39ab:	4d 89 e5             	mov    %r12,%r13
    39ae:	4c 8b 65 a0          	mov    -0x60(%rbp),%r12
    39b2:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    39b6:	eb 2d                	jmp    39e5 <_qsort+0x2a5>
    39b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    39bf:	00 
    39c0:	49 8b 45 00          	mov    0x0(%r13),%rax
    39c4:	49 8b 16             	mov    (%r14),%rdx
    39c7:	49 89 55 00          	mov    %rdx,0x0(%r13)
    39cb:	49 89 06             	mov    %rax,(%r14)
    39ce:	48 c7 45 b0 01 00 00 	movq   $0x1,-0x50(%rbp)
    39d5:	00 
    39d6:	49 01 de             	add    %rbx,%r14
    39d9:	49 01 dd             	add    %rbx,%r13
    39dc:	4d 39 fd             	cmp    %r15,%r13
    39df:	0f 82 03 02 00 00    	jb     3be8 <_qsort+0x4a8>
    39e5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    39e9:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    39ed:	4c 89 ee             	mov    %r13,%rsi
    39f0:	41 ff d4             	call   *%r12
    39f3:	85 c0                	test   %eax,%eax
    39f5:	0f 88 9d 01 00 00    	js     3b98 <_qsort+0x458>
    39fb:	75 dc                	jne    39d9 <_qsort+0x299>
    39fd:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    3a00:	85 c9                	test   %ecx,%ecx
    3a02:	74 bc                	je     39c0 <_qsort+0x280>
    3a04:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3a08:	74 36                	je     3a40 <_qsort+0x300>
    3a0a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3a0e:	4c 89 f2             	mov    %r14,%rdx
    3a11:	4c 89 e8             	mov    %r13,%rax
    3a14:	4d 8d 4c 3d 00       	lea    0x0(%r13,%rdi,1),%r9
    3a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3a20:	0f b6 08             	movzbl (%rax),%ecx
    3a23:	0f b6 32             	movzbl (%rdx),%esi
    3a26:	48 83 c0 01          	add    $0x1,%rax
    3a2a:	48 83 c2 01          	add    $0x1,%rdx
    3a2e:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3a32:	88 4a ff             	mov    %cl,-0x1(%rdx)
    3a35:	4c 39 c8             	cmp    %r9,%rax
    3a38:	75 e6                	jne    3a20 <_qsort+0x2e0>
    3a3a:	eb 92                	jmp    39ce <_qsort+0x28e>
    3a3c:	0f 1f 40 00          	nopl   0x0(%rax)
    3a40:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    3a44:	31 c0                	xor    %eax,%eax
    3a46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3a4d:	00 00 00 
    3a50:	49 8b 54 c5 00       	mov    0x0(%r13,%rax,8),%rdx
    3a55:	49 8b 0c c6          	mov    (%r14,%rax,8),%rcx
    3a59:	49 89 4c c5 00       	mov    %rcx,0x0(%r13,%rax,8)
    3a5e:	49 89 14 c6          	mov    %rdx,(%r14,%rax,8)
    3a62:	48 83 c0 01          	add    $0x1,%rax
    3a66:	48 39 f0             	cmp    %rsi,%rax
    3a69:	75 e5                	jne    3a50 <_qsort+0x310>
    3a6b:	e9 5e ff ff ff       	jmp    39ce <_qsort+0x28e>
    3a70:	4c 89 e8             	mov    %r13,%rax
    3a73:	4c 89 65 98          	mov    %r12,-0x68(%rbp)
    3a77:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    3a7b:	4d 89 fd             	mov    %r15,%r13
    3a7e:	49 89 c7             	mov    %rax,%r15
    3a81:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    3a85:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
    3a8c:	48 89 f0             	mov    %rsi,%rax
    3a8f:	48 0f af c7          	imul   %rdi,%rax
    3a93:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    3a97:	4d 8d 1c 06          	lea    (%r14,%rax,1),%r11
    3a9b:	4c 89 e8             	mov    %r13,%rax
    3a9e:	48 29 f8             	sub    %rdi,%rax
    3aa1:	4c 29 f7             	sub    %r14,%rdi
    3aa4:	48 89 fa             	mov    %rdi,%rdx
    3aa7:	48 39 c7             	cmp    %rax,%rdi
    3aaa:	48 0f 47 d0          	cmova  %rax,%rdx
    3aae:	48 85 d2             	test   %rdx,%rdx
    3ab1:	0f 85 83 02 00 00    	jne    3d3a <_qsort+0x5fa>
    3ab7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    3abb:	4d 89 d8             	mov    %r11,%r8
    3abe:	4d 89 fa             	mov    %r15,%r10
    3ac1:	48 89 df             	mov    %rbx,%rdi
    3ac4:	49 29 f0             	sub    %rsi,%r8
    3ac7:	49 29 d2             	sub    %rdx,%r10
    3aca:	4d 29 f8             	sub    %r15,%r8
    3acd:	4d 39 d0             	cmp    %r10,%r8
    3ad0:	4d 0f 47 c2          	cmova  %r10,%r8
    3ad4:	4d 85 c0             	test   %r8,%r8
    3ad7:	74 3a                	je     3b13 <_qsort+0x3d3>
    3ad9:	4c 89 da             	mov    %r11,%rdx
    3adc:	4c 29 c2             	sub    %r8,%rdx
    3adf:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3ae3:	0f 87 1c 06 00 00    	ja     4105 <_qsort+0x9c5>
    3ae9:	4c 89 c1             	mov    %r8,%rcx
    3aec:	45 31 c0             	xor    %r8d,%r8d
    3aef:	48 c1 e9 03          	shr    $0x3,%rcx
    3af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3af8:	4b 8b 74 c5 00       	mov    0x0(%r13,%r8,8),%rsi
    3afd:	4e 8b 0c c2          	mov    (%rdx,%r8,8),%r9
    3b01:	4f 89 4c c5 00       	mov    %r9,0x0(%r13,%r8,8)
    3b06:	4a 89 34 c2          	mov    %rsi,(%rdx,%r8,8)
    3b0a:	49 83 c0 01          	add    $0x1,%r8
    3b0e:	49 39 c8             	cmp    %rcx,%r8
    3b11:	75 e5                	jne    3af8 <_qsort+0x3b8>
    3b13:	4d 85 e4             	test   %r12,%r12
    3b16:	0f 84 95 02 00 00    	je     3db1 <_qsort+0x671>
    3b1c:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    3b20:	0f 82 c1 03 00 00    	jb     3ee7 <_qsort+0x7a7>
    3b26:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3b2a:	4c 39 d7             	cmp    %r10,%rdi
    3b2d:	0f 83 f7 03 00 00    	jae    3f2a <_qsort+0x7ea>
    3b33:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3b37:	31 d2                	xor    %edx,%edx
    3b39:	83 ad 74 ff ff ff 01 	subl   $0x1,-0x8c(%rbp)
    3b40:	4c 29 f8             	sub    %r15,%rax
    3b43:	4d 8d 34 03          	lea    (%r11,%rax,1),%r14
    3b47:	4c 89 d0             	mov    %r10,%rax
    3b4a:	48 f7 f7             	div    %rdi
    3b4d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    3b54:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    3b5a:	83 f8 ff             	cmp    $0xffffffff,%eax
    3b5d:	0f 85 31 fc ff ff    	jne    3794 <_qsort+0x54>
    3b63:	49 89 fb             	mov    %rdi,%r11
    3b66:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
    3b6a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3b6e:	4c 89 f7             	mov    %r14,%rdi
    3b71:	4c 89 da             	mov    %r11,%rdx
    3b74:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
    3b7b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3b82:	5b                   	pop    %rbx
    3b83:	41 5c                	pop    %r12
    3b85:	41 5d                	pop    %r13
    3b87:	41 5e                	pop    %r14
    3b89:	41 5f                	pop    %r15
    3b8b:	5d                   	pop    %rbp
    3b8c:	e9 00 00 00 00       	jmp    3b91 <_qsort+0x451>
			3b8d: R_X86_64_PLT32	heapsort_r-0x4
    3b91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3b98:	4d 89 ec             	mov    %r13,%r12
    3b9b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    3b9f:	4d 89 f5             	mov    %r14,%r13
    3ba2:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
    3ba6:	4d 39 fc             	cmp    %r15,%r12
    3ba9:	0f 82 c1 fe ff ff    	jb     3a70 <_qsort+0x330>
    3baf:	8b 55 b8             	mov    -0x48(%rbp),%edx
    3bb2:	85 d2                	test   %edx,%edx
    3bb4:	75 52                	jne    3c08 <_qsort+0x4c8>
    3bb6:	49 8b 07             	mov    (%r15),%rax
    3bb9:	49 8b 14 24          	mov    (%r12),%rdx
    3bbd:	49 89 17             	mov    %rdx,(%r15)
    3bc0:	49 89 04 24          	mov    %rax,(%r12)
    3bc4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3bc8:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    3bcc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3bd0:	48 c7 45 b0 01 00 00 	movq   $0x1,-0x50(%rbp)
    3bd7:	00 
    3bd8:	49 29 c4             	sub    %rax,%r12
    3bdb:	49 89 ff             	mov    %rdi,%r15
    3bde:	e9 95 fd ff ff       	jmp    3978 <_qsort+0x238>
    3be3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3be8:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    3bec:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    3bf0:	4c 89 6d 98          	mov    %r13,-0x68(%rbp)
    3bf4:	4d 89 fd             	mov    %r15,%r13
    3bf7:	4d 89 f7             	mov    %r14,%r15
    3bfa:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
    3bfe:	e9 7e fe ff ff       	jmp    3a81 <_qsort+0x341>
    3c03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3c08:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3c0c:	4c 89 e0             	mov    %r12,%rax
    3c0f:	4c 01 ff             	add    %r15,%rdi
    3c12:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3c16:	74 68                	je     3c80 <_qsort+0x540>
    3c18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3c1f:	00 
    3c20:	0f b6 11             	movzbl (%rcx),%edx
    3c23:	0f b6 30             	movzbl (%rax),%esi
    3c26:	48 83 c1 01          	add    $0x1,%rcx
    3c2a:	48 83 c0 01          	add    $0x1,%rax
    3c2e:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
    3c32:	88 50 ff             	mov    %dl,-0x1(%rax)
    3c35:	48 39 f9             	cmp    %rdi,%rcx
    3c38:	75 e6                	jne    3c20 <_qsort+0x4e0>
    3c3a:	eb 90                	jmp    3bcc <_qsort+0x48c>
    3c3c:	0f 1f 40 00          	nopl   0x0(%rax)
    3c40:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    3c44:	49 8d 3c 37          	lea    (%r15,%rsi,1),%rdi
    3c48:	75 91                	jne    3bdb <_qsort+0x49b>
    3c4a:	8b 7d b8             	mov    -0x48(%rbp),%edi
    3c4d:	85 ff                	test   %edi,%edi
    3c4f:	75 65                	jne    3cb6 <_qsort+0x576>
    3c51:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    3c55:	49 8b 17             	mov    (%r15),%rdx
    3c58:	48 8b 07             	mov    (%rdi),%rax
    3c5b:	48 89 17             	mov    %rdx,(%rdi)
    3c5e:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
    3c62:	49 89 07             	mov    %rax,(%r15)
    3c65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3c69:	4c 89 55 80          	mov    %r10,-0x80(%rbp)
    3c6d:	48 c7 45 b0 01 00 00 	movq   $0x1,-0x50(%rbp)
    3c74:	00 
    3c75:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    3c79:	e9 5d ff ff ff       	jmp    3bdb <_qsort+0x49b>
    3c7e:	66 90                	xchg   %ax,%ax
    3c80:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    3c84:	31 c0                	xor    %eax,%eax
    3c86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3c8d:	00 00 00 
    3c90:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    3c94:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    3c98:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    3c9c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    3ca0:	48 83 c0 01          	add    $0x1,%rax
    3ca4:	48 39 c6             	cmp    %rax,%rsi
    3ca7:	75 e7                	jne    3c90 <_qsort+0x550>
    3ca9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3cad:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    3cb1:	e9 16 ff ff ff       	jmp    3bcc <_qsort+0x48c>
    3cb6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3cba:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3cbe:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3cc2:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    3cc6:	0f 84 66 04 00 00    	je     4132 <_qsort+0x9f2>
    3ccc:	0f 1f 40 00          	nopl   0x0(%rax)
    3cd0:	0f b6 10             	movzbl (%rax),%edx
    3cd3:	0f b6 31             	movzbl (%rcx),%esi
    3cd6:	48 83 c0 01          	add    $0x1,%rax
    3cda:	48 83 c1 01          	add    $0x1,%rcx
    3cde:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    3ce2:	88 51 ff             	mov    %dl,-0x1(%rcx)
    3ce5:	49 39 c2             	cmp    %rax,%r10
    3ce8:	75 e6                	jne    3cd0 <_qsort+0x590>
    3cea:	e9 76 ff ff ff       	jmp    3c65 <_qsort+0x525>
    3cef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3cf3:	4c 01 f0             	add    %r14,%rax
    3cf6:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3cfa:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3d01:	4c 89 f0             	mov    %r14,%rax
    3d04:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
    3d0b:	0f 84 59 04 00 00    	je     416a <_qsort+0xa2a>
    3d11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3d18:	0f b6 10             	movzbl (%rax),%edx
    3d1b:	41 0f b6 0c 24       	movzbl (%r12),%ecx
    3d20:	48 83 c0 01          	add    $0x1,%rax
    3d24:	49 83 c4 01          	add    $0x1,%r12
    3d28:	88 48 ff             	mov    %cl,-0x1(%rax)
    3d2b:	41 88 54 24 ff       	mov    %dl,-0x1(%r12)
    3d30:	48 39 f0             	cmp    %rsi,%rax
    3d33:	75 e3                	jne    3d18 <_qsort+0x5d8>
    3d35:	e9 13 fc ff ff       	jmp    394d <_qsort+0x20d>
    3d3a:	4c 89 ef             	mov    %r13,%rdi
    3d3d:	48 29 d7             	sub    %rdx,%rdi
    3d40:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3d44:	0f 87 61 03 00 00    	ja     40ab <_qsort+0x96b>
    3d4a:	48 c1 ea 03          	shr    $0x3,%rdx
    3d4e:	31 c9                	xor    %ecx,%ecx
    3d50:	49 8b 34 ce          	mov    (%r14,%rcx,8),%rsi
    3d54:	4c 8b 04 cf          	mov    (%rdi,%rcx,8),%r8
    3d58:	4d 89 04 ce          	mov    %r8,(%r14,%rcx,8)
    3d5c:	48 89 34 cf          	mov    %rsi,(%rdi,%rcx,8)
    3d60:	48 83 c1 01          	add    $0x1,%rcx
    3d64:	48 39 ca             	cmp    %rcx,%rdx
    3d67:	75 e7                	jne    3d50 <_qsort+0x610>
    3d69:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    3d6d:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    3d71:	4d 89 fa             	mov    %r15,%r10
    3d74:	49 29 ca             	sub    %rcx,%r10
    3d77:	4c 89 d9             	mov    %r11,%rcx
    3d7a:	48 89 f7             	mov    %rsi,%rdi
    3d7d:	48 29 f1             	sub    %rsi,%rcx
    3d80:	48 f7 df             	neg    %rdi
    3d83:	4c 29 f9             	sub    %r15,%rcx
    3d86:	4c 39 d1             	cmp    %r10,%rcx
    3d89:	49 0f 47 ca          	cmova  %r10,%rcx
    3d8d:	49 89 c8             	mov    %rcx,%r8
    3d90:	48 85 c9             	test   %rcx,%rcx
    3d93:	0f 84 7a fd ff ff    	je     3b13 <_qsort+0x3d3>
    3d99:	4c 89 da             	mov    %r11,%rdx
    3d9c:	4c 29 c2             	sub    %r8,%rdx
    3d9f:	e9 45 fd ff ff       	jmp    3ae9 <_qsort+0x3a9>
    3da4:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    3da8:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
    3dac:	e9 40 fb ff ff       	jmp    38f1 <_qsort+0x1b1>
    3db1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    3db8:	48 c1 ea 02          	shr    $0x2,%rdx
    3dbc:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    3dc0:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    3dc4:	4c 39 9d 68 ff ff ff 	cmp    %r11,-0x98(%rbp)
    3dcb:	0f 83 59 01 00 00    	jae    3f2a <_qsort+0x7ea>
    3dd1:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    3dd8:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    3ddc:	45 31 ed             	xor    %r13d,%r13d
    3ddf:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    3de6:	4c 89 bd 58 ff ff ff 	mov    %r15,-0xa8(%rbp)
    3ded:	4c 89 9d 78 ff ff ff 	mov    %r11,-0x88(%rbp)
    3df4:	4c 89 95 60 ff ff ff 	mov    %r10,-0xa0(%rbp)
    3dfb:	48 89 9d 50 ff ff ff 	mov    %rbx,-0xb0(%rbp)
    3e02:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    3e06:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    3e0a:	4d 89 ee             	mov    %r13,%r14
    3e0d:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
    3e11:	49 89 df             	mov    %rbx,%r15
    3e14:	4d 89 f5             	mov    %r14,%r13
    3e17:	48 89 d3             	mov    %rdx,%rbx
    3e1a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    3e1e:	49 89 c6             	mov    %rax,%r14
    3e21:	eb 25                	jmp    3e48 <_qsort+0x708>
    3e23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e28:	4b 8b 04 3c          	mov    (%r12,%r15,1),%rax
    3e2c:	49 8b 14 24          	mov    (%r12),%rdx
    3e30:	4b 89 14 3c          	mov    %rdx,(%r12,%r15,1)
    3e34:	49 89 04 24          	mov    %rax,(%r12)
    3e38:	49 83 c5 01          	add    $0x1,%r13
    3e3c:	4d 29 fe             	sub    %r15,%r14
    3e3f:	4c 39 6d 90          	cmp    %r13,-0x70(%rbp)
    3e43:	72 71                	jb     3eb6 <_qsort+0x776>
    3e45:	4c 89 e3             	mov    %r12,%rbx
    3e48:	48 39 5d c0          	cmp    %rbx,-0x40(%rbp)
    3e4c:	0f 83 14 01 00 00    	jae    3f66 <_qsort+0x826>
    3e52:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    3e56:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3e5a:	48 89 da             	mov    %rbx,%rdx
    3e5d:	4c 8d 24 03          	lea    (%rbx,%rax,1),%r12
    3e61:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    3e65:	4c 89 e6             	mov    %r12,%rsi
    3e68:	ff d0                	call   *%rax
    3e6a:	85 c0                	test   %eax,%eax
    3e6c:	0f 8e f4 00 00 00    	jle    3f66 <_qsort+0x826>
    3e72:	8b 45 b8             	mov    -0x48(%rbp),%eax
    3e75:	85 c0                	test   %eax,%eax
    3e77:	74 af                	je     3e28 <_qsort+0x6e8>
    3e79:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    3e7d:	4c 89 e0             	mov    %r12,%rax
    3e80:	0f 84 b6 00 00 00    	je     3f3c <_qsort+0x7fc>
    3e86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3e8d:	00 00 00 
    3e90:	0f b6 13             	movzbl (%rbx),%edx
    3e93:	0f b6 08             	movzbl (%rax),%ecx
    3e96:	48 83 c3 01          	add    $0x1,%rbx
    3e9a:	48 83 c0 01          	add    $0x1,%rax
    3e9e:	88 4b ff             	mov    %cl,-0x1(%rbx)
    3ea1:	88 50 ff             	mov    %dl,-0x1(%rax)
    3ea4:	4c 39 f3             	cmp    %r14,%rbx
    3ea7:	75 e7                	jne    3e90 <_qsort+0x750>
    3ea9:	49 83 c5 01          	add    $0x1,%r13
    3ead:	4d 29 fe             	sub    %r15,%r14
    3eb0:	4c 39 6d 90          	cmp    %r13,-0x70(%rbp)
    3eb4:	73 8f                	jae    3e45 <_qsort+0x705>
    3eb6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    3ebd:	4c 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%r15
    3ec4:	4c 8b 9d 78 ff ff ff 	mov    -0x88(%rbp),%r11
    3ecb:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
    3ed2:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
    3ed6:	48 8b 9d 50 ff ff ff 	mov    -0xb0(%rbp),%rbx
    3edd:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    3ee1:	0f 83 3f fc ff ff    	jae    3b26 <_qsort+0x3e6>
    3ee7:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3eeb:	31 d2                	xor    %edx,%edx
    3eed:	4c 8b 45 a0          	mov    -0x60(%rbp),%r8
    3ef1:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
    3ef5:	44 8b 8d 74 ff ff ff 	mov    -0x8c(%rbp),%r9d
    3efc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3f00:	4c 89 5d c0          	mov    %r11,-0x40(%rbp)
    3f04:	48 f7 f7             	div    %rdi
    3f07:	48 89 fa             	mov    %rdi,%rdx
    3f0a:	4c 89 f7             	mov    %r14,%rdi
    3f0d:	48 89 c6             	mov    %rax,%rsi
    3f10:	e8 2b f8 ff ff       	call   3740 <_qsort>
    3f15:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
    3f19:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    3f1d:	4c 8b 5d c0          	mov    -0x40(%rbp),%r11
    3f21:	4c 39 d7             	cmp    %r10,%rdi
    3f24:	0f 82 09 fc ff ff    	jb     3b33 <_qsort+0x3f3>
    3f2a:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3f31:	5b                   	pop    %rbx
    3f32:	41 5c                	pop    %r12
    3f34:	41 5d                	pop    %r13
    3f36:	41 5e                	pop    %r14
    3f38:	41 5f                	pop    %r15
    3f3a:	5d                   	pop    %rbp
    3f3b:	c3                   	ret    
    3f3c:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    3f40:	31 c0                	xor    %eax,%eax
    3f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3f48:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    3f4c:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    3f50:	48 89 0c c3          	mov    %rcx,(%rbx,%rax,8)
    3f54:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    3f58:	48 83 c0 01          	add    $0x1,%rax
    3f5c:	48 39 c6             	cmp    %rax,%rsi
    3f5f:	75 e7                	jne    3f48 <_qsort+0x808>
    3f61:	e9 d2 fe ff ff       	jmp    3e38 <_qsort+0x6f8>
    3f66:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    3f6a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    3f71:	4d 89 ee             	mov    %r13,%r14
    3f74:	4c 89 fb             	mov    %r15,%rbx
    3f77:	48 39 c2             	cmp    %rax,%rdx
    3f7a:	0f 82 8d fe ff ff    	jb     3e0d <_qsort+0x6cd>
    3f80:	eb a8                	jmp    3f2a <_qsort+0x7ea>
    3f82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3f88:	41 ff d7             	call   *%r15
    3f8b:	85 c0                	test   %eax,%eax
    3f8d:	0f 88 91 f9 ff ff    	js     3924 <_qsort+0x1e4>
    3f93:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    3f97:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    3f9b:	4c 89 ea             	mov    %r13,%rdx
    3f9e:	41 ff d7             	call   *%r15
    3fa1:	85 c0                	test   %eax,%eax
    3fa3:	0f 88 09 02 00 00    	js     41b2 <_qsort+0xa72>
    3fa9:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    3fad:	e9 72 f9 ff ff       	jmp    3924 <_qsort+0x1e4>
    3fb2:	31 c0                	xor    %eax,%eax
    3fb4:	48 83 7d a8 08       	cmpq   $0x8,-0x58(%rbp)
    3fb9:	0f 95 c0             	setne  %al
    3fbc:	48 83 bd 78 ff ff ff 	cmpq   $0x6,-0x88(%rbp)
    3fc3:	06 
    3fc4:	89 45 b8             	mov    %eax,-0x48(%rbp)
    3fc7:	0f 87 eb f7 ff ff    	ja     37b8 <_qsort+0x78>
    3fcd:	4c 8b 5d a8          	mov    -0x58(%rbp),%r11
    3fd1:	4c 8b a5 78 ff ff ff 	mov    -0x88(%rbp),%r12
    3fd8:	4d 0f af e3          	imul   %r11,%r12
    3fdc:	4c 89 db             	mov    %r11,%rbx
    3fdf:	4f 8d 3c 1e          	lea    (%r14,%r11,1),%r15
    3fe3:	48 f7 db             	neg    %rbx
    3fe6:	4b 8d 04 26          	lea    (%r14,%r12,1),%rax
    3fea:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3fee:	49 39 c7             	cmp    %rax,%r15
    3ff1:	0f 83 33 ff ff ff    	jae    3f2a <_qsort+0x7ea>
    3ff7:	4c 8b 65 88          	mov    -0x78(%rbp),%r12
    3ffb:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    3fff:	4c 89 f8             	mov    %r15,%rax
    4002:	4d 89 de             	mov    %r11,%r14
    4005:	49 89 df             	mov    %rbx,%r15
    4008:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    400c:	0f 83 84 00 00 00    	jae    4096 <_qsort+0x956>
    4012:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4016:	48 89 c3             	mov    %rax,%rbx
    4019:	eb 1d                	jmp    4038 <_qsort+0x8f8>
    401b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4020:	49 8b 45 00          	mov    0x0(%r13),%rax
    4024:	4b 8b 74 3d 00       	mov    0x0(%r13,%r15,1),%rsi
    4029:	49 89 75 00          	mov    %rsi,0x0(%r13)
    402d:	4b 89 44 3d 00       	mov    %rax,0x0(%r13,%r15,1)
    4032:	48 39 5d c0          	cmp    %rbx,-0x40(%rbp)
    4036:	73 5a                	jae    4092 <_qsort+0x952>
    4038:	49 89 dd             	mov    %rbx,%r13
    403b:	4c 29 f3             	sub    %r14,%rbx
    403e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4042:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4046:	4c 89 ea             	mov    %r13,%rdx
    4049:	48 89 de             	mov    %rbx,%rsi
    404c:	ff d0                	call   *%rax
    404e:	85 c0                	test   %eax,%eax
    4050:	7e 40                	jle    4092 <_qsort+0x952>
    4052:	44 8b 4d b8          	mov    -0x48(%rbp),%r9d
    4056:	45 85 c9             	test   %r9d,%r9d
    4059:	74 c5                	je     4020 <_qsort+0x8e0>
    405b:	83 7d b8 01          	cmpl   $0x1,-0x48(%rbp)
    405f:	48 89 d8             	mov    %rbx,%rax
    4062:	4f 8d 44 35 00       	lea    0x0(%r13,%r14,1),%r8
    4067:	0f 84 33 02 00 00    	je     42a0 <_qsort+0xb60>
    406d:	0f 1f 00             	nopl   (%rax)
    4070:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
    4075:	0f b6 08             	movzbl (%rax),%ecx
    4078:	49 83 c5 01          	add    $0x1,%r13
    407c:	48 83 c0 01          	add    $0x1,%rax
    4080:	41 88 4d ff          	mov    %cl,-0x1(%r13)
    4084:	88 50 ff             	mov    %dl,-0x1(%rax)
    4087:	4d 39 c5             	cmp    %r8,%r13
    408a:	75 e4                	jne    4070 <_qsort+0x930>
    408c:	48 39 5d c0          	cmp    %rbx,-0x40(%rbp)
    4090:	72 a6                	jb     4038 <_qsort+0x8f8>
    4092:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4096:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    409a:	4c 01 f0             	add    %r14,%rax
    409d:	48 39 f8             	cmp    %rdi,%rax
    40a0:	0f 82 62 ff ff ff    	jb     4008 <_qsort+0x8c8>
    40a6:	e9 7f fe ff ff       	jmp    3f2a <_qsort+0x7ea>
    40ab:	4c 01 f2             	add    %r14,%rdx
    40ae:	4d 89 f0             	mov    %r14,%r8
    40b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    40b8:	41 0f b6 30          	movzbl (%r8),%esi
    40bc:	44 0f b6 0f          	movzbl (%rdi),%r9d
    40c0:	49 83 c0 01          	add    $0x1,%r8
    40c4:	48 83 c7 01          	add    $0x1,%rdi
    40c8:	45 88 48 ff          	mov    %r9b,-0x1(%r8)
    40cc:	40 88 77 ff          	mov    %sil,-0x1(%rdi)
    40d0:	4c 39 c2             	cmp    %r8,%rdx
    40d3:	75 e3                	jne    40b8 <_qsort+0x978>
    40d5:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    40d9:	4d 89 fa             	mov    %r15,%r10
    40dc:	4d 89 d8             	mov    %r11,%r8
    40df:	48 89 df             	mov    %rbx,%rdi
    40e2:	49 29 f2             	sub    %rsi,%r10
    40e5:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    40e9:	49 29 f0             	sub    %rsi,%r8
    40ec:	4d 29 f8             	sub    %r15,%r8
    40ef:	4d 39 d0             	cmp    %r10,%r8
    40f2:	4d 0f 47 c2          	cmova  %r10,%r8
    40f6:	4d 85 c0             	test   %r8,%r8
    40f9:	0f 84 14 fa ff ff    	je     3b13 <_qsort+0x3d3>
    40ff:	4c 89 da             	mov    %r11,%rdx
    4102:	4c 29 c2             	sub    %r8,%rdx
    4105:	4b 8d 74 05 00       	lea    0x0(%r13,%r8,1),%rsi
    410a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4110:	44 0f b6 01          	movzbl (%rcx),%r8d
    4114:	44 0f b6 0a          	movzbl (%rdx),%r9d
    4118:	48 83 c1 01          	add    $0x1,%rcx
    411c:	48 83 c2 01          	add    $0x1,%rdx
    4120:	44 88 49 ff          	mov    %r9b,-0x1(%rcx)
    4124:	44 88 42 ff          	mov    %r8b,-0x1(%rdx)
    4128:	48 39 ce             	cmp    %rcx,%rsi
    412b:	75 e3                	jne    4110 <_qsort+0x9d0>
    412d:	e9 e1 f9 ff ff       	jmp    3b13 <_qsort+0x3d3>
    4132:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    4136:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    413a:	31 c0                	xor    %eax,%eax
    413c:	0f 1f 40 00          	nopl   0x0(%rax)
    4140:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    4144:	49 8b 34 c7          	mov    (%r15,%rax,8),%rsi
    4148:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    414c:	49 89 0c c7          	mov    %rcx,(%r15,%rax,8)
    4150:	48 83 c0 01          	add    $0x1,%rax
    4154:	48 39 c7             	cmp    %rax,%rdi
    4157:	75 e7                	jne    4140 <_qsort+0xa00>
    4159:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    415d:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    4161:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
    4165:	e9 fb fa ff ff       	jmp    3c65 <_qsort+0x525>
    416a:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    416e:	31 c0                	xor    %eax,%eax
    4170:	49 8b 14 c6          	mov    (%r14,%rax,8),%rdx
    4174:	49 8b 0c c4          	mov    (%r12,%rax,8),%rcx
    4178:	49 89 0c c6          	mov    %rcx,(%r14,%rax,8)
    417c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    4180:	48 83 c0 01          	add    $0x1,%rax
    4184:	48 39 c6             	cmp    %rax,%rsi
    4187:	75 e7                	jne    4170 <_qsort+0xa30>
    4189:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    418d:	4c 01 f0             	add    %r14,%rax
    4190:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    4197:	e9 b1 f7 ff ff       	jmp    394d <_qsort+0x20d>
    419c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    41a0:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    41a4:	4c 89 ea             	mov    %r13,%rdx
    41a7:	41 ff d7             	call   *%r15
    41aa:	85 c0                	test   %eax,%eax
    41ac:	0f 88 f7 fd ff ff    	js     3fa9 <_qsort+0x869>
    41b2:	4d 89 ec             	mov    %r13,%r12
    41b5:	e9 6a f7 ff ff       	jmp    3924 <_qsort+0x1e4>
    41ba:	4c 89 fe             	mov    %r15,%rsi
    41bd:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    41c1:	4c 8b 7d a0          	mov    -0x60(%rbp),%r15
    41c5:	41 ff d7             	call   *%r15
    41c8:	85 c0                	test   %eax,%eax
    41ca:	0f 88 73 f6 ff ff    	js     3843 <_qsort+0x103>
    41d0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    41d4:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    41d8:	4c 89 f6             	mov    %r14,%rsi
    41db:	41 ff d7             	call   *%r15
    41de:	85 c0                	test   %eax,%eax
    41e0:	0f 88 ad 00 00 00    	js     4293 <_qsort+0xb53>
    41e6:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    41ea:	e9 54 f6 ff ff       	jmp    3843 <_qsort+0x103>
    41ef:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    41f3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    41f7:	4c 89 ee             	mov    %r13,%rsi
    41fa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    41fe:	ff d0                	call   *%rax
    4200:	85 c0                	test   %eax,%eax
    4202:	0f 88 e9 f6 ff ff    	js     38f1 <_qsort+0x1b1>
    4208:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
    420c:	4c 89 fe             	mov    %r15,%rsi
    420f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4213:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    4217:	4c 89 ea             	mov    %r13,%rdx
    421a:	ff d0                	call   *%rax
    421c:	85 c0                	test   %eax,%eax
    421e:	4d 0f 48 fd          	cmovs  %r13,%r15
    4222:	4d 89 fd             	mov    %r15,%r13
    4225:	e9 c7 f6 ff ff       	jmp    38f1 <_qsort+0x1b1>
    422a:	4c 8b 6d b0          	mov    -0x50(%rbp),%r13
    422e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4232:	4c 89 e6             	mov    %r12,%rsi
    4235:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    4239:	4c 89 ea             	mov    %r13,%rdx
    423c:	ff d1                	call   *%rcx
    423e:	85 c0                	test   %eax,%eax
    4240:	0f 88 47 f6 ff ff    	js     388d <_qsort+0x14d>
    4246:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    424a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    424e:	4c 89 ea             	mov    %r13,%rdx
    4251:	4c 89 fe             	mov    %r15,%rsi
    4254:	ff d1                	call   *%rcx
    4256:	85 c0                	test   %eax,%eax
    4258:	78 1a                	js     4274 <_qsort+0xb34>
    425a:	4d 89 fc             	mov    %r15,%r12
    425d:	e9 2b f6 ff ff       	jmp    388d <_qsort+0x14d>
    4262:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4266:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    426a:	4c 89 fe             	mov    %r15,%rsi
    426d:	41 ff d5             	call   *%r13
    4270:	85 c0                	test   %eax,%eax
    4272:	78 e6                	js     425a <_qsort+0xb1a>
    4274:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
    4278:	e9 10 f6 ff ff       	jmp    388d <_qsort+0x14d>
    427d:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4281:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    4285:	4c 89 f6             	mov    %r14,%rsi
    4288:	41 ff d7             	call   *%r15
    428b:	85 c0                	test   %eax,%eax
    428d:	0f 88 53 ff ff ff    	js     41e6 <_qsort+0xaa6>
    4293:	4b 8d 04 6e          	lea    (%r14,%r13,2),%rax
    4297:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    429b:	e9 a3 f5 ff ff       	jmp    3843 <_qsort+0x103>
    42a0:	31 c0                	xor    %eax,%eax
    42a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    42a8:	49 8b 54 c5 00       	mov    0x0(%r13,%rax,8),%rdx
    42ad:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
    42b1:	49 89 4c c5 00       	mov    %rcx,0x0(%r13,%rax,8)
    42b6:	48 89 14 c3          	mov    %rdx,(%rbx,%rax,8)
    42ba:	48 83 c0 01          	add    $0x1,%rax
    42be:	4c 39 e0             	cmp    %r12,%rax
    42c1:	75 e5                	jne    42a8 <_qsort+0xb68>
    42c3:	e9 6a fd ff ff       	jmp    4032 <_qsort+0x8f2>
    42c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    42cf:	00 

00000000000042d0 <qsort_r>:
    42d0:	55                   	push   %rbp
    42d1:	48 89 e5             	mov    %rsp,%rbp
    42d4:	41 57                	push   %r15
    42d6:	4d 89 c7             	mov    %r8,%r15
    42d9:	41 56                	push   %r14
    42db:	49 89 ce             	mov    %rcx,%r14
    42de:	41 55                	push   %r13
    42e0:	49 89 d5             	mov    %rdx,%r13
    42e3:	41 54                	push   %r12
    42e5:	49 89 fc             	mov    %rdi,%r12
    42e8:	48 89 f7             	mov    %rsi,%rdi
    42eb:	53                   	push   %rbx
    42ec:	48 89 f3             	mov    %rsi,%rbx
    42ef:	48 83 ec 08          	sub    $0x8,%rsp
    42f3:	e8 00 00 00 00       	call   42f8 <qsort_r+0x28>
			42f4: R_X86_64_PLT32	flsl-0x4
    42f8:	48 83 c4 08          	add    $0x8,%rsp
    42fc:	4d 89 f8             	mov    %r15,%r8
    42ff:	4c 89 f1             	mov    %r14,%rcx
    4302:	4c 89 ea             	mov    %r13,%rdx
    4305:	48 89 de             	mov    %rbx,%rsi
    4308:	4c 89 e7             	mov    %r12,%rdi
    430b:	5b                   	pop    %rbx
    430c:	44 8d 4c 00 fe       	lea    -0x2(%rax,%rax,1),%r9d
    4311:	41 5c                	pop    %r12
    4313:	41 5d                	pop    %r13
    4315:	41 5e                	pop    %r14
    4317:	41 5f                	pop    %r15
    4319:	5d                   	pop    %rbp
    431a:	e9 21 f4 ff ff       	jmp    3740 <_qsort>
    431f:	90                   	nop

0000000000004320 <rand_r>:
    4320:	8b 0f                	mov    (%rdi),%ecx
    4322:	48 89 fe             	mov    %rdi,%rsi
    4325:	48 85 c9             	test   %rcx,%rcx
    4328:	74 46                	je     4370 <rand_r+0x50>
    432a:	48 b8 79 fb e3 1f af 	movabs $0x41a705af1fe3fb79,%rax
    4331:	05 a7 41 
    4334:	48 f7 e1             	mul    %rcx
    4337:	48 c1 ea 0f          	shr    $0xf,%rdx
    433b:	48 69 c2 1d f3 01 00 	imul   $0x1f31d,%rdx,%rax
    4342:	48 69 d2 ec f4 ff ff 	imul   $0xfffffffffffff4ec,%rdx,%rdx
    4349:	48 29 c1             	sub    %rax,%rcx
    434c:	48 69 c9 a7 41 00 00 	imul   $0x41a7,%rcx,%rcx
    4353:	48 89 c8             	mov    %rcx,%rax
    4356:	48 01 d0             	add    %rdx,%rax
    4359:	79 06                	jns    4361 <rand_r+0x41>
    435b:	48 05 ff ff ff 7f    	add    $0x7fffffff,%rax
    4361:	89 c2                	mov    %eax,%edx
    4363:	89 16                	mov    %edx,(%rsi)
    4365:	c3                   	ret    
    4366:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    436d:	00 00 00 
    4370:	ba 42 ce 0c 1f       	mov    $0x1f0cce42,%edx
    4375:	b8 42 ce 0c 1f       	mov    $0x1f0cce42,%eax
    437a:	89 16                	mov    %edx,(%rsi)
    437c:	c3                   	ret    
    437d:	0f 1f 00             	nopl   (%rax)

0000000000004380 <rand>:
    4380:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 4387 <rand+0x7>
			4383: R_X86_64_PC32	.data-0x4
    4387:	48 85 c9             	test   %rcx,%rcx
    438a:	74 4c                	je     43d8 <rand+0x58>
    438c:	48 b8 79 fb e3 1f af 	movabs $0x41a705af1fe3fb79,%rax
    4393:	05 a7 41 
    4396:	48 f7 e1             	mul    %rcx
    4399:	48 c1 ea 0f          	shr    $0xf,%rdx
    439d:	48 69 c2 1d f3 01 00 	imul   $0x1f31d,%rdx,%rax
    43a4:	48 69 d2 ec f4 ff ff 	imul   $0xfffffffffffff4ec,%rdx,%rdx
    43ab:	48 29 c1             	sub    %rax,%rcx
    43ae:	48 69 c9 a7 41 00 00 	imul   $0x41a7,%rcx,%rcx
    43b5:	48 01 d1             	add    %rdx,%rcx
    43b8:	89 c8                	mov    %ecx,%eax
    43ba:	79 0e                	jns    43ca <rand+0x4a>
    43bc:	48 81 c1 ff ff ff 7f 	add    $0x7fffffff,%rcx
    43c3:	89 c8                	mov    %ecx,%eax
    43c5:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    43ca:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 43d1 <rand+0x51>
			43cd: R_X86_64_PC32	.data-0x4
    43d1:	c3                   	ret    
    43d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    43d8:	b9 42 ce 0c 1f       	mov    $0x1f0cce42,%ecx
    43dd:	b8 42 ce 0c 1f       	mov    $0x1f0cce42,%eax
    43e2:	48 89 0d 00 00 00 00 	mov    %rcx,0x0(%rip)        # 43e9 <rand+0x69>
			43e5: R_X86_64_PC32	.data-0x4
    43e9:	c3                   	ret    
    43ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000043f0 <srand>:
    43f0:	89 f8                	mov    %edi,%eax
    43f2:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 43f9 <srand+0x9>
			43f5: R_X86_64_PC32	.data-0x4
    43f9:	c3                   	ret    
    43fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004400 <realloc>:
    4400:	55                   	push   %rbp
    4401:	48 89 e5             	mov    %rsp,%rbp
    4404:	41 55                	push   %r13
    4406:	41 54                	push   %r12
    4408:	53                   	push   %rbx
    4409:	48 83 ec 08          	sub    $0x8,%rsp
    440d:	48 85 f6             	test   %rsi,%rsi
    4410:	74 46                	je     4458 <realloc+0x58>
    4412:	49 89 fc             	mov    %rdi,%r12
    4415:	48 89 f3             	mov    %rsi,%rbx
    4418:	48 89 f7             	mov    %rsi,%rdi
    441b:	4d 85 e4             	test   %r12,%r12
    441e:	74 50                	je     4470 <realloc+0x70>
    4420:	e8 00 00 00 00       	call   4425 <realloc+0x25>
			4421: R_X86_64_PLT32	malloc-0x4
    4425:	49 89 c5             	mov    %rax,%r13
    4428:	48 85 c0             	test   %rax,%rax
    442b:	74 2b                	je     4458 <realloc+0x58>
    442d:	48 89 da             	mov    %rbx,%rdx
    4430:	4c 89 e6             	mov    %r12,%rsi
    4433:	48 89 c7             	mov    %rax,%rdi
    4436:	e8 00 00 00 00       	call   443b <realloc+0x3b>
			4437: R_X86_64_PLT32	memcpy-0x4
    443b:	4c 89 e7             	mov    %r12,%rdi
    443e:	e8 00 00 00 00       	call   4443 <realloc+0x43>
			443f: R_X86_64_PLT32	free-0x4
    4443:	48 83 c4 08          	add    $0x8,%rsp
    4447:	4c 89 e8             	mov    %r13,%rax
    444a:	5b                   	pop    %rbx
    444b:	41 5c                	pop    %r12
    444d:	41 5d                	pop    %r13
    444f:	5d                   	pop    %rbp
    4450:	c3                   	ret    
    4451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4458:	48 83 c4 08          	add    $0x8,%rsp
    445c:	45 31 ed             	xor    %r13d,%r13d
    445f:	5b                   	pop    %rbx
    4460:	4c 89 e8             	mov    %r13,%rax
    4463:	41 5c                	pop    %r12
    4465:	41 5d                	pop    %r13
    4467:	5d                   	pop    %rbp
    4468:	c3                   	ret    
    4469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4470:	48 83 c4 08          	add    $0x8,%rsp
    4474:	5b                   	pop    %rbx
    4475:	41 5c                	pop    %r12
    4477:	41 5d                	pop    %r13
    4479:	5d                   	pop    %rbp
    447a:	e9 00 00 00 00       	jmp    447f <realloc+0x7f>
			447b: R_X86_64_PLT32	malloc-0x4
    447f:	90                   	nop

0000000000004480 <reallocf>:
    4480:	55                   	push   %rbp
    4481:	48 89 e5             	mov    %rsp,%rbp
    4484:	41 55                	push   %r13
    4486:	41 54                	push   %r12
    4488:	53                   	push   %rbx
    4489:	48 89 fb             	mov    %rdi,%rbx
    448c:	48 83 ec 08          	sub    $0x8,%rsp
    4490:	48 85 f6             	test   %rsi,%rsi
    4493:	74 43                	je     44d8 <reallocf+0x58>
    4495:	49 89 f4             	mov    %rsi,%r12
    4498:	48 89 f7             	mov    %rsi,%rdi
    449b:	48 85 db             	test   %rbx,%rbx
    449e:	74 60                	je     4500 <reallocf+0x80>
    44a0:	e8 00 00 00 00       	call   44a5 <reallocf+0x25>
			44a1: R_X86_64_PLT32	malloc-0x4
    44a5:	49 89 c5             	mov    %rax,%r13
    44a8:	48 85 c0             	test   %rax,%rax
    44ab:	74 30                	je     44dd <reallocf+0x5d>
    44ad:	4c 89 e2             	mov    %r12,%rdx
    44b0:	48 89 de             	mov    %rbx,%rsi
    44b3:	48 89 c7             	mov    %rax,%rdi
    44b6:	e8 00 00 00 00       	call   44bb <reallocf+0x3b>
			44b7: R_X86_64_PLT32	memcpy-0x4
    44bb:	48 89 df             	mov    %rbx,%rdi
    44be:	e8 00 00 00 00       	call   44c3 <reallocf+0x43>
			44bf: R_X86_64_PLT32	free-0x4
    44c3:	48 83 c4 08          	add    $0x8,%rsp
    44c7:	4c 89 e8             	mov    %r13,%rax
    44ca:	5b                   	pop    %rbx
    44cb:	41 5c                	pop    %r12
    44cd:	41 5d                	pop    %r13
    44cf:	5d                   	pop    %rbp
    44d0:	c3                   	ret    
    44d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    44d8:	48 85 ff             	test   %rdi,%rdi
    44db:	74 08                	je     44e5 <reallocf+0x65>
    44dd:	48 89 df             	mov    %rbx,%rdi
    44e0:	e8 00 00 00 00       	call   44e5 <reallocf+0x65>
			44e1: R_X86_64_PLT32	free-0x4
    44e5:	48 83 c4 08          	add    $0x8,%rsp
    44e9:	45 31 ed             	xor    %r13d,%r13d
    44ec:	5b                   	pop    %rbx
    44ed:	4c 89 e8             	mov    %r13,%rax
    44f0:	41 5c                	pop    %r12
    44f2:	41 5d                	pop    %r13
    44f4:	5d                   	pop    %rbp
    44f5:	c3                   	ret    
    44f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    44fd:	00 00 00 
    4500:	48 83 c4 08          	add    $0x8,%rsp
    4504:	5b                   	pop    %rbx
    4505:	41 5c                	pop    %r12
    4507:	41 5d                	pop    %r13
    4509:	5d                   	pop    %rbp
    450a:	e9 00 00 00 00       	jmp    450f <reallocf+0x8f>
			450b: R_X86_64_PLT32	malloc-0x4
    450f:	90                   	nop

0000000000004510 <strtol>:
    4510:	55                   	push   %rbp
    4511:	48 89 e5             	mov    %rsp,%rbp
    4514:	41 57                	push   %r15
    4516:	49 89 ff             	mov    %rdi,%r15
    4519:	41 56                	push   %r14
    451b:	41 55                	push   %r13
    451d:	41 89 d5             	mov    %edx,%r13d
    4520:	41 54                	push   %r12
    4522:	53                   	push   %rbx
    4523:	48 83 ec 38          	sub    $0x38,%rsp
    4527:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    452b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    452f:	83 fa 24             	cmp    $0x24,%edx
    4532:	0f 87 c0 01 00 00    	ja     46f8 <strtol+0x1e8>
    4538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    453f:	00 
    4540:	4d 89 fc             	mov    %r15,%r12
    4543:	41 0f be 1f          	movsbl (%r15),%ebx
    4547:	49 83 c7 01          	add    $0x1,%r15
    454b:	89 df                	mov    %ebx,%edi
    454d:	e8 00 00 00 00       	call   4552 <strtol+0x42>
			454e: R_X86_64_PLT32	isspace-0x4
    4552:	41 89 c6             	mov    %eax,%r14d
    4555:	85 c0                	test   %eax,%eax
    4557:	75 e7                	jne    4540 <strtol+0x30>
    4559:	83 fb 2d             	cmp    $0x2d,%ebx
    455c:	74 5a                	je     45b8 <strtol+0xa8>
    455e:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    4565:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    456a:	83 fb 2b             	cmp    $0x2b,%ebx
    456d:	75 5e                	jne    45cd <strtol+0xbd>
    456f:	41 0f be 1f          	movsbl (%r15),%ebx
    4573:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    4578:	41 f7 c5 ef ff ff ff 	test   $0xffffffef,%r13d
    457f:	74 55                	je     45d6 <strtol+0xc6>
    4581:	41 83 fd 02          	cmp    $0x2,%r13d
    4585:	0f 85 95 01 00 00    	jne    4720 <strtol+0x210>
    458b:	83 fb 30             	cmp    $0x30,%ebx
    458e:	0f 85 8c 01 00 00    	jne    4720 <strtol+0x210>
    4594:	41 0f b6 17          	movzbl (%r15),%edx
    4598:	83 e2 df             	and    $0xffffffdf,%edx
    459b:	80 fa 42             	cmp    $0x42,%dl
    459e:	0f 84 f4 01 00 00    	je     4798 <strtol+0x288>
    45a4:	49 63 f5             	movslq %r13d,%rsi
    45a7:	bb 30 00 00 00       	mov    $0x30,%ebx
    45ac:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    45b0:	eb 44                	jmp    45f6 <strtol+0xe6>
    45b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    45b8:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    45bf:	41 0f be 1f          	movsbl (%r15),%ebx
    45c3:	b8 00 00 00 80       	mov    $0x80000000,%eax
    45c8:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    45cd:	41 f7 c5 ef ff ff ff 	test   $0xffffffef,%r13d
    45d4:	75 ab                	jne    4581 <strtol+0x71>
    45d6:	83 fb 30             	cmp    $0x30,%ebx
    45d9:	0f 84 91 01 00 00    	je     4770 <strtol+0x260>
    45df:	45 85 ed             	test   %r13d,%r13d
    45e2:	0f 85 ed 01 00 00    	jne    47d5 <strtol+0x2c5>
    45e8:	48 c7 45 b8 0a 00 00 	movq   $0xa,-0x48(%rbp)
    45ef:	00 
    45f0:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
    45f6:	31 d2                	xor    %edx,%edx
    45f8:	45 31 e4             	xor    %r12d,%r12d
    45fb:	48 f7 75 b8          	divq   -0x48(%rbp)
    45ff:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4603:	89 55 c4             	mov    %edx,-0x3c(%rbp)
    4606:	eb 48                	jmp    4650 <strtol+0x140>
    4608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    460f:	00 
    4610:	83 eb 30             	sub    $0x30,%ebx
    4613:	41 39 dd             	cmp    %ebx,%r13d
    4616:	7e 67                	jle    467f <strtol+0x16f>
    4618:	45 85 f6             	test   %r14d,%r14d
    461b:	0f 88 a7 00 00 00    	js     46c8 <strtol+0x1b8>
    4621:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4625:	4c 39 e0             	cmp    %r12,%rax
    4628:	0f 82 9a 00 00 00    	jb     46c8 <strtol+0x1b8>
    462e:	49 39 c4             	cmp    %rax,%r12
    4631:	0f 85 a1 00 00 00    	jne    46d8 <strtol+0x1c8>
    4637:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    463a:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    4640:	39 c3                	cmp    %eax,%ebx
    4642:	0f 8e 90 00 00 00    	jle    46d8 <strtol+0x1c8>
    4648:	41 0f be 1f          	movsbl (%r15),%ebx
    464c:	49 83 c7 01          	add    $0x1,%r15
    4650:	89 df                	mov    %ebx,%edi
    4652:	e8 00 00 00 00       	call   4657 <strtol+0x147>
			4653: R_X86_64_PLT32	isdigit-0x4
    4657:	85 c0                	test   %eax,%eax
    4659:	75 b5                	jne    4610 <strtol+0x100>
    465b:	89 df                	mov    %ebx,%edi
    465d:	e8 00 00 00 00       	call   4662 <strtol+0x152>
			465e: R_X86_64_PLT32	isalpha-0x4
    4662:	85 c0                	test   %eax,%eax
    4664:	74 19                	je     467f <strtol+0x16f>
    4666:	89 df                	mov    %ebx,%edi
    4668:	e8 00 00 00 00       	call   466d <strtol+0x15d>
			4669: R_X86_64_PLT32	isupper-0x4
    466d:	83 f8 01             	cmp    $0x1,%eax
    4670:	19 c0                	sbb    %eax,%eax
    4672:	83 e0 20             	and    $0x20,%eax
    4675:	83 c0 37             	add    $0x37,%eax
    4678:	29 c3                	sub    %eax,%ebx
    467a:	41 39 dd             	cmp    %ebx,%r13d
    467d:	7f 99                	jg     4618 <strtol+0x108>
    467f:	41 83 fe ff          	cmp    $0xffffffff,%r14d
    4683:	0f 84 a7 00 00 00    	je     4730 <strtol+0x220>
    4689:	8b 55 c0             	mov    -0x40(%rbp),%edx
    468c:	4c 89 e0             	mov    %r12,%rax
    468f:	48 f7 d8             	neg    %rax
    4692:	85 d2                	test   %edx,%edx
    4694:	49 0f 44 c4          	cmove  %r12,%rax
    4698:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    469d:	74 14                	je     46b3 <strtol+0x1a3>
    469f:	45 85 f6             	test   %r14d,%r14d
    46a2:	0f 85 9f 00 00 00    	jne    4747 <strtol+0x237>
    46a8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    46ac:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    46b0:	48 89 31             	mov    %rsi,(%rcx)
    46b3:	48 83 c4 38          	add    $0x38,%rsp
    46b7:	5b                   	pop    %rbx
    46b8:	41 5c                	pop    %r12
    46ba:	41 5d                	pop    %r13
    46bc:	41 5e                	pop    %r14
    46be:	41 5f                	pop    %r15
    46c0:	5d                   	pop    %rbp
    46c1:	c3                   	ret    
    46c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    46c8:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    46ce:	e9 75 ff ff ff       	jmp    4648 <strtol+0x138>
    46d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    46d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46dc:	48 63 db             	movslq %ebx,%rbx
    46df:	41 be 01 00 00 00    	mov    $0x1,%r14d
    46e5:	4c 0f af e0          	imul   %rax,%r12
    46e9:	49 01 dc             	add    %rbx,%r12
    46ec:	e9 57 ff ff ff       	jmp    4648 <strtol+0x138>
    46f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    46f8:	48 85 f6             	test   %rsi,%rsi
    46fb:	74 03                	je     4700 <strtol+0x1f0>
    46fd:	48 89 3e             	mov    %rdi,(%rsi)
    4700:	48 83 c4 38          	add    $0x38,%rsp
    4704:	31 c0                	xor    %eax,%eax
    4706:	5b                   	pop    %rbx
    4707:	41 5c                	pop    %r12
    4709:	41 5d                	pop    %r13
    470b:	41 5e                	pop    %r14
    470d:	41 5f                	pop    %r15
    470f:	5d                   	pop    %rbp
    4710:	c3                   	ret    
    4711:	41 f7 c5 fd ff ff ff 	test   $0xfffffffd,%r13d
    4718:	0f 84 96 00 00 00    	je     47b4 <strtol+0x2a4>
    471e:	66 90                	xchg   %ax,%ax
    4720:	49 63 f5             	movslq %r13d,%rsi
    4723:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    4727:	e9 ca fe ff ff       	jmp    45f6 <strtol+0xe6>
    472c:	0f 1f 40 00          	nopl   0x0(%rax)
    4730:	8b 4d c0             	mov    -0x40(%rbp),%ecx
    4733:	85 c9                	test   %ecx,%ecx
    4735:	75 21                	jne    4758 <strtol+0x248>
    4737:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    473c:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    4741:	0f 84 6c ff ff ff    	je     46b3 <strtol+0x1a3>
    4747:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    474b:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    474f:	e9 54 ff ff ff       	jmp    46a8 <strtol+0x198>
    4754:	0f 1f 40 00          	nopl   0x0(%rax)
    4758:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    475d:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    4764:	75 e1                	jne    4747 <strtol+0x237>
    4766:	e9 48 ff ff ff       	jmp    46b3 <strtol+0x1a3>
    476b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4770:	41 0f b6 17          	movzbl (%r15),%edx
    4774:	83 e2 df             	and    $0xffffffdf,%edx
    4777:	80 fa 58             	cmp    $0x58,%dl
    477a:	75 95                	jne    4711 <strtol+0x201>
    477c:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4781:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    4787:	49 83 c7 02          	add    $0x2,%r15
    478b:	48 c7 45 b8 10 00 00 	movq   $0x10,-0x48(%rbp)
    4792:	00 
    4793:	e9 5e fe ff ff       	jmp    45f6 <strtol+0xe6>
    4798:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    479d:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    47a3:	49 83 c7 02          	add    $0x2,%r15
    47a7:	48 c7 45 b8 02 00 00 	movq   $0x2,-0x48(%rbp)
    47ae:	00 
    47af:	e9 42 fe ff ff       	jmp    45f6 <strtol+0xe6>
    47b4:	80 fa 42             	cmp    $0x42,%dl
    47b7:	74 df                	je     4798 <strtol+0x288>
    47b9:	45 85 ed             	test   %r13d,%r13d
    47bc:	0f 85 e2 fd ff ff    	jne    45a4 <strtol+0x94>
    47c2:	48 c7 45 b8 08 00 00 	movq   $0x8,-0x48(%rbp)
    47c9:	00 
    47ca:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    47d0:	e9 21 fe ff ff       	jmp    45f6 <strtol+0xe6>
    47d5:	49 63 cd             	movslq %r13d,%rcx
    47d8:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    47dc:	e9 15 fe ff ff       	jmp    45f6 <strtol+0xe6>
    47e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    47e8:	00 00 00 
    47eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000047f0 <strtoll>:
    47f0:	55                   	push   %rbp
    47f1:	48 89 e5             	mov    %rsp,%rbp
    47f4:	41 57                	push   %r15
    47f6:	49 89 ff             	mov    %rdi,%r15
    47f9:	41 56                	push   %r14
    47fb:	41 89 d6             	mov    %edx,%r14d
    47fe:	41 55                	push   %r13
    4800:	41 54                	push   %r12
    4802:	53                   	push   %rbx
    4803:	48 83 ec 38          	sub    $0x38,%rsp
    4807:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    480b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    480f:	83 fa 24             	cmp    $0x24,%edx
    4812:	0f 87 b0 01 00 00    	ja     49c8 <strtoll+0x1d8>
    4818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    481f:	00 
    4820:	4d 89 fd             	mov    %r15,%r13
    4823:	41 0f b6 1f          	movzbl (%r15),%ebx
    4827:	49 83 c7 01          	add    $0x1,%r15
    482b:	89 df                	mov    %ebx,%edi
    482d:	e8 00 00 00 00       	call   4832 <strtoll+0x42>
			482e: R_X86_64_PLT32	isspace-0x4
    4832:	41 89 c4             	mov    %eax,%r12d
    4835:	85 c0                	test   %eax,%eax
    4837:	75 e7                	jne    4820 <strtoll+0x30>
    4839:	44 89 f0             	mov    %r14d,%eax
    483c:	83 e0 ef             	and    $0xffffffef,%eax
    483f:	83 fb 2d             	cmp    $0x2d,%ebx
    4842:	0f 84 d8 00 00 00    	je     4920 <strtoll+0x130>
    4848:	83 fb 2b             	cmp    $0x2b,%ebx
    484b:	75 08                	jne    4855 <strtoll+0x65>
    484d:	41 0f be 1f          	movsbl (%r15),%ebx
    4851:	4d 8d 7d 02          	lea    0x2(%r13),%r15
    4855:	85 c0                	test   %eax,%eax
    4857:	0f 84 83 01 00 00    	je     49e0 <strtoll+0x1f0>
    485d:	49 63 c6             	movslq %r14d,%rax
    4860:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4864:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    486b:	ff ff 7f 
    486e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    4875:	48 99                	cqto   
    4877:	48 f7 7d b8          	idivq  -0x48(%rbp)
    487b:	89 55 c8             	mov    %edx,-0x38(%rbp)
    487e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4882:	45 31 ed             	xor    %r13d,%r13d
    4885:	eb 41                	jmp    48c8 <strtoll+0xd8>
    4887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    488e:	00 00 
    4890:	49 39 c5             	cmp    %rax,%r13
    4893:	0f 8c 17 01 00 00    	jl     49b0 <strtoll+0x1c0>
    4899:	75 0b                	jne    48a6 <strtoll+0xb6>
    489b:	8b 45 c8             	mov    -0x38(%rbp),%eax
    489e:	39 c3                	cmp    %eax,%ebx
    48a0:	0f 8f 0a 01 00 00    	jg     49b0 <strtoll+0x1c0>
    48a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    48aa:	48 63 db             	movslq %ebx,%rbx
    48ad:	44 8b 65 cc          	mov    -0x34(%rbp),%r12d
    48b1:	4c 0f af e8          	imul   %rax,%r13
    48b5:	49 29 dd             	sub    %rbx,%r13
    48b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    48bf:	00 
    48c0:	41 0f b6 1f          	movzbl (%r15),%ebx
    48c4:	49 83 c7 01          	add    $0x1,%r15
    48c8:	89 df                	mov    %ebx,%edi
    48ca:	e8 00 00 00 00       	call   48cf <strtoll+0xdf>
			48cb: R_X86_64_PLT32	isdigit-0x4
    48cf:	85 c0                	test   %eax,%eax
    48d1:	74 6d                	je     4940 <strtoll+0x150>
    48d3:	83 eb 30             	sub    $0x30,%ebx
    48d6:	41 39 de             	cmp    %ebx,%r14d
    48d9:	0f 8e 89 00 00 00    	jle    4968 <strtoll+0x178>
    48df:	41 83 fc ff          	cmp    $0xffffffff,%r12d
    48e3:	74 db                	je     48c0 <strtoll+0xd0>
    48e5:	8b 55 cc             	mov    -0x34(%rbp),%edx
    48e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    48ec:	85 d2                	test   %edx,%edx
    48ee:	75 a0                	jne    4890 <strtoll+0xa0>
    48f0:	49 39 c5             	cmp    %rax,%r13
    48f3:	0f 8f 9f 00 00 00    	jg     4998 <strtoll+0x1a8>
    48f9:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    48fc:	39 cb                	cmp    %ecx,%ebx
    48fe:	7e 09                	jle    4909 <strtoll+0x119>
    4900:	49 39 c5             	cmp    %rax,%r13
    4903:	0f 84 8f 00 00 00    	je     4998 <strtoll+0x1a8>
    4909:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    490d:	48 63 db             	movslq %ebx,%rbx
    4910:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4916:	4c 0f af e8          	imul   %rax,%r13
    491a:	49 01 dd             	add    %rbx,%r13
    491d:	eb a1                	jmp    48c0 <strtoll+0xd0>
    491f:	90                   	nop
    4920:	41 0f be 1f          	movsbl (%r15),%ebx
    4924:	49 83 c5 02          	add    $0x2,%r13
    4928:	85 c0                	test   %eax,%eax
    492a:	0f 84 a8 00 00 00    	je     49d8 <strtoll+0x1e8>
    4930:	49 63 c6             	movslq %r14d,%rax
    4933:	4d 89 ef             	mov    %r13,%r15
    4936:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    493a:	e9 c1 00 00 00       	jmp    4a00 <strtoll+0x210>
    493f:	90                   	nop
    4940:	89 df                	mov    %ebx,%edi
    4942:	e8 00 00 00 00       	call   4947 <strtoll+0x157>
			4943: R_X86_64_PLT32	isalpha-0x4
    4947:	85 c0                	test   %eax,%eax
    4949:	74 1d                	je     4968 <strtoll+0x178>
    494b:	89 df                	mov    %ebx,%edi
    494d:	e8 00 00 00 00       	call   4952 <strtoll+0x162>
			494e: R_X86_64_PLT32	isupper-0x4
    4952:	83 f8 01             	cmp    $0x1,%eax
    4955:	19 c0                	sbb    %eax,%eax
    4957:	83 e0 20             	and    $0x20,%eax
    495a:	83 c0 37             	add    $0x37,%eax
    495d:	29 c3                	sub    %eax,%ebx
    495f:	41 39 de             	cmp    %ebx,%r14d
    4962:	0f 8f 77 ff ff ff    	jg     48df <strtoll+0xef>
    4968:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    496c:	48 85 c0             	test   %rax,%rax
    496f:	74 0f                	je     4980 <strtoll+0x190>
    4971:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    4975:	45 85 e4             	test   %r12d,%r12d
    4978:	48 0f 44 4d a8       	cmove  -0x58(%rbp),%rcx
    497d:	48 89 08             	mov    %rcx,(%rax)
    4980:	48 83 c4 38          	add    $0x38,%rsp
    4984:	4c 89 e8             	mov    %r13,%rax
    4987:	5b                   	pop    %rbx
    4988:	41 5c                	pop    %r12
    498a:	41 5d                	pop    %r13
    498c:	41 5e                	pop    %r14
    498e:	41 5f                	pop    %r15
    4990:	5d                   	pop    %rbp
    4991:	c3                   	ret    
    4992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4998:	49 bd ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r13
    499f:	ff ff 7f 
    49a2:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    49a8:	e9 13 ff ff ff       	jmp    48c0 <strtoll+0xd0>
    49ad:	0f 1f 00             	nopl   (%rax)
    49b0:	49 bd 00 00 00 00 00 	movabs $0x8000000000000000,%r13
    49b7:	00 00 80 
    49ba:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    49c0:	e9 fb fe ff ff       	jmp    48c0 <strtoll+0xd0>
    49c5:	0f 1f 00             	nopl   (%rax)
    49c8:	48 85 f6             	test   %rsi,%rsi
    49cb:	74 03                	je     49d0 <strtoll+0x1e0>
    49cd:	48 89 3e             	mov    %rdi,(%rsi)
    49d0:	45 31 ed             	xor    %r13d,%r13d
    49d3:	eb ab                	jmp    4980 <strtoll+0x190>
    49d5:	0f 1f 00             	nopl   (%rax)
    49d8:	4d 89 ef             	mov    %r13,%r15
    49db:	b8 01 00 00 00       	mov    $0x1,%eax
    49e0:	83 fb 30             	cmp    $0x30,%ebx
    49e3:	74 5b                	je     4a40 <strtoll+0x250>
    49e5:	45 85 f6             	test   %r14d,%r14d
    49e8:	75 46                	jne    4a30 <strtoll+0x240>
    49ea:	48 c7 45 b8 0a 00 00 	movq   $0xa,-0x48(%rbp)
    49f1:	00 
    49f2:	41 be 0a 00 00 00    	mov    $0xa,%r14d
    49f8:	85 c0                	test   %eax,%eax
    49fa:	0f 84 64 fe ff ff    	je     4864 <strtoll+0x74>
    4a00:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    4a07:	00 00 80 
    4a0a:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    4a11:	48 99                	cqto   
    4a13:	48 f7 7d b8          	idivq  -0x48(%rbp)
    4a17:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4a1b:	89 d0                	mov    %edx,%eax
    4a1d:	f7 d8                	neg    %eax
    4a1f:	89 45 c8             	mov    %eax,-0x38(%rbp)
    4a22:	e9 5b fe ff ff       	jmp    4882 <strtoll+0x92>
    4a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4a2e:	00 00 
    4a30:	49 63 f6             	movslq %r14d,%rsi
    4a33:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    4a37:	eb bf                	jmp    49f8 <strtoll+0x208>
    4a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4a40:	41 0f b6 17          	movzbl (%r15),%edx
    4a44:	83 e2 df             	and    $0xffffffdf,%edx
    4a47:	80 fa 58             	cmp    $0x58,%dl
    4a4a:	75 19                	jne    4a65 <strtoll+0x275>
    4a4c:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4a51:	41 be 10 00 00 00    	mov    $0x10,%r14d
    4a57:	49 83 c7 02          	add    $0x2,%r15
    4a5b:	48 c7 45 b8 10 00 00 	movq   $0x10,-0x48(%rbp)
    4a62:	00 
    4a63:	eb 93                	jmp    49f8 <strtoll+0x208>
    4a65:	45 85 f6             	test   %r14d,%r14d
    4a68:	75 13                	jne    4a7d <strtoll+0x28d>
    4a6a:	48 c7 45 b8 08 00 00 	movq   $0x8,-0x48(%rbp)
    4a71:	00 
    4a72:	41 be 08 00 00 00    	mov    $0x8,%r14d
    4a78:	e9 7b ff ff ff       	jmp    49f8 <strtoll+0x208>
    4a7d:	49 63 d6             	movslq %r14d,%rdx
    4a80:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    4a84:	e9 6f ff ff ff       	jmp    49f8 <strtoll+0x208>
    4a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004a90 <strtoul>:
    4a90:	55                   	push   %rbp
    4a91:	48 89 e5             	mov    %rsp,%rbp
    4a94:	41 57                	push   %r15
    4a96:	49 89 ff             	mov    %rdi,%r15
    4a99:	41 56                	push   %r14
    4a9b:	41 55                	push   %r13
    4a9d:	41 54                	push   %r12
    4a9f:	53                   	push   %rbx
    4aa0:	48 83 ec 38          	sub    $0x38,%rsp
    4aa4:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    4aa8:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    4aac:	89 55 cc             	mov    %edx,-0x34(%rbp)
    4aaf:	90                   	nop
    4ab0:	4d 89 fc             	mov    %r15,%r12
    4ab3:	41 0f be 1f          	movsbl (%r15),%ebx
    4ab7:	49 83 c7 01          	add    $0x1,%r15
    4abb:	89 df                	mov    %ebx,%edi
    4abd:	e8 00 00 00 00       	call   4ac2 <strtoul+0x32>
			4abe: R_X86_64_PLT32	isspace-0x4
    4ac2:	41 89 c5             	mov    %eax,%r13d
    4ac5:	85 c0                	test   %eax,%eax
    4ac7:	75 e7                	jne    4ab0 <strtoul+0x20>
    4ac9:	83 fb 2d             	cmp    $0x2d,%ebx
    4acc:	0f 84 ce 01 00 00    	je     4ca0 <strtoul+0x210>
    4ad2:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    4ad9:	83 fb 2b             	cmp    $0x2b,%ebx
    4adc:	0f 84 3e 01 00 00    	je     4c20 <strtoul+0x190>
    4ae2:	f7 45 cc ef ff ff ff 	testl  $0xffffffef,-0x34(%rbp)
    4ae9:	0f 85 f1 00 00 00    	jne    4be0 <strtoul+0x150>
    4aef:	83 fb 30             	cmp    $0x30,%ebx
    4af2:	0f 84 c0 01 00 00    	je     4cb8 <strtoul+0x228>
    4af8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    4afb:	85 c9                	test   %ecx,%ecx
    4afd:	0f 85 70 02 00 00    	jne    4d73 <strtoul+0x2e3>
    4b03:	c7 45 c8 05 00 00 00 	movl   $0x5,-0x38(%rbp)
    4b0a:	41 be 99 99 99 19    	mov    $0x19999999,%r14d
    4b10:	48 c7 45 c0 0a 00 00 	movq   $0xa,-0x40(%rbp)
    4b17:	00 
    4b18:	c7 45 cc 0a 00 00 00 	movl   $0xa,-0x34(%rbp)
    4b1f:	45 31 e4             	xor    %r12d,%r12d
    4b22:	eb 40                	jmp    4b64 <strtoul+0xd4>
    4b24:	0f 1f 40 00          	nopl   0x0(%rax)
    4b28:	83 eb 30             	sub    $0x30,%ebx
    4b2b:	39 5d cc             	cmp    %ebx,-0x34(%rbp)
    4b2e:	7e 63                	jle    4b93 <strtoul+0x103>
    4b30:	45 85 ed             	test   %r13d,%r13d
    4b33:	0f 88 17 01 00 00    	js     4c50 <strtoul+0x1c0>
    4b39:	4d 39 e6             	cmp    %r12,%r14
    4b3c:	0f 82 0e 01 00 00    	jb     4c50 <strtoul+0x1c0>
    4b42:	4d 39 f4             	cmp    %r14,%r12
    4b45:	0f 85 15 01 00 00    	jne    4c60 <strtoul+0x1d0>
    4b4b:	8b 45 c8             	mov    -0x38(%rbp),%eax
    4b4e:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    4b54:	39 c3                	cmp    %eax,%ebx
    4b56:	0f 8e 04 01 00 00    	jle    4c60 <strtoul+0x1d0>
    4b5c:	41 0f be 1f          	movsbl (%r15),%ebx
    4b60:	49 83 c7 01          	add    $0x1,%r15
    4b64:	89 df                	mov    %ebx,%edi
    4b66:	e8 00 00 00 00       	call   4b6b <strtoul+0xdb>
			4b67: R_X86_64_PLT32	isdigit-0x4
    4b6b:	85 c0                	test   %eax,%eax
    4b6d:	75 b9                	jne    4b28 <strtoul+0x98>
    4b6f:	89 df                	mov    %ebx,%edi
    4b71:	e8 00 00 00 00       	call   4b76 <strtoul+0xe6>
			4b72: R_X86_64_PLT32	isalpha-0x4
    4b76:	85 c0                	test   %eax,%eax
    4b78:	74 19                	je     4b93 <strtoul+0x103>
    4b7a:	89 df                	mov    %ebx,%edi
    4b7c:	e8 00 00 00 00       	call   4b81 <strtoul+0xf1>
			4b7d: R_X86_64_PLT32	isupper-0x4
    4b81:	83 f8 01             	cmp    $0x1,%eax
    4b84:	19 c0                	sbb    %eax,%eax
    4b86:	83 e0 20             	and    $0x20,%eax
    4b89:	83 c0 37             	add    $0x37,%eax
    4b8c:	29 c3                	sub    %eax,%ebx
    4b8e:	39 5d cc             	cmp    %ebx,-0x34(%rbp)
    4b91:	7f 9d                	jg     4b30 <strtoul+0xa0>
    4b93:	41 83 fd ff          	cmp    $0xffffffff,%r13d
    4b97:	0f 84 e3 00 00 00    	je     4c80 <strtoul+0x1f0>
    4b9d:	8b 55 ac             	mov    -0x54(%rbp),%edx
    4ba0:	4c 89 e0             	mov    %r12,%rax
    4ba3:	48 f7 d8             	neg    %rax
    4ba6:	85 d2                	test   %edx,%edx
    4ba8:	4c 0f 45 e0          	cmovne %rax,%r12
    4bac:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4bb1:	74 14                	je     4bc7 <strtoul+0x137>
    4bb3:	45 85 ed             	test   %r13d,%r13d
    4bb6:	0f 85 d5 00 00 00    	jne    4c91 <strtoul+0x201>
    4bbc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4bc0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    4bc4:	48 89 08             	mov    %rcx,(%rax)
    4bc7:	48 83 c4 38          	add    $0x38,%rsp
    4bcb:	4c 89 e0             	mov    %r12,%rax
    4bce:	5b                   	pop    %rbx
    4bcf:	41 5c                	pop    %r12
    4bd1:	41 5d                	pop    %r13
    4bd3:	41 5e                	pop    %r14
    4bd5:	41 5f                	pop    %r15
    4bd7:	5d                   	pop    %rbp
    4bd8:	c3                   	ret    
    4bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4be0:	83 7d cc 02          	cmpl   $0x2,-0x34(%rbp)
    4be4:	75 4a                	jne    4c30 <strtoul+0x1a0>
    4be6:	83 fb 30             	cmp    $0x30,%ebx
    4be9:	75 45                	jne    4c30 <strtoul+0x1a0>
    4beb:	41 0f b6 07          	movzbl (%r15),%eax
    4bef:	83 e0 df             	and    $0xffffffdf,%eax
    4bf2:	3c 42                	cmp    $0x42,%al
    4bf4:	0f 84 36 01 00 00    	je     4d30 <strtoul+0x2a0>
    4bfa:	48 63 75 cc          	movslq -0x34(%rbp),%rsi
    4bfe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4c03:	31 d2                	xor    %edx,%edx
    4c05:	bb 30 00 00 00       	mov    $0x30,%ebx
    4c0a:	48 f7 f6             	div    %rsi
    4c0d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4c11:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4c14:	49 89 c6             	mov    %rax,%r14
    4c17:	e9 03 ff ff ff       	jmp    4b1f <strtoul+0x8f>
    4c1c:	0f 1f 40 00          	nopl   0x0(%rax)
    4c20:	41 0f be 1f          	movsbl (%r15),%ebx
    4c24:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    4c29:	e9 b4 fe ff ff       	jmp    4ae2 <strtoul+0x52>
    4c2e:	66 90                	xchg   %ax,%ax
    4c30:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
    4c34:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4c39:	31 d2                	xor    %edx,%edx
    4c3b:	48 f7 f1             	div    %rcx
    4c3e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    4c42:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4c45:	49 89 c6             	mov    %rax,%r14
    4c48:	e9 d2 fe ff ff       	jmp    4b1f <strtoul+0x8f>
    4c4d:	0f 1f 00             	nopl   (%rax)
    4c50:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    4c56:	e9 01 ff ff ff       	jmp    4b5c <strtoul+0xcc>
    4c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4c60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4c64:	48 63 db             	movslq %ebx,%rbx
    4c67:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    4c6d:	4c 0f af e0          	imul   %rax,%r12
    4c71:	49 01 dc             	add    %rbx,%r12
    4c74:	e9 e3 fe ff ff       	jmp    4b5c <strtoul+0xcc>
    4c79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4c80:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4c85:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    4c8b:	0f 84 36 ff ff ff    	je     4bc7 <strtoul+0x137>
    4c91:	49 8d 47 ff          	lea    -0x1(%r15),%rax
    4c95:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4c99:	e9 1e ff ff ff       	jmp    4bbc <strtoul+0x12c>
    4c9e:	66 90                	xchg   %ax,%ax
    4ca0:	41 0f be 1f          	movsbl (%r15),%ebx
    4ca4:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%rbp)
    4cab:	4d 8d 7c 24 02       	lea    0x2(%r12),%r15
    4cb0:	e9 2d fe ff ff       	jmp    4ae2 <strtoul+0x52>
    4cb5:	0f 1f 00             	nopl   (%rax)
    4cb8:	41 0f b6 07          	movzbl (%r15),%eax
    4cbc:	83 e0 df             	and    $0xffffffdf,%eax
    4cbf:	3c 58                	cmp    $0x58,%al
    4cc1:	75 2a                	jne    4ced <strtoul+0x25d>
    4cc3:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4cc8:	c7 45 c8 0f 00 00 00 	movl   $0xf,-0x38(%rbp)
    4ccf:	49 83 c7 02          	add    $0x2,%r15
    4cd3:	41 be ff ff ff 0f    	mov    $0xfffffff,%r14d
    4cd9:	48 c7 45 c0 10 00 00 	movq   $0x10,-0x40(%rbp)
    4ce0:	00 
    4ce1:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)
    4ce8:	e9 32 fe ff ff       	jmp    4b1f <strtoul+0x8f>
    4ced:	48 63 75 cc          	movslq -0x34(%rbp),%rsi
    4cf1:	f7 c6 fd ff ff ff    	test   $0xfffffffd,%esi
    4cf7:	75 61                	jne    4d5a <strtoul+0x2ca>
    4cf9:	3c 42                	cmp    $0x42,%al
    4cfb:	74 33                	je     4d30 <strtoul+0x2a0>
    4cfd:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    4d01:	0f 85 f3 fe ff ff    	jne    4bfa <strtoul+0x16a>
    4d07:	c7 45 c8 07 00 00 00 	movl   $0x7,-0x38(%rbp)
    4d0e:	41 be ff ff ff 1f    	mov    $0x1fffffff,%r14d
    4d14:	48 c7 45 c0 08 00 00 	movq   $0x8,-0x40(%rbp)
    4d1b:	00 
    4d1c:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%rbp)
    4d23:	e9 f7 fd ff ff       	jmp    4b1f <strtoul+0x8f>
    4d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4d2f:	00 
    4d30:	41 0f be 5f 01       	movsbl 0x1(%r15),%ebx
    4d35:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    4d3c:	49 83 c7 02          	add    $0x2,%r15
    4d40:	41 be ff ff ff 7f    	mov    $0x7fffffff,%r14d
    4d46:	48 c7 45 c0 02 00 00 	movq   $0x2,-0x40(%rbp)
    4d4d:	00 
    4d4e:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    4d55:	e9 c5 fd ff ff       	jmp    4b1f <strtoul+0x8f>
    4d5a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4d5f:	31 d2                	xor    %edx,%edx
    4d61:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4d65:	48 f7 f6             	div    %rsi
    4d68:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4d6b:	49 89 c6             	mov    %rax,%r14
    4d6e:	e9 ac fd ff ff       	jmp    4b1f <strtoul+0x8f>
    4d73:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
    4d77:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4d7c:	48 89 d6             	mov    %rdx,%rsi
    4d7f:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    4d83:	31 d2                	xor    %edx,%edx
    4d85:	48 f7 f6             	div    %rsi
    4d88:	89 55 c8             	mov    %edx,-0x38(%rbp)
    4d8b:	49 89 c6             	mov    %rax,%r14
    4d8e:	e9 8c fd ff ff       	jmp    4b1f <strtoul+0x8f>
    4d93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4d9a:	00 00 00 
    4d9d:	0f 1f 00             	nopl   (%rax)

0000000000004da0 <strtoull>:
    4da0:	55                   	push   %rbp
    4da1:	48 89 e5             	mov    %rsp,%rbp
    4da4:	41 57                	push   %r15
    4da6:	41 56                	push   %r14
    4da8:	49 89 fe             	mov    %rdi,%r14
    4dab:	41 55                	push   %r13
    4dad:	41 54                	push   %r12
    4daf:	41 89 d4             	mov    %edx,%r12d
    4db2:	53                   	push   %rbx
    4db3:	48 89 fb             	mov    %rdi,%rbx
    4db6:	48 83 ec 18          	sub    $0x18,%rsp
    4dba:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    4dbe:	66 90                	xchg   %ax,%ax
    4dc0:	49 89 dd             	mov    %rbx,%r13
    4dc3:	0f b6 3b             	movzbl (%rbx),%edi
    4dc6:	48 83 c3 01          	add    $0x1,%rbx
    4dca:	41 89 ff             	mov    %edi,%r15d
    4dcd:	e8 00 00 00 00       	call   4dd2 <strtoull+0x32>
			4dce: R_X86_64_PLT32	isspace-0x4
    4dd2:	89 c1                	mov    %eax,%ecx
    4dd4:	85 c0                	test   %eax,%eax
    4dd6:	75 e8                	jne    4dc0 <strtoull+0x20>
    4dd8:	41 80 ff 2d          	cmp    $0x2d,%r15b
    4ddc:	0f 84 2e 01 00 00    	je     4f10 <strtoull+0x170>
    4de2:	31 ff                	xor    %edi,%edi
    4de4:	41 80 ff 2b          	cmp    $0x2b,%r15b
    4de8:	0f 84 12 01 00 00    	je     4f00 <strtoull+0x160>
    4dee:	41 f7 c4 ef ff ff ff 	test   $0xffffffef,%r12d
    4df5:	74 31                	je     4e28 <strtoull+0x88>
    4df7:	41 8d 44 24 fe       	lea    -0x2(%r12),%eax
    4dfc:	83 f8 22             	cmp    $0x22,%eax
    4dff:	0f 86 5b 01 00 00    	jbe    4f60 <strtoull+0x1c0>
    4e05:	31 c0                	xor    %eax,%eax
    4e07:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4e0c:	74 07                	je     4e15 <strtoull+0x75>
    4e0e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4e12:	4c 89 32             	mov    %r14,(%rdx)
    4e15:	48 83 c4 18          	add    $0x18,%rsp
    4e19:	5b                   	pop    %rbx
    4e1a:	41 5c                	pop    %r12
    4e1c:	41 5d                	pop    %r13
    4e1e:	41 5e                	pop    %r14
    4e20:	41 5f                	pop    %r15
    4e22:	5d                   	pop    %rbp
    4e23:	c3                   	ret    
    4e24:	0f 1f 40 00          	nopl   0x0(%rax)
    4e28:	41 80 ff 30          	cmp    $0x30,%r15b
    4e2c:	0f 84 f6 00 00 00    	je     4f28 <strtoull+0x188>
    4e32:	45 85 e4             	test   %r12d,%r12d
    4e35:	0f 85 25 01 00 00    	jne    4f60 <strtoull+0x1c0>
    4e3b:	ba 05 00 00 00       	mov    $0x5,%edx
    4e40:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
    4e46:	49 ba 99 99 99 99 99 	movabs $0x1999999999999999,%r10
    4e4d:	99 99 19 
    4e50:	41 bc 0a 00 00 00    	mov    $0xa,%r12d
    4e56:	31 c0                	xor    %eax,%eax
    4e58:	eb 4b                	jmp    4ea5 <strtoull+0x105>
    4e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4e60:	41 8d 77 b5          	lea    -0x4b(%r15),%esi
    4e64:	44 0f be c6          	movsbl %sil,%r8d
    4e68:	45 39 e0             	cmp    %r12d,%r8d
    4e6b:	7d 63                	jge    4ed0 <strtoull+0x130>
    4e6d:	85 c9                	test   %ecx,%ecx
    4e6f:	0f 88 0b 01 00 00    	js     4f80 <strtoull+0x1e0>
    4e75:	49 39 c2             	cmp    %rax,%r10
    4e78:	0f 82 02 01 00 00    	jb     4f80 <strtoull+0x1e0>
    4e7e:	4c 39 d0             	cmp    %r10,%rax
    4e81:	75 0a                	jne    4e8d <strtoull+0xed>
    4e83:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    4e88:	41 39 d0             	cmp    %edx,%r8d
    4e8b:	7f 10                	jg     4e9d <strtoull+0xfd>
    4e8d:	49 0f af c1          	imul   %r9,%rax
    4e91:	48 0f be f6          	movsbq %sil,%rsi
    4e95:	b9 01 00 00 00       	mov    $0x1,%ecx
    4e9a:	48 01 f0             	add    %rsi,%rax
    4e9d:	44 0f b6 3b          	movzbl (%rbx),%r15d
    4ea1:	48 83 c3 01          	add    $0x1,%rbx
    4ea5:	41 8d 77 d0          	lea    -0x30(%r15),%esi
    4ea9:	40 80 fe 09          	cmp    $0x9,%sil
    4ead:	76 b5                	jbe    4e64 <strtoull+0xc4>
    4eaf:	41 8d 77 bf          	lea    -0x41(%r15),%esi
    4eb3:	40 80 fe 19          	cmp    $0x19,%sil
    4eb7:	76 a7                	jbe    4e60 <strtoull+0xc0>
    4eb9:	41 8d 77 9f          	lea    -0x61(%r15),%esi
    4ebd:	40 80 fe 19          	cmp    $0x19,%sil
    4ec1:	77 0d                	ja     4ed0 <strtoull+0x130>
    4ec3:	41 8d 77 95          	lea    -0x6b(%r15),%esi
    4ec7:	44 0f be c6          	movsbl %sil,%r8d
    4ecb:	45 39 e0             	cmp    %r12d,%r8d
    4ece:	7c 9d                	jl     4e6d <strtoull+0xcd>
    4ed0:	83 f9 ff             	cmp    $0xffffffff,%ecx
    4ed3:	0f 84 b7 00 00 00    	je     4f90 <strtoull+0x1f0>
    4ed9:	85 c9                	test   %ecx,%ecx
    4edb:	0f 84 24 ff ff ff    	je     4e05 <strtoull+0x65>
    4ee1:	85 ff                	test   %edi,%edi
    4ee3:	0f 84 ae 00 00 00    	je     4f97 <strtoull+0x1f7>
    4ee9:	48 f7 d8             	neg    %rax
    4eec:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4ef1:	0f 84 1e ff ff ff    	je     4e15 <strtoull+0x75>
    4ef7:	4c 8d 73 ff          	lea    -0x1(%rbx),%r14
    4efb:	e9 0e ff ff ff       	jmp    4e0e <strtoull+0x6e>
    4f00:	44 0f b6 3b          	movzbl (%rbx),%r15d
    4f04:	49 8d 5d 02          	lea    0x2(%r13),%rbx
    4f08:	e9 e1 fe ff ff       	jmp    4dee <strtoull+0x4e>
    4f0d:	0f 1f 00             	nopl   (%rax)
    4f10:	44 0f b6 3b          	movzbl (%rbx),%r15d
    4f14:	bf 01 00 00 00       	mov    $0x1,%edi
    4f19:	49 8d 5d 02          	lea    0x2(%r13),%rbx
    4f1d:	e9 cc fe ff ff       	jmp    4dee <strtoull+0x4e>
    4f22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4f28:	0f b6 03             	movzbl (%rbx),%eax
    4f2b:	83 e0 df             	and    $0xffffffdf,%eax
    4f2e:	3c 58                	cmp    $0x58,%al
    4f30:	75 29                	jne    4f5b <strtoull+0x1bb>
    4f32:	44 0f b6 7b 01       	movzbl 0x1(%rbx),%r15d
    4f37:	ba 0f 00 00 00       	mov    $0xf,%edx
    4f3c:	48 83 c3 02          	add    $0x2,%rbx
    4f40:	49 ba ff ff ff ff ff 	movabs $0xfffffffffffffff,%r10
    4f47:	ff ff 0f 
    4f4a:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    4f50:	41 bc 10 00 00 00    	mov    $0x10,%r12d
    4f56:	e9 fb fe ff ff       	jmp    4e56 <strtoull+0xb6>
    4f5b:	45 85 e4             	test   %r12d,%r12d
    4f5e:	74 47                	je     4fa7 <strtoull+0x207>
    4f60:	4d 63 cc             	movslq %r12d,%r9
    4f63:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4f6a:	31 d2                	xor    %edx,%edx
    4f6c:	49 f7 f1             	div    %r9
    4f6f:	49 89 c2             	mov    %rax,%r10
    4f72:	e9 df fe ff ff       	jmp    4e56 <strtoull+0xb6>
    4f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4f7e:	00 00 
    4f80:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    4f85:	e9 13 ff ff ff       	jmp    4e9d <strtoull+0xfd>
    4f8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4f90:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4f97:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4f9c:	0f 85 55 ff ff ff    	jne    4ef7 <strtoull+0x157>
    4fa2:	e9 6e fe ff ff       	jmp    4e15 <strtoull+0x75>
    4fa7:	ba 07 00 00 00       	mov    $0x7,%edx
    4fac:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    4fb2:	49 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%r10
    4fb9:	ff ff 1f 
    4fbc:	41 bc 08 00 00 00    	mov    $0x8,%r12d
    4fc2:	e9 8f fe ff ff       	jmp    4e56 <strtoull+0xb6>
    4fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4fce:	00 00 

0000000000004fd0 <memchr>:
    4fd0:	48 89 f9             	mov    %rdi,%rcx
    4fd3:	48 89 d0             	mov    %rdx,%rax
    4fd6:	40 0f b6 f6          	movzbl %sil,%esi
    4fda:	40 f6 c7 07          	test   $0x7,%dil
    4fde:	75 1c                	jne    4ffc <memchr+0x2c>
    4fe0:	eb 2e                	jmp    5010 <memchr+0x40>
    4fe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4fe8:	0f b6 11             	movzbl (%rcx),%edx
    4feb:	39 f2                	cmp    %esi,%edx
    4fed:	74 21                	je     5010 <memchr+0x40>
    4fef:	48 83 c1 01          	add    $0x1,%rcx
    4ff3:	48 83 e8 01          	sub    $0x1,%rax
    4ff7:	f6 c1 07             	test   $0x7,%cl
    4ffa:	74 14                	je     5010 <memchr+0x40>
    4ffc:	48 85 c0             	test   %rax,%rax
    4fff:	75 e7                	jne    4fe8 <memchr+0x18>
    5001:	31 d2                	xor    %edx,%edx
    5003:	48 89 d0             	mov    %rdx,%rax
    5006:	c3                   	ret    
    5007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    500e:	00 00 
    5010:	31 d2                	xor    %edx,%edx
    5012:	48 85 c0             	test   %rax,%rax
    5015:	74 ec                	je     5003 <memchr+0x33>
    5017:	0f b6 11             	movzbl (%rcx),%edx
    501a:	39 f2                	cmp    %esi,%edx
    501c:	0f 84 7e 00 00 00    	je     50a0 <memchr+0xd0>
    5022:	48 ba 01 01 01 01 01 	movabs $0x101010101010101,%rdx
    5029:	01 01 01 
    502c:	4c 63 c6             	movslq %esi,%r8
    502f:	49 ba ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r10
    5036:	fe fe fe 
    5039:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
    5040:	80 80 80 
    5043:	4c 0f af c2          	imul   %rdx,%r8
    5047:	48 83 f8 07          	cmp    $0x7,%rax
    504b:	77 11                	ja     505e <memchr+0x8e>
    504d:	eb 51                	jmp    50a0 <memchr+0xd0>
    504f:	90                   	nop
    5050:	48 83 e8 08          	sub    $0x8,%rax
    5054:	48 83 c1 08          	add    $0x8,%rcx
    5058:	48 83 f8 07          	cmp    $0x7,%rax
    505c:	76 15                	jbe    5073 <memchr+0xa3>
    505e:	48 8b 11             	mov    (%rcx),%rdx
    5061:	4c 31 c2             	xor    %r8,%rdx
    5064:	4a 8d 3c 12          	lea    (%rdx,%r10,1),%rdi
    5068:	48 f7 d2             	not    %rdx
    506b:	48 21 fa             	and    %rdi,%rdx
    506e:	4c 85 ca             	test   %r9,%rdx
    5071:	74 dd                	je     5050 <memchr+0x80>
    5073:	48 89 ca             	mov    %rcx,%rdx
    5076:	48 85 c0             	test   %rax,%rax
    5079:	74 86                	je     5001 <memchr+0x31>
    507b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5080:	0f b6 0a             	movzbl (%rdx),%ecx
    5083:	39 f1                	cmp    %esi,%ecx
    5085:	0f 84 78 ff ff ff    	je     5003 <memchr+0x33>
    508b:	48 83 c2 01          	add    $0x1,%rdx
    508f:	48 83 e8 01          	sub    $0x1,%rax
    5093:	75 eb                	jne    5080 <memchr+0xb0>
    5095:	e9 67 ff ff ff       	jmp    5001 <memchr+0x31>
    509a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    50a0:	48 89 ca             	mov    %rcx,%rdx
    50a3:	eb db                	jmp    5080 <memchr+0xb0>
    50a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    50ac:	00 00 00 
    50af:	90                   	nop

00000000000050b0 <memcmp>:
    50b0:	48 39 f7             	cmp    %rsi,%rdi
    50b3:	74 4b                	je     5100 <memcmp+0x50>
    50b5:	48 85 ff             	test   %rdi,%rdi
    50b8:	74 4e                	je     5108 <memcmp+0x58>
    50ba:	48 85 f6             	test   %rsi,%rsi
    50bd:	74 50                	je     510f <memcmp+0x5f>
    50bf:	31 c0                	xor    %eax,%eax
    50c1:	48 85 d2             	test   %rdx,%rdx
    50c4:	75 1b                	jne    50e1 <memcmp+0x31>
    50c6:	eb 46                	jmp    510e <memcmp+0x5e>
    50c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    50cf:	00 
    50d0:	48 83 c0 01          	add    $0x1,%rax
    50d4:	48 83 c7 01          	add    $0x1,%rdi
    50d8:	48 83 c6 01          	add    $0x1,%rsi
    50dc:	48 39 c2             	cmp    %rax,%rdx
    50df:	74 1f                	je     5100 <memcmp+0x50>
    50e1:	0f b6 0e             	movzbl (%rsi),%ecx
    50e4:	38 0f                	cmp    %cl,(%rdi)
    50e6:	74 e8                	je     50d0 <memcmp+0x20>
    50e8:	48 39 c2             	cmp    %rax,%rdx
    50eb:	74 13                	je     5100 <memcmp+0x50>
    50ed:	0f b6 07             	movzbl (%rdi),%eax
    50f0:	0f b6 d1             	movzbl %cl,%edx
    50f3:	29 d0                	sub    %edx,%eax
    50f5:	c3                   	ret    
    50f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    50fd:	00 00 00 
    5100:	31 c0                	xor    %eax,%eax
    5102:	c3                   	ret    
    5103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5108:	b8 01 00 00 00       	mov    $0x1,%eax
    510d:	c3                   	ret    
    510e:	c3                   	ret    
    510f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5114:	c3                   	ret    
    5115:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    511c:	00 00 00 
    511f:	90                   	nop

0000000000005120 <memcpy>:
    5120:	48 89 f9             	mov    %rdi,%rcx
    5123:	48 85 d2             	test   %rdx,%rdx
    5126:	74 66                	je     518e <memcpy+0x6e>
    5128:	49 89 f0             	mov    %rsi,%r8
    512b:	48 39 f7             	cmp    %rsi,%rdi
    512e:	74 5e                	je     518e <memcpy+0x6e>
    5130:	73 66                	jae    5198 <memcpy+0x78>
    5132:	48 89 f8             	mov    %rdi,%rax
    5135:	48 09 f0             	or     %rsi,%rax
    5138:	a8 03                	test   $0x3,%al
    513a:	0f 85 e8 00 00 00    	jne    5228 <memcpy+0x108>
    5140:	48 89 d7             	mov    %rdx,%rdi
    5143:	49 89 d1             	mov    %rdx,%r9
    5146:	48 89 ce             	mov    %rcx,%rsi
    5149:	49 89 d2             	mov    %rdx,%r10
    514c:	48 c1 ef 02          	shr    $0x2,%rdi
    5150:	41 83 e1 03          	and    $0x3,%r9d
    5154:	49 83 fa 03          	cmp    $0x3,%r10
    5158:	76 1c                	jbe    5176 <memcpy+0x56>
    515a:	48 c1 e7 02          	shl    $0x2,%rdi
    515e:	31 c0                	xor    %eax,%eax
    5160:	41 8b 14 00          	mov    (%r8,%rax,1),%edx
    5164:	89 14 06             	mov    %edx,(%rsi,%rax,1)
    5167:	48 83 c0 04          	add    $0x4,%rax
    516b:	48 39 f8             	cmp    %rdi,%rax
    516e:	75 f0                	jne    5160 <memcpy+0x40>
    5170:	49 01 c0             	add    %rax,%r8
    5173:	48 01 c6             	add    %rax,%rsi
    5176:	4d 85 c9             	test   %r9,%r9
    5179:	74 13                	je     518e <memcpy+0x6e>
    517b:	31 c0                	xor    %eax,%eax
    517d:	41 0f b6 14 00       	movzbl (%r8,%rax,1),%edx
    5182:	88 14 06             	mov    %dl,(%rsi,%rax,1)
    5185:	48 83 c0 01          	add    $0x1,%rax
    5189:	49 39 c1             	cmp    %rax,%r9
    518c:	75 ef                	jne    517d <memcpy+0x5d>
    518e:	48 89 c8             	mov    %rcx,%rax
    5191:	c3                   	ret    
    5192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5198:	55                   	push   %rbp
    5199:	49 01 d0             	add    %rdx,%r8
    519c:	4c 8d 0c 17          	lea    (%rdi,%rdx,1),%r9
    51a0:	4c 89 c0             	mov    %r8,%rax
    51a3:	4c 09 c8             	or     %r9,%rax
    51a6:	48 89 e5             	mov    %rsp,%rbp
    51a9:	41 54                	push   %r12
    51ab:	53                   	push   %rbx
    51ac:	a8 03                	test   $0x3,%al
    51ae:	0f 84 bc 00 00 00    	je     5270 <memcpy+0x150>
    51b4:	4c 89 c0             	mov    %r8,%rax
    51b7:	4c 31 c8             	xor    %r9,%rax
    51ba:	a8 03                	test   $0x3,%al
    51bc:	75 0a                	jne    51c8 <memcpy+0xa8>
    51be:	48 83 fa 04          	cmp    $0x4,%rdx
    51c2:	0f 87 18 01 00 00    	ja     52e0 <memcpy+0x1c0>
    51c8:	31 db                	xor    %ebx,%ebx
    51ca:	31 c0                	xor    %eax,%eax
    51cc:	45 31 e4             	xor    %r12d,%r12d
    51cf:	48 89 d6             	mov    %rdx,%rsi
    51d2:	48 f7 de             	neg    %rsi
    51d5:	0f 1f 00             	nopl   (%rax)
    51d8:	4d 8d 1c 30          	lea    (%r8,%rsi,1),%r11
    51dc:	4d 8d 14 31          	lea    (%r9,%rsi,1),%r10
    51e0:	41 0f b6 7c 13 ff    	movzbl -0x1(%r11,%rdx,1),%edi
    51e6:	41 88 7c 12 ff       	mov    %dil,-0x1(%r10,%rdx,1)
    51eb:	48 83 ea 01          	sub    $0x1,%rdx
    51ef:	75 e7                	jne    51d8 <memcpy+0xb8>
    51f1:	49 83 fc 03          	cmp    $0x3,%r12
    51f5:	0f 87 95 00 00 00    	ja     5290 <memcpy+0x170>
    51fb:	48 85 db             	test   %rbx,%rbx
    51fe:	74 1c                	je     521c <memcpy+0xfc>
    5200:	48 f7 d3             	not    %rbx
    5203:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    520a:	41 0f b6 14 03       	movzbl (%r11,%rax,1),%edx
    520f:	41 88 14 02          	mov    %dl,(%r10,%rax,1)
    5213:	48 83 e8 01          	sub    $0x1,%rax
    5217:	48 39 d8             	cmp    %rbx,%rax
    521a:	75 ee                	jne    520a <memcpy+0xea>
    521c:	5b                   	pop    %rbx
    521d:	48 89 c8             	mov    %rcx,%rax
    5220:	41 5c                	pop    %r12
    5222:	5d                   	pop    %rbp
    5223:	c3                   	ret    
    5224:	0f 1f 40 00          	nopl   0x0(%rax)
    5228:	48 89 f8             	mov    %rdi,%rax
    522b:	48 31 f0             	xor    %rsi,%rax
    522e:	a8 03                	test   $0x3,%al
    5230:	75 0a                	jne    523c <memcpy+0x11c>
    5232:	48 83 fa 03          	cmp    $0x3,%rdx
    5236:	0f 87 7c 00 00 00    	ja     52b8 <memcpy+0x198>
    523c:	45 31 c9             	xor    %r9d,%r9d
    523f:	31 ff                	xor    %edi,%edi
    5241:	45 31 d2             	xor    %r10d,%r10d
    5244:	31 c0                	xor    %eax,%eax
    5246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    524d:	00 00 00 
    5250:	41 0f b6 34 00       	movzbl (%r8,%rax,1),%esi
    5255:	40 88 34 01          	mov    %sil,(%rcx,%rax,1)
    5259:	48 83 c0 01          	add    $0x1,%rax
    525d:	48 39 c2             	cmp    %rax,%rdx
    5260:	75 ee                	jne    5250 <memcpy+0x130>
    5262:	49 01 d0             	add    %rdx,%r8
    5265:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    5269:	e9 e6 fe ff ff       	jmp    5154 <memcpy+0x34>
    526e:	66 90                	xchg   %ax,%ax
    5270:	48 89 d0             	mov    %rdx,%rax
    5273:	48 89 d3             	mov    %rdx,%rbx
    5276:	49 89 d4             	mov    %rdx,%r12
    5279:	4d 89 c3             	mov    %r8,%r11
    527c:	48 c1 e8 02          	shr    $0x2,%rax
    5280:	83 e3 03             	and    $0x3,%ebx
    5283:	4d 89 ca             	mov    %r9,%r10
    5286:	49 83 fc 03          	cmp    $0x3,%r12
    528a:	0f 86 6b ff ff ff    	jbe    51fb <memcpy+0xdb>
    5290:	48 89 c2             	mov    %rax,%rdx
    5293:	48 f7 da             	neg    %rdx
    5296:	48 c1 e2 02          	shl    $0x2,%rdx
    529a:	49 01 d3             	add    %rdx,%r11
    529d:	49 01 d2             	add    %rdx,%r10
    52a0:	41 8b 54 83 fc       	mov    -0x4(%r11,%rax,4),%edx
    52a5:	41 89 54 82 fc       	mov    %edx,-0x4(%r10,%rax,4)
    52aa:	48 83 e8 01          	sub    $0x1,%rax
    52ae:	75 f0                	jne    52a0 <memcpy+0x180>
    52b0:	e9 46 ff ff ff       	jmp    51fb <memcpy+0xdb>
    52b5:	0f 1f 00             	nopl   (%rax)
    52b8:	48 89 f0             	mov    %rsi,%rax
    52bb:	83 e0 03             	and    $0x3,%eax
    52be:	4c 8d 54 10 fc       	lea    -0x4(%rax,%rdx,1),%r10
    52c3:	ba 04 00 00 00       	mov    $0x4,%edx
    52c8:	4c 89 d7             	mov    %r10,%rdi
    52cb:	4d 89 d1             	mov    %r10,%r9
    52ce:	48 29 c2             	sub    %rax,%rdx
    52d1:	48 c1 ef 02          	shr    $0x2,%rdi
    52d5:	41 83 e1 03          	and    $0x3,%r9d
    52d9:	e9 66 ff ff ff       	jmp    5244 <memcpy+0x124>
    52de:	66 90                	xchg   %ax,%ax
    52e0:	4c 89 c6             	mov    %r8,%rsi
    52e3:	83 e6 03             	and    $0x3,%esi
    52e6:	48 29 f2             	sub    %rsi,%rdx
    52e9:	48 89 d0             	mov    %rdx,%rax
    52ec:	48 89 d3             	mov    %rdx,%rbx
    52ef:	49 89 d4             	mov    %rdx,%r12
    52f2:	48 89 f2             	mov    %rsi,%rdx
    52f5:	48 c1 e8 02          	shr    $0x2,%rax
    52f9:	83 e3 03             	and    $0x3,%ebx
    52fc:	e9 ce fe ff ff       	jmp    51cf <memcpy+0xaf>
    5301:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5308:	00 00 00 
    530b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005310 <memmem>:
    5310:	55                   	push   %rbp
    5311:	48 85 f6             	test   %rsi,%rsi
    5314:	0f 94 c0             	sete   %al
    5317:	48 39 ce             	cmp    %rcx,%rsi
    531a:	48 89 e5             	mov    %rsp,%rbp
    531d:	41 56                	push   %r14
    531f:	41 55                	push   %r13
    5321:	49 89 d5             	mov    %rdx,%r13
    5324:	0f 92 c2             	setb   %dl
    5327:	08 d0                	or     %dl,%al
    5329:	41 54                	push   %r12
    532b:	53                   	push   %rbx
    532c:	75 52                	jne    5380 <memmem+0x70>
    532e:	49 89 ce             	mov    %rcx,%r14
    5331:	48 85 c9             	test   %rcx,%rcx
    5334:	74 4a                	je     5380 <memmem+0x70>
    5336:	48 89 fb             	mov    %rdi,%rbx
    5339:	48 83 f9 01          	cmp    $0x1,%rcx
    533d:	74 4c                	je     538b <memmem+0x7b>
    533f:	48 29 ce             	sub    %rcx,%rsi
    5342:	48 01 fe             	add    %rdi,%rsi
    5345:	49 89 f4             	mov    %rsi,%r12
    5348:	73 0f                	jae    5359 <memmem+0x49>
    534a:	eb 34                	jmp    5380 <memmem+0x70>
    534c:	0f 1f 40 00          	nopl   0x0(%rax)
    5350:	48 83 c3 01          	add    $0x1,%rbx
    5354:	49 39 dc             	cmp    %rbx,%r12
    5357:	72 27                	jb     5380 <memmem+0x70>
    5359:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    535e:	38 03                	cmp    %al,(%rbx)
    5360:	75 ee                	jne    5350 <memmem+0x40>
    5362:	4c 89 f2             	mov    %r14,%rdx
    5365:	4c 89 ee             	mov    %r13,%rsi
    5368:	48 89 df             	mov    %rbx,%rdi
    536b:	e8 00 00 00 00       	call   5370 <memmem+0x60>
			536c: R_X86_64_PLT32	memcmp-0x4
    5370:	85 c0                	test   %eax,%eax
    5372:	75 dc                	jne    5350 <memmem+0x40>
    5374:	48 89 d8             	mov    %rbx,%rax
    5377:	eb 09                	jmp    5382 <memmem+0x72>
    5379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5380:	31 c0                	xor    %eax,%eax
    5382:	5b                   	pop    %rbx
    5383:	41 5c                	pop    %r12
    5385:	41 5d                	pop    %r13
    5387:	41 5e                	pop    %r14
    5389:	5d                   	pop    %rbp
    538a:	c3                   	ret    
    538b:	41 0f be 45 00       	movsbl 0x0(%r13),%eax
    5390:	5b                   	pop    %rbx
    5391:	48 89 f2             	mov    %rsi,%rdx
    5394:	41 5c                	pop    %r12
    5396:	41 5d                	pop    %r13
    5398:	89 c6                	mov    %eax,%esi
    539a:	41 5e                	pop    %r14
    539c:	5d                   	pop    %rbp
    539d:	e9 00 00 00 00       	jmp    53a2 <memmem+0x92>
			539e: R_X86_64_PLT32	memchr-0x4
    53a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    53a9:	00 00 00 
    53ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000053b0 <memmove>:
    53b0:	e9 00 00 00 00       	jmp    53b5 <memmove+0x5>
			53b1: R_X86_64_PLT32	memcpy-0x4
    53b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    53bc:	00 00 00 
    53bf:	90                   	nop

00000000000053c0 <__memrchr>:
    53c0:	48 8d 44 17 ff       	lea    -0x1(%rdi,%rdx,1),%rax
    53c5:	40 0f b6 f6          	movzbl %sil,%esi
    53c9:	48 83 ef 01          	sub    $0x1,%rdi
    53cd:	eb 0f                	jmp    53de <__memrchr+0x1e>
    53cf:	90                   	nop
    53d0:	48 89 c2             	mov    %rax,%rdx
    53d3:	48 83 e8 01          	sub    $0x1,%rax
    53d7:	0f b6 0a             	movzbl (%rdx),%ecx
    53da:	39 f1                	cmp    %esi,%ecx
    53dc:	74 07                	je     53e5 <__memrchr+0x25>
    53de:	48 39 f8             	cmp    %rdi,%rax
    53e1:	75 ed                	jne    53d0 <__memrchr+0x10>
    53e3:	31 d2                	xor    %edx,%edx
    53e5:	48 89 d0             	mov    %rdx,%rax
    53e8:	c3                   	ret    
    53e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000053f0 <memset>:
    53f0:	48 89 f8             	mov    %rdi,%rax
    53f3:	48 85 d2             	test   %rdx,%rdx
    53f6:	74 63                	je     545b <memset+0x6b>
    53f8:	40 88 74 17 ff       	mov    %sil,-0x1(%rdi,%rdx,1)
    53fd:	40 88 37             	mov    %sil,(%rdi)
    5400:	48 83 fa 02          	cmp    $0x2,%rdx
    5404:	76 55                	jbe    545b <memset+0x6b>
    5406:	40 88 74 17 fe       	mov    %sil,-0x2(%rdi,%rdx,1)
    540b:	40 88 77 01          	mov    %sil,0x1(%rdi)
    540f:	40 88 74 17 fd       	mov    %sil,-0x3(%rdi,%rdx,1)
    5414:	40 88 77 02          	mov    %sil,0x2(%rdi)
    5418:	48 83 fa 06          	cmp    $0x6,%rdx
    541c:	76 3d                	jbe    545b <memset+0x6b>
    541e:	40 88 74 17 fc       	mov    %sil,-0x4(%rdi,%rdx,1)
    5423:	40 88 77 03          	mov    %sil,0x3(%rdi)
    5427:	48 83 fa 08          	cmp    $0x8,%rdx
    542b:	76 2e                	jbe    545b <memset+0x6b>
    542d:	48 f7 df             	neg    %rdi
    5430:	40 0f b6 f6          	movzbl %sil,%esi
    5434:	83 e7 03             	and    $0x3,%edi
    5437:	69 f6 01 01 01 01    	imul   $0x1010101,%esi,%esi
    543d:	48 29 fa             	sub    %rdi,%rdx
    5440:	48 8d 0c 38          	lea    (%rax,%rdi,1),%rcx
    5444:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    5448:	48 01 ca             	add    %rcx,%rdx
    544b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5450:	89 31                	mov    %esi,(%rcx)
    5452:	48 83 c1 04          	add    $0x4,%rcx
    5456:	48 39 ca             	cmp    %rcx,%rdx
    5459:	75 f5                	jne    5450 <memset+0x60>
    545b:	c3                   	ret    
    545c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005460 <strcat>:
    5460:	55                   	push   %rbp
    5461:	48 89 e5             	mov    %rsp,%rbp
    5464:	41 55                	push   %r13
    5466:	49 89 f5             	mov    %rsi,%r13
    5469:	41 54                	push   %r12
    546b:	53                   	push   %rbx
    546c:	48 89 fb             	mov    %rdi,%rbx
    546f:	48 83 ec 08          	sub    $0x8,%rsp
    5473:	e8 00 00 00 00       	call   5478 <strcat+0x18>
			5474: R_X86_64_PLT32	strlen-0x4
    5478:	4c 89 ef             	mov    %r13,%rdi
    547b:	49 89 c4             	mov    %rax,%r12
    547e:	e8 00 00 00 00       	call   5483 <strcat+0x23>
			547f: R_X86_64_PLT32	strlen-0x4
    5483:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
    5487:	4c 89 ee             	mov    %r13,%rsi
    548a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    548e:	e8 00 00 00 00       	call   5493 <strcat+0x33>
			548f: R_X86_64_PLT32	memcpy-0x4
    5493:	48 83 c4 08          	add    $0x8,%rsp
    5497:	48 89 d8             	mov    %rbx,%rax
    549a:	5b                   	pop    %rbx
    549b:	41 5c                	pop    %r12
    549d:	41 5d                	pop    %r13
    549f:	5d                   	pop    %rbp
    54a0:	c3                   	ret    
    54a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    54a8:	00 00 00 
    54ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000054b0 <strchr>:
    54b0:	55                   	push   %rbp
    54b1:	48 89 e5             	mov    %rsp,%rbp
    54b4:	53                   	push   %rbx
    54b5:	89 f3                	mov    %esi,%ebx
    54b7:	48 83 ec 08          	sub    $0x8,%rsp
    54bb:	e8 00 00 00 00       	call   54c0 <strchr+0x10>
			54bc: R_X86_64_PLT32	__strchrnul-0x4
    54c0:	31 d2                	xor    %edx,%edx
    54c2:	38 18                	cmp    %bl,(%rax)
    54c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54c8:	c9                   	leave  
    54c9:	48 0f 45 c2          	cmovne %rdx,%rax
    54cd:	c3                   	ret    
    54ce:	66 90                	xchg   %ax,%ax

00000000000054d0 <__strchrnul>:
    54d0:	55                   	push   %rbp
    54d1:	89 f1                	mov    %esi,%ecx
    54d3:	48 89 e5             	mov    %rsp,%rbp
    54d6:	53                   	push   %rbx
    54d7:	48 89 fb             	mov    %rdi,%rbx
    54da:	48 83 ec 08          	sub    $0x8,%rsp
    54de:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    54e4:	75 21                	jne    5507 <__strchrnul+0x37>
    54e6:	e9 c5 00 00 00       	jmp    55b0 <__strchrnul+0xe0>
    54eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    54f0:	0f b6 03             	movzbl (%rbx),%eax
    54f3:	84 c0                	test   %al,%al
    54f5:	0f 84 ac 00 00 00    	je     55a7 <__strchrnul+0xd7>
    54fb:	39 c8                	cmp    %ecx,%eax
    54fd:	0f 84 a4 00 00 00    	je     55a7 <__strchrnul+0xd7>
    5503:	48 83 c3 01          	add    $0x1,%rbx
    5507:	f6 c3 07             	test   $0x7,%bl
    550a:	75 e4                	jne    54f0 <__strchrnul+0x20>
    550c:	48 bf 01 01 01 01 01 	movabs $0x101010101010101,%rdi
    5513:	01 01 01 
    5516:	4c 63 c1             	movslq %ecx,%r8
    5519:	48 8b 13             	mov    (%rbx),%rdx
    551c:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
    5523:	80 80 80 
    5526:	4c 0f af c7          	imul   %rdi,%r8
    552a:	48 89 d0             	mov    %rdx,%rax
    552d:	48 29 f8             	sub    %rdi,%rax
    5530:	4c 89 c6             	mov    %r8,%rsi
    5533:	48 31 d6             	xor    %rdx,%rsi
    5536:	48 f7 d2             	not    %rdx
    5539:	48 21 d0             	and    %rdx,%rax
    553c:	48 89 f2             	mov    %rsi,%rdx
    553f:	48 f7 d6             	not    %rsi
    5542:	48 29 fa             	sub    %rdi,%rdx
    5545:	48 21 f2             	and    %rsi,%rdx
    5548:	48 09 d0             	or     %rdx,%rax
    554b:	4c 85 c8             	test   %r9,%rax
    554e:	75 50                	jne    55a0 <__strchrnul+0xd0>
    5550:	48 bf ff fe fe fe fe 	movabs $0xfefefefefefefeff,%rdi
    5557:	fe fe fe 
    555a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5560:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5564:	48 83 c3 08          	add    $0x8,%rbx
    5568:	48 89 d6             	mov    %rdx,%rsi
    556b:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
    556f:	48 f7 d2             	not    %rdx
    5572:	4c 31 c6             	xor    %r8,%rsi
    5575:	48 21 d0             	and    %rdx,%rax
    5578:	48 8d 14 3e          	lea    (%rsi,%rdi,1),%rdx
    557c:	48 f7 d6             	not    %rsi
    557f:	48 21 f2             	and    %rsi,%rdx
    5582:	48 09 d0             	or     %rdx,%rax
    5585:	4c 85 c8             	test   %r9,%rax
    5588:	74 d6                	je     5560 <__strchrnul+0x90>
    558a:	0f b6 03             	movzbl (%rbx),%eax
    558d:	84 c0                	test   %al,%al
    558f:	74 16                	je     55a7 <__strchrnul+0xd7>
    5591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5598:	39 c8                	cmp    %ecx,%eax
    559a:	74 0b                	je     55a7 <__strchrnul+0xd7>
    559c:	48 83 c3 01          	add    $0x1,%rbx
    55a0:	0f b6 03             	movzbl (%rbx),%eax
    55a3:	84 c0                	test   %al,%al
    55a5:	75 f1                	jne    5598 <__strchrnul+0xc8>
    55a7:	48 89 d8             	mov    %rbx,%rax
    55aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55ae:	c9                   	leave  
    55af:	c3                   	ret    
    55b0:	e8 00 00 00 00       	call   55b5 <__strchrnul+0xe5>
			55b1: R_X86_64_PLT32	strlen-0x4
    55b5:	48 01 c3             	add    %rax,%rbx
    55b8:	48 89 d8             	mov    %rbx,%rax
    55bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55bf:	c9                   	leave  
    55c0:	c3                   	ret    
    55c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    55c8:	00 00 00 
    55cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000055d0 <strcmp>:
    55d0:	48 39 f7             	cmp    %rsi,%rdi
    55d3:	74 30                	je     5605 <strcmp+0x35>
    55d5:	48 85 ff             	test   %rdi,%rdi
    55d8:	74 3c                	je     5616 <strcmp+0x46>
    55da:	48 85 f6             	test   %rsi,%rsi
    55dd:	74 37                	je     5616 <strcmp+0x46>
    55df:	0f b6 17             	movzbl (%rdi),%edx
    55e2:	0f be 0e             	movsbl (%rsi),%ecx
    55e5:	38 ca                	cmp    %cl,%dl
    55e7:	75 27                	jne    5610 <strcmp+0x40>
    55e9:	b8 01 00 00 00       	mov    $0x1,%eax
    55ee:	eb 11                	jmp    5601 <strcmp+0x31>
    55f0:	0f b6 14 07          	movzbl (%rdi,%rax,1),%edx
    55f4:	48 83 c0 01          	add    $0x1,%rax
    55f8:	0f be 4c 06 ff       	movsbl -0x1(%rsi,%rax,1),%ecx
    55fd:	38 ca                	cmp    %cl,%dl
    55ff:	75 0f                	jne    5610 <strcmp+0x40>
    5601:	84 d2                	test   %dl,%dl
    5603:	75 eb                	jne    55f0 <strcmp+0x20>
    5605:	31 c0                	xor    %eax,%eax
    5607:	c3                   	ret    
    5608:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    560f:	00 
    5610:	0f be c2             	movsbl %dl,%eax
    5613:	29 c8                	sub    %ecx,%eax
    5615:	c3                   	ret    
    5616:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    561b:	c3                   	ret    
    561c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005620 <strcoll>:
    5620:	e9 00 00 00 00       	jmp    5625 <strcoll+0x5>
			5621: R_X86_64_PLT32	strcmp-0x4
    5625:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    562c:	00 00 00 
    562f:	90                   	nop

0000000000005630 <strcpy>:
    5630:	55                   	push   %rbp
    5631:	48 89 e5             	mov    %rsp,%rbp
    5634:	41 54                	push   %r12
    5636:	49 89 f4             	mov    %rsi,%r12
    5639:	53                   	push   %rbx
    563a:	48 89 fb             	mov    %rdi,%rbx
    563d:	48 89 f7             	mov    %rsi,%rdi
    5640:	e8 00 00 00 00       	call   5645 <strcpy+0x15>
			5641: R_X86_64_PLT32	strlen-0x4
    5645:	4c 89 e6             	mov    %r12,%rsi
    5648:	48 89 df             	mov    %rbx,%rdi
    564b:	48 8d 50 01          	lea    0x1(%rax),%rdx
    564f:	e8 00 00 00 00       	call   5654 <strcpy+0x24>
			5650: R_X86_64_PLT32	memcpy-0x4
    5654:	48 89 d8             	mov    %rbx,%rax
    5657:	5b                   	pop    %rbx
    5658:	41 5c                	pop    %r12
    565a:	5d                   	pop    %rbp
    565b:	c3                   	ret    
    565c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005660 <strcspn>:
    5660:	55                   	push   %rbp
    5661:	48 89 e5             	mov    %rsp,%rbp
    5664:	41 54                	push   %r12
    5666:	49 89 fc             	mov    %rdi,%r12
    5669:	53                   	push   %rbx
    566a:	48 89 f3             	mov    %rsi,%rbx
    566d:	48 83 ec 20          	sub    $0x20,%rsp
    5671:	0f be 36             	movsbl (%rsi),%esi
    5674:	40 84 f6             	test   %sil,%sil
    5677:	74 06                	je     567f <strcspn+0x1f>
    5679:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
    567d:	75 19                	jne    5698 <strcspn+0x38>
    567f:	4c 89 e7             	mov    %r12,%rdi
    5682:	e8 00 00 00 00       	call   5687 <strcspn+0x27>
			5683: R_X86_64_PLT32	__strchrnul-0x4
    5687:	48 83 c4 20          	add    $0x20,%rsp
    568b:	4c 29 e0             	sub    %r12,%rax
    568e:	5b                   	pop    %rbx
    568f:	41 5c                	pop    %r12
    5691:	5d                   	pop    %rbp
    5692:	c3                   	ret    
    5693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5698:	31 f6                	xor    %esi,%esi
    569a:	ba 20 00 00 00       	mov    $0x20,%edx
    569f:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
    56a3:	e8 00 00 00 00       	call   56a8 <strcspn+0x48>
			56a4: R_X86_64_PLT32	memset-0x4
    56a8:	0f b6 0b             	movzbl (%rbx),%ecx
    56ab:	be 01 00 00 00       	mov    $0x1,%esi
    56b0:	84 c9                	test   %cl,%cl
    56b2:	74 22                	je     56d6 <strcspn+0x76>
    56b4:	0f 1f 40 00          	nopl   0x0(%rax)
    56b8:	89 c8                	mov    %ecx,%eax
    56ba:	48 89 f2             	mov    %rsi,%rdx
    56bd:	48 83 c3 01          	add    $0x1,%rbx
    56c1:	48 d3 e2             	shl    %cl,%rdx
    56c4:	c0 e8 06             	shr    $0x6,%al
    56c7:	0f b6 0b             	movzbl (%rbx),%ecx
    56ca:	0f b6 c0             	movzbl %al,%eax
    56cd:	48 09 54 c5 d0       	or     %rdx,-0x30(%rbp,%rax,8)
    56d2:	84 c9                	test   %cl,%cl
    56d4:	75 e2                	jne    56b8 <strcspn+0x58>
    56d6:	41 0f b6 0c 24       	movzbl (%r12),%ecx
    56db:	4c 89 e0             	mov    %r12,%rax
    56de:	84 c9                	test   %cl,%cl
    56e0:	75 12                	jne    56f4 <strcspn+0x94>
    56e2:	eb 25                	jmp    5709 <strcspn+0xa9>
    56e4:	0f 1f 40 00          	nopl   0x0(%rax)
    56e8:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    56ec:	48 83 c0 01          	add    $0x1,%rax
    56f0:	84 c9                	test   %cl,%cl
    56f2:	74 15                	je     5709 <strcspn+0xa9>
    56f4:	89 ca                	mov    %ecx,%edx
    56f6:	c0 ea 06             	shr    $0x6,%dl
    56f9:	0f b6 d2             	movzbl %dl,%edx
    56fc:	48 8b 54 d5 d0       	mov    -0x30(%rbp,%rdx,8),%rdx
    5701:	48 d3 ea             	shr    %cl,%rdx
    5704:	83 e2 01             	and    $0x1,%edx
    5707:	74 df                	je     56e8 <strcspn+0x88>
    5709:	48 83 c4 20          	add    $0x20,%rsp
    570d:	4c 29 e0             	sub    %r12,%rax
    5710:	5b                   	pop    %rbx
    5711:	41 5c                	pop    %r12
    5713:	5d                   	pop    %rbp
    5714:	c3                   	ret    
    5715:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    571c:	00 00 00 
    571f:	90                   	nop

0000000000005720 <strdup>:
    5720:	31 c0                	xor    %eax,%eax
    5722:	c3                   	ret    
    5723:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    572a:	00 00 00 
    572d:	0f 1f 00             	nopl   (%rax)

0000000000005730 <strerror>:
    5730:	ba 01 00 00 00       	mov    $0x1,%edx
    5735:	b8 5c 00 00 00       	mov    $0x5c,%eax
    573a:	eb 16                	jmp    5752 <strerror+0x22>
    573c:	0f 1f 40 00          	nopl   0x0(%rax)
    5740:	0f b6 82 00 00 00 00 	movzbl 0x0(%rdx),%eax
			5743: R_X86_64_32S	.rodata+0xc00
    5747:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    574b:	84 c0                	test   %al,%al
    574d:	74 11                	je     5760 <strerror+0x30>
    574f:	48 89 ca             	mov    %rcx,%rdx
    5752:	39 f8                	cmp    %edi,%eax
    5754:	75 ea                	jne    5740 <strerror+0x10>
    5756:	83 ea 01             	sub    $0x1,%edx
    5759:	b9 00 00 00 00       	mov    $0x0,%ecx
			575a: R_X86_64_32	.rodata+0x520
    575e:	74 38                	je     5798 <strerror+0x68>
    5760:	be 49 00 00 00       	mov    $0x49,%esi
    5765:	b8 00 00 00 00       	mov    $0x0,%eax
			5766: R_X86_64_32	.rodata+0x520
    576a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5770:	40 84 f6             	test   %sil,%sil
    5773:	74 0c                	je     5781 <strerror+0x51>
    5775:	0f 1f 00             	nopl   (%rax)
    5778:	48 83 c0 01          	add    $0x1,%rax
    577c:	80 38 00             	cmpb   $0x0,(%rax)
    577f:	75 f7                	jne    5778 <strerror+0x48>
    5781:	48 8d 48 01          	lea    0x1(%rax),%rcx
    5785:	83 ea 01             	sub    $0x1,%edx
    5788:	74 0e                	je     5798 <strerror+0x68>
    578a:	0f b6 70 01          	movzbl 0x1(%rax),%esi
    578e:	48 89 c8             	mov    %rcx,%rax
    5791:	eb dd                	jmp    5770 <strerror+0x40>
    5793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5798:	48 89 c8             	mov    %rcx,%rax
    579b:	c3                   	ret    
    579c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000057a0 <strerror_r>:
    57a0:	55                   	push   %rbp
    57a1:	48 89 e5             	mov    %rsp,%rbp
    57a4:	41 55                	push   %r13
    57a6:	41 54                	push   %r12
    57a8:	49 89 f4             	mov    %rsi,%r12
    57ab:	53                   	push   %rbx
    57ac:	48 89 d3             	mov    %rdx,%rbx
    57af:	48 83 ec 08          	sub    $0x8,%rsp
    57b3:	e8 00 00 00 00       	call   57b8 <strerror_r+0x18>
			57b4: R_X86_64_PLT32	strerror-0x4
    57b8:	48 89 c7             	mov    %rax,%rdi
    57bb:	49 89 c5             	mov    %rax,%r13
    57be:	e8 00 00 00 00       	call   57c3 <strerror_r+0x23>
			57bf: R_X86_64_PLT32	strlen-0x4
    57c3:	4d 85 e4             	test   %r12,%r12
    57c6:	74 57                	je     581f <strerror_r+0x7f>
    57c8:	48 39 d8             	cmp    %rbx,%rax
    57cb:	72 1b                	jb     57e8 <strerror_r+0x48>
    57cd:	48 85 db             	test   %rbx,%rbx
    57d0:	75 36                	jne    5808 <strerror_r+0x68>
    57d2:	48 83 c4 08          	add    $0x8,%rsp
    57d6:	b8 22 00 00 00       	mov    $0x22,%eax
    57db:	5b                   	pop    %rbx
    57dc:	41 5c                	pop    %r12
    57de:	41 5d                	pop    %r13
    57e0:	5d                   	pop    %rbp
    57e1:	c3                   	ret    
    57e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    57e8:	4c 89 ee             	mov    %r13,%rsi
    57eb:	4c 89 e7             	mov    %r12,%rdi
    57ee:	48 8d 50 01          	lea    0x1(%rax),%rdx
    57f2:	e8 00 00 00 00       	call   57f7 <strerror_r+0x57>
			57f3: R_X86_64_PLT32	memcpy-0x4
    57f7:	48 83 c4 08          	add    $0x8,%rsp
    57fb:	31 c0                	xor    %eax,%eax
    57fd:	5b                   	pop    %rbx
    57fe:	41 5c                	pop    %r12
    5800:	41 5d                	pop    %r13
    5802:	5d                   	pop    %rbp
    5803:	c3                   	ret    
    5804:	0f 1f 40 00          	nopl   0x0(%rax)
    5808:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
    580c:	4c 89 ee             	mov    %r13,%rsi
    580f:	4c 89 e7             	mov    %r12,%rdi
    5812:	e8 00 00 00 00       	call   5817 <strerror_r+0x77>
			5813: R_X86_64_PLT32	memcpy-0x4
    5817:	41 c6 44 1c ff 00    	movb   $0x0,-0x1(%r12,%rbx,1)
    581d:	eb b3                	jmp    57d2 <strerror_r+0x32>
    581f:	b9 00 00 00 00       	mov    $0x0,%ecx
			5820: R_X86_64_32	.rodata+0xc58
    5824:	ba 0b 00 00 00       	mov    $0xb,%edx
    5829:	be 00 00 00 00       	mov    $0x0,%esi
			582a: R_X86_64_32	.rodata.str1.1+0x2b
    582e:	bf 00 00 00 00       	mov    $0x0,%edi
			582f: R_X86_64_32	.rodata.str1.1+0x43
    5833:	e8 00 00 00 00       	call   5838 <strerror_r+0x98>
			5834: R_X86_64_PLT32	__assert_fail-0x4
    5838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    583f:	00 

0000000000005840 <strlen>:
    5840:	48 89 fa             	mov    %rdi,%rdx
    5843:	40 f6 c7 07          	test   $0x7,%dil
    5847:	75 11                	jne    585a <strlen+0x1a>
    5849:	eb 3b                	jmp    5886 <strlen+0x46>
    584b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5850:	48 83 c7 01          	add    $0x1,%rdi
    5854:	40 f6 c7 07          	test   $0x7,%dil
    5858:	74 2c                	je     5886 <strlen+0x46>
    585a:	80 3f 00             	cmpb   $0x0,(%rdi)
    585d:	75 f1                	jne    5850 <strlen+0x10>
    585f:	48 89 f8             	mov    %rdi,%rax
    5862:	48 29 d0             	sub    %rdx,%rax
    5865:	c3                   	ret    
    5866:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    586d:	00 00 00 
    5870:	80 7f 01 00          	cmpb   $0x0,0x1(%rdi)
    5874:	74 2a                	je     58a0 <strlen+0x60>
    5876:	80 7f 02 00          	cmpb   $0x0,0x2(%rdi)
    587a:	74 34                	je     58b0 <strlen+0x70>
    587c:	80 7f 03 00          	cmpb   $0x0,0x3(%rdi)
    5880:	74 3e                	je     58c0 <strlen+0x80>
    5882:	48 83 c7 08          	add    $0x8,%rdi
    5886:	48 8b 07             	mov    (%rdi),%rax
    5889:	48 2d 01 01 01 01    	sub    $0x1010101,%rax
    588f:	a9 80 80 80 80       	test   $0x80808080,%eax
    5894:	74 ec                	je     5882 <strlen+0x42>
    5896:	80 3f 00             	cmpb   $0x0,(%rdi)
    5899:	75 d5                	jne    5870 <strlen+0x30>
    589b:	eb c2                	jmp    585f <strlen+0x1f>
    589d:	0f 1f 00             	nopl   (%rax)
    58a0:	48 29 d7             	sub    %rdx,%rdi
    58a3:	48 8d 47 01          	lea    0x1(%rdi),%rax
    58a7:	c3                   	ret    
    58a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58af:	00 
    58b0:	48 29 d7             	sub    %rdx,%rdi
    58b3:	48 8d 47 02          	lea    0x2(%rdi),%rax
    58b7:	c3                   	ret    
    58b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58bf:	00 
    58c0:	48 29 d7             	sub    %rdx,%rdi
    58c3:	48 8d 47 03          	lea    0x3(%rdi),%rax
    58c7:	c3                   	ret    
    58c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58cf:	00 

00000000000058d0 <strncat>:
    58d0:	55                   	push   %rbp
    58d1:	48 89 e5             	mov    %rsp,%rbp
    58d4:	41 56                	push   %r14
    58d6:	49 89 f6             	mov    %rsi,%r14
    58d9:	41 55                	push   %r13
    58db:	49 89 fd             	mov    %rdi,%r13
    58de:	41 54                	push   %r12
    58e0:	53                   	push   %rbx
    58e1:	48 89 d3             	mov    %rdx,%rbx
    58e4:	e8 00 00 00 00       	call   58e9 <strncat+0x19>
			58e5: R_X86_64_PLT32	strlen-0x4
    58e9:	48 89 de             	mov    %rbx,%rsi
    58ec:	4c 89 f7             	mov    %r14,%rdi
    58ef:	49 89 c4             	mov    %rax,%r12
    58f2:	e8 00 00 00 00       	call   58f7 <strncat+0x27>
			58f3: R_X86_64_PLT32	strnlen-0x4
    58f7:	4c 89 f6             	mov    %r14,%rsi
    58fa:	48 39 c3             	cmp    %rax,%rbx
    58fd:	48 0f 47 d8          	cmova  %rax,%rbx
    5901:	4d 01 ec             	add    %r13,%r12
    5904:	4c 89 e7             	mov    %r12,%rdi
    5907:	48 89 da             	mov    %rbx,%rdx
    590a:	e8 00 00 00 00       	call   590f <strncat+0x3f>
			590b: R_X86_64_PLT32	memcpy-0x4
    590f:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
    5914:	4c 89 e8             	mov    %r13,%rax
    5917:	5b                   	pop    %rbx
    5918:	41 5c                	pop    %r12
    591a:	41 5d                	pop    %r13
    591c:	41 5e                	pop    %r14
    591e:	5d                   	pop    %rbp
    591f:	c3                   	ret    

0000000000005920 <strncmp>:
    5920:	48 39 f7             	cmp    %rsi,%rdi
    5923:	74 3b                	je     5960 <strncmp+0x40>
    5925:	48 85 ff             	test   %rdi,%rdi
    5928:	74 39                	je     5963 <strncmp+0x43>
    592a:	48 85 f6             	test   %rsi,%rsi
    592d:	74 34                	je     5963 <strncmp+0x43>
    592f:	48 85 d2             	test   %rdx,%rdx
    5932:	75 1e                	jne    5952 <strncmp+0x32>
    5934:	eb 2a                	jmp    5960 <strncmp+0x40>
    5936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    593d:	00 00 00 
    5940:	84 c0                	test   %al,%al
    5942:	74 1c                	je     5960 <strncmp+0x40>
    5944:	48 83 c7 01          	add    $0x1,%rdi
    5948:	48 83 c6 01          	add    $0x1,%rsi
    594c:	48 83 ea 01          	sub    $0x1,%rdx
    5950:	74 0e                	je     5960 <strncmp+0x40>
    5952:	0f be 07             	movsbl (%rdi),%eax
    5955:	3a 06                	cmp    (%rsi),%al
    5957:	74 e7                	je     5940 <strncmp+0x20>
    5959:	0f be 16             	movsbl (%rsi),%edx
    595c:	29 d0                	sub    %edx,%eax
    595e:	c3                   	ret    
    595f:	90                   	nop
    5960:	31 c0                	xor    %eax,%eax
    5962:	c3                   	ret    
    5963:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5968:	c3                   	ret    
    5969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005970 <strncpy>:
    5970:	55                   	push   %rbp
    5971:	48 89 e5             	mov    %rsp,%rbp
    5974:	41 56                	push   %r14
    5976:	49 89 f6             	mov    %rsi,%r14
    5979:	48 89 d6             	mov    %rdx,%rsi
    597c:	41 55                	push   %r13
    597e:	49 89 fd             	mov    %rdi,%r13
    5981:	4c 89 f7             	mov    %r14,%rdi
    5984:	41 54                	push   %r12
    5986:	53                   	push   %rbx
    5987:	48 89 d3             	mov    %rdx,%rbx
    598a:	e8 00 00 00 00       	call   598f <strncpy+0x1f>
			598b: R_X86_64_PLT32	strnlen-0x4
    598f:	48 39 d8             	cmp    %rbx,%rax
    5992:	73 34                	jae    59c8 <strncpy+0x58>
    5994:	49 89 c4             	mov    %rax,%r12
    5997:	4c 89 f6             	mov    %r14,%rsi
    599a:	4c 89 ef             	mov    %r13,%rdi
    599d:	48 89 c2             	mov    %rax,%rdx
    59a0:	e8 00 00 00 00       	call   59a5 <strncpy+0x35>
			59a1: R_X86_64_PLT32	memcpy-0x4
    59a5:	4c 29 e3             	sub    %r12,%rbx
    59a8:	4b 8d 7c 25 00       	lea    0x0(%r13,%r12,1),%rdi
    59ad:	31 f6                	xor    %esi,%esi
    59af:	48 89 da             	mov    %rbx,%rdx
    59b2:	e8 00 00 00 00       	call   59b7 <strncpy+0x47>
			59b3: R_X86_64_PLT32	memset-0x4
    59b7:	5b                   	pop    %rbx
    59b8:	4c 89 e8             	mov    %r13,%rax
    59bb:	41 5c                	pop    %r12
    59bd:	41 5d                	pop    %r13
    59bf:	41 5e                	pop    %r14
    59c1:	5d                   	pop    %rbp
    59c2:	c3                   	ret    
    59c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    59c8:	48 89 da             	mov    %rbx,%rdx
    59cb:	4c 89 f6             	mov    %r14,%rsi
    59ce:	4c 89 ef             	mov    %r13,%rdi
    59d1:	e8 00 00 00 00       	call   59d6 <strncpy+0x66>
			59d2: R_X86_64_PLT32	memcpy-0x4
    59d6:	5b                   	pop    %rbx
    59d7:	4c 89 e8             	mov    %r13,%rax
    59da:	41 5c                	pop    %r12
    59dc:	41 5d                	pop    %r13
    59de:	41 5e                	pop    %r14
    59e0:	5d                   	pop    %rbp
    59e1:	c3                   	ret    
    59e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59e9:	00 00 00 
    59ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000059f0 <strndup>:
    59f0:	31 c0                	xor    %eax,%eax
    59f2:	c3                   	ret    
    59f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59fa:	00 00 00 
    59fd:	0f 1f 00             	nopl   (%rax)

0000000000005a00 <strnlen>:
    5a00:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    5a04:	48 89 f8             	mov    %rdi,%rax
    5a07:	48 85 f6             	test   %rsi,%rsi
    5a0a:	75 0d                	jne    5a19 <strnlen+0x19>
    5a0c:	eb 21                	jmp    5a2f <strnlen+0x2f>
    5a0e:	66 90                	xchg   %ax,%ax
    5a10:	48 83 c0 01          	add    $0x1,%rax
    5a14:	48 39 c2             	cmp    %rax,%rdx
    5a17:	74 0f                	je     5a28 <strnlen+0x28>
    5a19:	80 38 00             	cmpb   $0x0,(%rax)
    5a1c:	75 f2                	jne    5a10 <strnlen+0x10>
    5a1e:	48 29 f8             	sub    %rdi,%rax
    5a21:	c3                   	ret    
    5a22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5a28:	48 89 d0             	mov    %rdx,%rax
    5a2b:	48 29 f8             	sub    %rdi,%rax
    5a2e:	c3                   	ret    
    5a2f:	31 c0                	xor    %eax,%eax
    5a31:	c3                   	ret    
    5a32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a39:	00 00 00 
    5a3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005a40 <strnstr>:
    5a40:	55                   	push   %rbp
    5a41:	48 89 e5             	mov    %rsp,%rbp
    5a44:	41 57                	push   %r15
    5a46:	41 56                	push   %r14
    5a48:	41 55                	push   %r13
    5a4a:	41 54                	push   %r12
    5a4c:	53                   	push   %rbx
    5a4d:	48 89 fb             	mov    %rdi,%rbx
    5a50:	48 83 ec 18          	sub    $0x18,%rsp
    5a54:	44 0f b6 3e          	movzbl (%rsi),%r15d
    5a58:	45 84 ff             	test   %r15b,%r15b
    5a5b:	75 13                	jne    5a70 <strnstr+0x30>
    5a5d:	48 83 c4 18          	add    $0x18,%rsp
    5a61:	48 89 d8             	mov    %rbx,%rax
    5a64:	5b                   	pop    %rbx
    5a65:	41 5c                	pop    %r12
    5a67:	41 5d                	pop    %r13
    5a69:	41 5e                	pop    %r14
    5a6b:	41 5f                	pop    %r15
    5a6d:	5d                   	pop    %rbp
    5a6e:	c3                   	ret    
    5a6f:	90                   	nop
    5a70:	48 8d 46 01          	lea    0x1(%rsi),%rax
    5a74:	49 89 d5             	mov    %rdx,%r13
    5a77:	48 89 c7             	mov    %rax,%rdi
    5a7a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5a7e:	4d 8d 65 ff          	lea    -0x1(%r13),%r12
    5a82:	e8 00 00 00 00       	call   5a87 <strnstr+0x47>
			5a83: R_X86_64_PLT32	strlen-0x4
    5a87:	49 89 c6             	mov    %rax,%r14
    5a8a:	4d 85 ed             	test   %r13,%r13
    5a8d:	75 0f                	jne    5a9e <strnstr+0x5e>
    5a8f:	eb 3f                	jmp    5ad0 <strnstr+0x90>
    5a91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5a98:	49 83 ec 01          	sub    $0x1,%r12
    5a9c:	72 32                	jb     5ad0 <strnstr+0x90>
    5a9e:	49 89 dd             	mov    %rbx,%r13
    5aa1:	0f b6 03             	movzbl (%rbx),%eax
    5aa4:	48 83 c3 01          	add    $0x1,%rbx
    5aa8:	84 c0                	test   %al,%al
    5aaa:	74 24                	je     5ad0 <strnstr+0x90>
    5aac:	41 38 c7             	cmp    %al,%r15b
    5aaf:	75 e7                	jne    5a98 <strnstr+0x58>
    5ab1:	4d 39 f4             	cmp    %r14,%r12
    5ab4:	72 1a                	jb     5ad0 <strnstr+0x90>
    5ab6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5aba:	4c 89 f2             	mov    %r14,%rdx
    5abd:	48 89 df             	mov    %rbx,%rdi
    5ac0:	e8 00 00 00 00       	call   5ac5 <strnstr+0x85>
			5ac1: R_X86_64_PLT32	strncmp-0x4
    5ac5:	85 c0                	test   %eax,%eax
    5ac7:	75 cf                	jne    5a98 <strnstr+0x58>
    5ac9:	4c 89 eb             	mov    %r13,%rbx
    5acc:	eb 8f                	jmp    5a5d <strnstr+0x1d>
    5ace:	66 90                	xchg   %ax,%ax
    5ad0:	31 db                	xor    %ebx,%ebx
    5ad2:	eb 89                	jmp    5a5d <strnstr+0x1d>
    5ad4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5adb:	00 00 00 
    5ade:	66 90                	xchg   %ax,%ax

0000000000005ae0 <strpbrk>:
    5ae0:	55                   	push   %rbp
    5ae1:	48 89 e5             	mov    %rsp,%rbp
    5ae4:	53                   	push   %rbx
    5ae5:	48 89 fb             	mov    %rdi,%rbx
    5ae8:	48 83 ec 08          	sub    $0x8,%rsp
    5aec:	e8 00 00 00 00       	call   5af1 <strpbrk+0x11>
			5aed: R_X86_64_PLT32	strcspn-0x4
    5af1:	31 d2                	xor    %edx,%edx
    5af3:	48 01 d8             	add    %rbx,%rax
    5af6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5afa:	80 38 00             	cmpb   $0x0,(%rax)
    5afd:	c9                   	leave  
    5afe:	48 0f 44 c2          	cmove  %rdx,%rax
    5b02:	c3                   	ret    
    5b03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b0a:	00 00 00 
    5b0d:	0f 1f 00             	nopl   (%rax)

0000000000005b10 <strrchr>:
    5b10:	55                   	push   %rbp
    5b11:	48 89 e5             	mov    %rsp,%rbp
    5b14:	41 54                	push   %r12
    5b16:	41 89 f4             	mov    %esi,%r12d
    5b19:	53                   	push   %rbx
    5b1a:	48 89 fb             	mov    %rdi,%rbx
    5b1d:	e8 00 00 00 00       	call   5b22 <strrchr+0x12>
			5b1e: R_X86_64_PLT32	strlen-0x4
    5b22:	44 89 e6             	mov    %r12d,%esi
    5b25:	48 89 df             	mov    %rbx,%rdi
    5b28:	5b                   	pop    %rbx
    5b29:	48 8d 50 01          	lea    0x1(%rax),%rdx
    5b2d:	41 5c                	pop    %r12
    5b2f:	5d                   	pop    %rbp
    5b30:	e9 00 00 00 00       	jmp    5b35 <strrchr+0x25>
			5b31: R_X86_64_PLT32	__memrchr-0x4
    5b35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b3c:	00 00 00 
    5b3f:	90                   	nop

0000000000005b40 <strspn>:
    5b40:	55                   	push   %rbp
    5b41:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5b45:	31 c0                	xor    %eax,%eax
    5b47:	48 89 e5             	mov    %rsp,%rbp
    5b4a:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    5b4e:	0f b6 0e             	movzbl (%rsi),%ecx
    5b51:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
    5b55:	84 c9                	test   %cl,%cl
    5b57:	74 6d                	je     5bc6 <strspn+0x86>
    5b59:	80 7e 01 00          	cmpb   $0x0,0x1(%rsi)
    5b5d:	0f b6 17             	movzbl (%rdi),%edx
    5b60:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    5b66:	74 68                	je     5bd0 <strspn+0x90>
    5b68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b6f:	00 
    5b70:	89 c8                	mov    %ecx,%eax
    5b72:	4d 89 c1             	mov    %r8,%r9
    5b75:	48 83 c6 01          	add    $0x1,%rsi
    5b79:	49 d3 e1             	shl    %cl,%r9
    5b7c:	c0 e8 06             	shr    $0x6,%al
    5b7f:	0f b6 0e             	movzbl (%rsi),%ecx
    5b82:	0f b6 c0             	movzbl %al,%eax
    5b85:	4c 09 4c c5 e0       	or     %r9,-0x20(%rbp,%rax,8)
    5b8a:	84 c9                	test   %cl,%cl
    5b8c:	75 e2                	jne    5b70 <strspn+0x30>
    5b8e:	48 89 f8             	mov    %rdi,%rax
    5b91:	84 d2                	test   %dl,%dl
    5b93:	75 17                	jne    5bac <strspn+0x6c>
    5b95:	eb 2c                	jmp    5bc3 <strspn+0x83>
    5b97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5b9e:	00 00 
    5ba0:	0f b6 50 01          	movzbl 0x1(%rax),%edx
    5ba4:	48 83 c0 01          	add    $0x1,%rax
    5ba8:	84 d2                	test   %dl,%dl
    5baa:	74 17                	je     5bc3 <strspn+0x83>
    5bac:	89 d1                	mov    %edx,%ecx
    5bae:	c0 e9 06             	shr    $0x6,%cl
    5bb1:	0f b6 c9             	movzbl %cl,%ecx
    5bb4:	48 8b 74 cd e0       	mov    -0x20(%rbp,%rcx,8),%rsi
    5bb9:	89 d1                	mov    %edx,%ecx
    5bbb:	48 d3 ee             	shr    %cl,%rsi
    5bbe:	83 e6 01             	and    $0x1,%esi
    5bc1:	75 dd                	jne    5ba0 <strspn+0x60>
    5bc3:	48 29 f8             	sub    %rdi,%rax
    5bc6:	5d                   	pop    %rbp
    5bc7:	c3                   	ret    
    5bc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5bcf:	00 
    5bd0:	48 89 f8             	mov    %rdi,%rax
    5bd3:	38 d1                	cmp    %dl,%cl
    5bd5:	75 ec                	jne    5bc3 <strspn+0x83>
    5bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5bde:	00 00 
    5be0:	48 83 c0 01          	add    $0x1,%rax
    5be4:	3a 08                	cmp    (%rax),%cl
    5be6:	75 db                	jne    5bc3 <strspn+0x83>
    5be8:	48 83 c0 01          	add    $0x1,%rax
    5bec:	3a 08                	cmp    (%rax),%cl
    5bee:	74 f0                	je     5be0 <strspn+0xa0>
    5bf0:	eb d1                	jmp    5bc3 <strspn+0x83>
    5bf2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5bf9:	00 00 00 
    5bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c00 <strstr>:
    5c00:	44 0f b6 06          	movzbl (%rsi),%r8d
    5c04:	48 89 f8             	mov    %rdi,%rax
    5c07:	45 84 c0             	test   %r8b,%r8b
    5c0a:	74 3b                	je     5c47 <strstr+0x47>
    5c0c:	0f b6 07             	movzbl (%rdi),%eax
    5c0f:	84 c0                	test   %al,%al
    5c11:	75 11                	jne    5c24 <strstr+0x24>
    5c13:	eb 3b                	jmp    5c50 <strstr+0x50>
    5c15:	0f 1f 00             	nopl   (%rax)
    5c18:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
    5c1c:	48 83 c7 01          	add    $0x1,%rdi
    5c20:	84 c0                	test   %al,%al
    5c22:	74 2c                	je     5c50 <strstr+0x50>
    5c24:	41 38 c0             	cmp    %al,%r8b
    5c27:	75 ef                	jne    5c18 <strstr+0x18>
    5c29:	31 c0                	xor    %eax,%eax
    5c2b:	eb 0f                	jmp    5c3c <strstr+0x3c>
    5c2d:	0f 1f 00             	nopl   (%rax)
    5c30:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx
    5c34:	48 83 c0 01          	add    $0x1,%rax
    5c38:	38 ca                	cmp    %cl,%dl
    5c3a:	75 dc                	jne    5c18 <strstr+0x18>
    5c3c:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    5c40:	84 d2                	test   %dl,%dl
    5c42:	75 ec                	jne    5c30 <strstr+0x30>
    5c44:	48 89 f8             	mov    %rdi,%rax
    5c47:	c3                   	ret    
    5c48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5c4f:	00 
    5c50:	31 c0                	xor    %eax,%eax
    5c52:	c3                   	ret    
    5c53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5c5a:	00 00 00 
    5c5d:	0f 1f 00             	nopl   (%rax)

0000000000005c60 <__strtok_r>:
    5c60:	48 85 ff             	test   %rdi,%rdi
    5c63:	74 7b                	je     5ce0 <__strtok_r+0x80>
    5c65:	44 0f be 0f          	movsbl (%rdi),%r9d
    5c69:	48 8d 47 01          	lea    0x1(%rdi),%rax
    5c6d:	48 89 f1             	mov    %rsi,%rcx
    5c70:	eb 0b                	jmp    5c7d <__strtok_r+0x1d>
    5c72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c78:	45 39 c1             	cmp    %r8d,%r9d
    5c7b:	74 4b                	je     5cc8 <__strtok_r+0x68>
    5c7d:	44 0f be 01          	movsbl (%rcx),%r8d
    5c81:	48 83 c1 01          	add    $0x1,%rcx
    5c85:	45 85 c0             	test   %r8d,%r8d
    5c88:	75 ee                	jne    5c78 <__strtok_r+0x18>
    5c8a:	45 85 c9             	test   %r9d,%r9d
    5c8d:	74 61                	je     5cf0 <__strtok_r+0x90>
    5c8f:	48 83 c0 01          	add    $0x1,%rax
    5c93:	48 89 f1             	mov    %rsi,%rcx
    5c96:	44 0f be 48 ff       	movsbl -0x1(%rax),%r9d
    5c9b:	eb 08                	jmp    5ca5 <__strtok_r+0x45>
    5c9d:	0f 1f 00             	nopl   (%rax)
    5ca0:	45 85 c0             	test   %r8d,%r8d
    5ca3:	74 ea                	je     5c8f <__strtok_r+0x2f>
    5ca5:	44 0f be 01          	movsbl (%rcx),%r8d
    5ca9:	48 83 c1 01          	add    $0x1,%rcx
    5cad:	45 39 c1             	cmp    %r8d,%r9d
    5cb0:	75 ee                	jne    5ca0 <__strtok_r+0x40>
    5cb2:	45 85 c9             	test   %r9d,%r9d
    5cb5:	74 19                	je     5cd0 <__strtok_r+0x70>
    5cb7:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
    5cbb:	48 89 02             	mov    %rax,(%rdx)
    5cbe:	48 89 f8             	mov    %rdi,%rax
    5cc1:	c3                   	ret    
    5cc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5cc8:	48 89 c7             	mov    %rax,%rdi
    5ccb:	eb 98                	jmp    5c65 <__strtok_r+0x5>
    5ccd:	0f 1f 00             	nopl   (%rax)
    5cd0:	31 c0                	xor    %eax,%eax
    5cd2:	48 89 02             	mov    %rax,(%rdx)
    5cd5:	48 89 f8             	mov    %rdi,%rax
    5cd8:	c3                   	ret    
    5cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ce0:	48 8b 3a             	mov    (%rdx),%rdi
    5ce3:	48 85 ff             	test   %rdi,%rdi
    5ce6:	0f 85 79 ff ff ff    	jne    5c65 <__strtok_r+0x5>
    5cec:	31 c0                	xor    %eax,%eax
    5cee:	c3                   	ret    
    5cef:	90                   	nop
    5cf0:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    5cf7:	31 c0                	xor    %eax,%eax
    5cf9:	c3                   	ret    
    5cfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005d00 <strtok>:
    5d00:	ba 00 00 00 00       	mov    $0x0,%edx
			5d01: R_X86_64_32	.bss+0x70
    5d05:	e9 56 ff ff ff       	jmp    5c60 <__strtok_r>
    5d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005d10 <strxfrm>:
    5d10:	55                   	push   %rbp
    5d11:	48 89 e5             	mov    %rsp,%rbp
    5d14:	41 56                	push   %r14
    5d16:	49 89 d6             	mov    %rdx,%r14
    5d19:	41 55                	push   %r13
    5d1b:	49 89 fd             	mov    %rdi,%r13
    5d1e:	48 89 f7             	mov    %rsi,%rdi
    5d21:	41 54                	push   %r12
    5d23:	49 89 f4             	mov    %rsi,%r12
    5d26:	53                   	push   %rbx
    5d27:	e8 00 00 00 00       	call   5d2c <strxfrm+0x1c>
			5d28: R_X86_64_PLT32	strlen-0x4
    5d2c:	48 89 c3             	mov    %rax,%rbx
    5d2f:	4c 39 f0             	cmp    %r14,%rax
    5d32:	72 0c                	jb     5d40 <strxfrm+0x30>
    5d34:	48 89 d8             	mov    %rbx,%rax
    5d37:	5b                   	pop    %rbx
    5d38:	41 5c                	pop    %r12
    5d3a:	41 5d                	pop    %r13
    5d3c:	41 5e                	pop    %r14
    5d3e:	5d                   	pop    %rbp
    5d3f:	c3                   	ret    
    5d40:	4c 89 e6             	mov    %r12,%rsi
    5d43:	4c 89 ef             	mov    %r13,%rdi
    5d46:	e8 00 00 00 00       	call   5d4b <strxfrm+0x3b>
			5d47: R_X86_64_PLT32	strcpy-0x4
    5d4b:	48 89 d8             	mov    %rbx,%rax
    5d4e:	5b                   	pop    %rbx
    5d4f:	41 5c                	pop    %r12
    5d51:	41 5d                	pop    %r13
    5d53:	41 5e                	pop    %r14
    5d55:	5d                   	pop    %rbp
    5d56:	c3                   	ret    
    5d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5d5e:	00 00 

0000000000005d60 <fls>:
    5d60:	31 c0                	xor    %eax,%eax
    5d62:	85 ff                	test   %edi,%edi
    5d64:	74 06                	je     5d6c <fls+0xc>
    5d66:	0f bd ff             	bsr    %edi,%edi
    5d69:	8d 47 01             	lea    0x1(%rdi),%eax
    5d6c:	c3                   	ret    
    5d6d:	0f 1f 00             	nopl   (%rax)

0000000000005d70 <flsl>:
    5d70:	31 c0                	xor    %eax,%eax
    5d72:	48 85 ff             	test   %rdi,%rdi
    5d75:	74 07                	je     5d7e <flsl+0xe>
    5d77:	48 0f bd ff          	bsr    %rdi,%rdi
    5d7b:	8d 47 01             	lea    0x1(%rdi),%eax
    5d7e:	c3                   	ret    
    5d7f:	90                   	nop

0000000000005d80 <flsll>:
    5d80:	31 c0                	xor    %eax,%eax
    5d82:	48 85 ff             	test   %rdi,%rdi
    5d85:	74 07                	je     5d8e <flsll+0xe>
    5d87:	48 0f bd ff          	bsr    %rdi,%rdi
    5d8b:	8d 47 01             	lea    0x1(%rdi),%eax
    5d8e:	c3                   	ret    
    5d8f:	90                   	nop

0000000000005d90 <asctime>:
    5d90:	be 00 00 00 00       	mov    $0x0,%esi
			5d91: R_X86_64_32	.bss+0x80
    5d95:	e9 00 00 00 00       	jmp    5d9a <asctime+0xa>
			5d96: R_X86_64_PLT32	asctime_r-0x4
    5d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000005da0 <asctime_r>:
    5da0:	55                   	push   %rbp
    5da1:	48 89 e5             	mov    %rsp,%rbp
    5da4:	41 57                	push   %r15
    5da6:	41 56                	push   %r14
    5da8:	41 55                	push   %r13
    5daa:	41 54                	push   %r12
    5dac:	49 89 f4             	mov    %rsi,%r12
    5daf:	53                   	push   %rbx
    5db0:	48 89 fb             	mov    %rdi,%rbx
    5db3:	48 83 ec 18          	sub    $0x18,%rsp
    5db7:	8b 47 14             	mov    0x14(%rdi),%eax
    5dba:	44 8b 07             	mov    (%rdi),%r8d
    5dbd:	44 8b 4f 0c          	mov    0xc(%rdi),%r9d
    5dc1:	44 8b 77 04          	mov    0x4(%rdi),%r14d
    5dc5:	44 8d b8 6c 07 00 00 	lea    0x76c(%rax),%r15d
    5dcc:	8b 47 10             	mov    0x10(%rdi),%eax
    5dcf:	44 8b 6f 08          	mov    0x8(%rdi),%r13d
    5dd3:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
    5dd7:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
    5ddb:	8d b8 0e 00 02 00    	lea    0x2000e(%rax),%edi
    5de1:	e8 00 00 00 00       	call   5de6 <asctime_r+0x46>
			5de2: R_X86_64_PLT32	nl_langinfo-0x4
    5de6:	8b 7b 18             	mov    0x18(%rbx),%edi
    5de9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5ded:	81 c7 00 00 02 00    	add    $0x20000,%edi
    5df3:	e8 00 00 00 00       	call   5df8 <asctime_r+0x58>
			5df4: R_X86_64_PLT32	nl_langinfo-0x4
    5df8:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
    5dfc:	41 57                	push   %r15
    5dfe:	ba 00 00 00 00       	mov    $0x0,%edx
			5dff: R_X86_64_32	.rodata.str1.8+0x58
    5e03:	44 8b 4d c4          	mov    -0x3c(%rbp),%r9d
    5e07:	48 89 c1             	mov    %rax,%rcx
    5e0a:	be 1a 00 00 00       	mov    $0x1a,%esi
    5e0f:	4c 89 e7             	mov    %r12,%rdi
    5e12:	41 50                	push   %r8
    5e14:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    5e18:	31 c0                	xor    %eax,%eax
    5e1a:	41 56                	push   %r14
    5e1c:	41 55                	push   %r13
    5e1e:	e8 00 00 00 00       	call   5e23 <asctime_r+0x83>
			5e1f: R_X86_64_PLT32	snprintf_-0x4
    5e23:	48 83 c4 20          	add    $0x20,%rsp
    5e27:	83 f8 19             	cmp    $0x19,%eax
    5e2a:	7f 12                	jg     5e3e <asctime_r+0x9e>
    5e2c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5e30:	4c 89 e0             	mov    %r12,%rax
    5e33:	5b                   	pop    %rbx
    5e34:	41 5c                	pop    %r12
    5e36:	41 5d                	pop    %r13
    5e38:	41 5e                	pop    %r14
    5e3a:	41 5f                	pop    %r15
    5e3c:	5d                   	pop    %rbp
    5e3d:	c3                   	ret    
    5e3e:	b9 00 00 00 00       	mov    $0x0,%ecx
			5e3f: R_X86_64_32	.rodata+0xc68
    5e43:	ba 16 00 00 00       	mov    $0x16,%edx
    5e48:	be 00 00 00 00       	mov    $0x0,%esi
			5e49: R_X86_64_32	.rodata.str1.1+0x4a
    5e4d:	bf 00 00 00 00       	mov    $0x0,%edi
			5e4e: R_X86_64_32	.rodata.str1.8+0x78
    5e52:	e8 00 00 00 00       	call   5e57 <asctime_r+0xb7>
			5e53: R_X86_64_PLT32	__assert_fail-0x4
    5e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5e5e:	00 00 

0000000000005e60 <iswalnum>:
    5e60:	55                   	push   %rbp
    5e61:	48 89 e5             	mov    %rsp,%rbp
    5e64:	53                   	push   %rbx
    5e65:	48 89 fb             	mov    %rdi,%rbx
    5e68:	48 83 ec 08          	sub    $0x8,%rsp
    5e6c:	e8 00 00 00 00       	call   5e71 <iswalnum+0x11>
			5e6d: R_X86_64_PLT32	iswdigit-0x4
    5e71:	89 c2                	mov    %eax,%edx
    5e73:	b8 01 00 00 00       	mov    $0x1,%eax
    5e78:	85 d2                	test   %edx,%edx
    5e7a:	74 0c                	je     5e88 <iswalnum+0x28>
    5e7c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e80:	c9                   	leave  
    5e81:	c3                   	ret    
    5e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e88:	48 89 df             	mov    %rbx,%rdi
    5e8b:	e8 00 00 00 00       	call   5e90 <iswalnum+0x30>
			5e8c: R_X86_64_PLT32	iswalpha-0x4
    5e90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e94:	c9                   	leave  
    5e95:	85 c0                	test   %eax,%eax
    5e97:	0f 95 c0             	setne  %al
    5e9a:	0f b6 c0             	movzbl %al,%eax
    5e9d:	c3                   	ret    
    5e9e:	66 90                	xchg   %ax,%ax

0000000000005ea0 <iswalpha>:
    5ea0:	31 c0                	xor    %eax,%eax
    5ea2:	48 81 ff fd ff 02 00 	cmp    $0x2fffd,%rdi
    5ea9:	0f 9e c0             	setle  %al
    5eac:	48 81 ff ff ff 01 00 	cmp    $0x1ffff,%rdi
    5eb3:	7e 0b                	jle    5ec0 <iswalpha+0x20>
    5eb5:	c3                   	ret    
    5eb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ebd:	00 00 00 
    5ec0:	48 89 f8             	mov    %rdi,%rax
    5ec3:	48 89 fa             	mov    %rdi,%rdx
    5ec6:	83 e7 07             	and    $0x7,%edi
    5ec9:	48 c1 f8 08          	sar    $0x8,%rax
    5ecd:	48 c1 fa 03          	sar    $0x3,%rdx
    5ed1:	89 f9                	mov    %edi,%ecx
    5ed3:	0f b6 80 00 00 00 00 	movzbl 0x0(%rax),%eax
			5ed6: R_X86_64_32S	.rodata+0xc80
    5eda:	83 e2 1f             	and    $0x1f,%edx
    5edd:	c1 e0 05             	shl    $0x5,%eax
    5ee0:	48 98                	cltq   
    5ee2:	0f b6 84 10 00 00 00 	movzbl 0x0(%rax,%rdx,1),%eax
    5ee9:	00 
			5ee6: R_X86_64_32S	.rodata+0xc80
    5eea:	d3 f8                	sar    %cl,%eax
    5eec:	83 e0 01             	and    $0x1,%eax
    5eef:	c3                   	ret    

0000000000005ef0 <iswblank>:
    5ef0:	e9 00 00 00 00       	jmp    5ef5 <iswblank+0x5>
			5ef1: R_X86_64_PLT32	isblank-0x4
    5ef5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5efc:	00 00 00 
    5eff:	90                   	nop

0000000000005f00 <iswcntrl>:
    5f00:	8d 47 81             	lea    -0x7f(%rdi),%eax
    5f03:	83 f8 20             	cmp    $0x20,%eax
    5f06:	76 28                	jbe    5f30 <iswcntrl+0x30>
    5f08:	83 ff 1f             	cmp    $0x1f,%edi
    5f0b:	76 23                	jbe    5f30 <iswcntrl+0x30>
    5f0d:	8d 97 d8 df ff ff    	lea    -0x2028(%rdi),%edx
    5f13:	b8 01 00 00 00       	mov    $0x1,%eax
    5f18:	83 fa 01             	cmp    $0x1,%edx
    5f1b:	76 18                	jbe    5f35 <iswcntrl+0x35>
    5f1d:	81 ef f9 ff 00 00    	sub    $0xfff9,%edi
    5f23:	31 c0                	xor    %eax,%eax
    5f25:	83 ff 02             	cmp    $0x2,%edi
    5f28:	0f 96 c0             	setbe  %al
    5f2b:	c3                   	ret    
    5f2c:	0f 1f 40 00          	nopl   0x0(%rax)
    5f30:	b8 01 00 00 00       	mov    $0x1,%eax
    5f35:	c3                   	ret    
    5f36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5f3d:	00 00 00 

0000000000005f40 <iswctype>:
    5f40:	48 83 fe 0c          	cmp    $0xc,%rsi
    5f44:	77 67                	ja     5fad <iswctype+0x6d>
    5f46:	ff 24 f5 00 00 00 00 	jmp    *0x0(,%rsi,8)
			5f49: R_X86_64_32S	.rodata+0x1820
    5f4d:	0f 1f 00             	nopl   (%rax)
    5f50:	e9 00 00 00 00       	jmp    5f55 <iswctype+0x15>
			5f51: R_X86_64_PLT32	iswxdigit-0x4
    5f55:	0f 1f 00             	nopl   (%rax)
    5f58:	e9 00 00 00 00       	jmp    5f5d <iswctype+0x1d>
			5f59: R_X86_64_PLT32	iswalnum-0x4
    5f5d:	0f 1f 00             	nopl   (%rax)
    5f60:	e9 00 00 00 00       	jmp    5f65 <iswctype+0x25>
			5f61: R_X86_64_PLT32	iswalpha-0x4
    5f65:	0f 1f 00             	nopl   (%rax)
    5f68:	e9 00 00 00 00       	jmp    5f6d <iswctype+0x2d>
			5f69: R_X86_64_PLT32	iswblank-0x4
    5f6d:	0f 1f 00             	nopl   (%rax)
    5f70:	e9 00 00 00 00       	jmp    5f75 <iswctype+0x35>
			5f71: R_X86_64_PLT32	iswcntrl-0x4
    5f75:	0f 1f 00             	nopl   (%rax)
    5f78:	e9 00 00 00 00       	jmp    5f7d <iswctype+0x3d>
			5f79: R_X86_64_PLT32	iswdigit-0x4
    5f7d:	0f 1f 00             	nopl   (%rax)
    5f80:	e9 00 00 00 00       	jmp    5f85 <iswctype+0x45>
			5f81: R_X86_64_PLT32	iswgraph-0x4
    5f85:	0f 1f 00             	nopl   (%rax)
    5f88:	e9 00 00 00 00       	jmp    5f8d <iswctype+0x4d>
			5f89: R_X86_64_PLT32	iswlower-0x4
    5f8d:	0f 1f 00             	nopl   (%rax)
    5f90:	e9 00 00 00 00       	jmp    5f95 <iswctype+0x55>
			5f91: R_X86_64_PLT32	iswprint-0x4
    5f95:	0f 1f 00             	nopl   (%rax)
    5f98:	e9 00 00 00 00       	jmp    5f9d <iswctype+0x5d>
			5f99: R_X86_64_PLT32	iswpunct-0x4
    5f9d:	0f 1f 00             	nopl   (%rax)
    5fa0:	e9 00 00 00 00       	jmp    5fa5 <iswctype+0x65>
			5fa1: R_X86_64_PLT32	iswspace-0x4
    5fa5:	0f 1f 00             	nopl   (%rax)
    5fa8:	e9 00 00 00 00       	jmp    5fad <iswctype+0x6d>
			5fa9: R_X86_64_PLT32	iswupper-0x4
    5fad:	31 c0                	xor    %eax,%eax
    5faf:	c3                   	ret    

0000000000005fb0 <iswdigit>:
    5fb0:	83 ef 30             	sub    $0x30,%edi
    5fb3:	31 c0                	xor    %eax,%eax
    5fb5:	83 ff 09             	cmp    $0x9,%edi
    5fb8:	0f 96 c0             	setbe  %al
    5fbb:	c3                   	ret    
    5fbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005fc0 <iswgraph>:
    5fc0:	55                   	push   %rbp
    5fc1:	48 89 e5             	mov    %rsp,%rbp
    5fc4:	53                   	push   %rbx
    5fc5:	48 89 fb             	mov    %rdi,%rbx
    5fc8:	48 83 ec 08          	sub    $0x8,%rsp
    5fcc:	e8 00 00 00 00       	call   5fd1 <iswgraph+0x11>
			5fcd: R_X86_64_PLT32	iswspace-0x4
    5fd1:	89 c2                	mov    %eax,%edx
    5fd3:	31 c0                	xor    %eax,%eax
    5fd5:	85 d2                	test   %edx,%edx
    5fd7:	74 07                	je     5fe0 <iswgraph+0x20>
    5fd9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fdd:	c9                   	leave  
    5fde:	c3                   	ret    
    5fdf:	90                   	nop
    5fe0:	48 89 df             	mov    %rbx,%rdi
    5fe3:	e8 00 00 00 00       	call   5fe8 <iswgraph+0x28>
			5fe4: R_X86_64_PLT32	iswprint-0x4
    5fe8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fec:	c9                   	leave  
    5fed:	85 c0                	test   %eax,%eax
    5fef:	0f 95 c0             	setne  %al
    5ff2:	0f b6 c0             	movzbl %al,%eax
    5ff5:	c3                   	ret    
    5ff6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ffd:	00 00 00 

0000000000006000 <iswlower>:
    6000:	55                   	push   %rbp
    6001:	48 89 e5             	mov    %rsp,%rbp
    6004:	53                   	push   %rbx
    6005:	48 89 fb             	mov    %rdi,%rbx
    6008:	48 83 ec 08          	sub    $0x8,%rsp
    600c:	e8 00 00 00 00       	call   6011 <iswlower+0x11>
			600d: R_X86_64_PLT32	towupper-0x4
    6011:	48 39 d8             	cmp    %rbx,%rax
    6014:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6018:	c9                   	leave  
    6019:	0f 95 c0             	setne  %al
    601c:	0f b6 c0             	movzbl %al,%eax
    601f:	c3                   	ret    

0000000000006020 <iswprint>:
    6020:	48 81 ff fe 00 00 00 	cmp    $0xfe,%rdi
    6027:	7e 2f                	jle    6058 <iswprint+0x38>
    6029:	b8 01 00 00 00       	mov    $0x1,%eax
    602e:	48 81 ff f8 ff 00 00 	cmp    $0xfff8,%rdi
    6035:	7e 1d                	jle    6054 <iswprint+0x34>
    6037:	31 c0                	xor    %eax,%eax
    6039:	48 81 ff ff ff 10 00 	cmp    $0x10ffff,%rdi
    6040:	7f 12                	jg     6054 <iswprint+0x34>
    6042:	81 e7 fe ff 00 00    	and    $0xfffe,%edi
    6048:	31 c0                	xor    %eax,%eax
    604a:	48 81 ff fe ff 00 00 	cmp    $0xfffe,%rdi
    6051:	0f 95 c0             	setne  %al
    6054:	c3                   	ret    
    6055:	0f 1f 00             	nopl   (%rax)
    6058:	48 83 c7 01          	add    $0x1,%rdi
    605c:	31 c0                	xor    %eax,%eax
    605e:	83 e7 7f             	and    $0x7f,%edi
    6061:	48 83 ff 20          	cmp    $0x20,%rdi
    6065:	0f 9f c0             	setg   %al
    6068:	c3                   	ret    
    6069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006070 <iswpunct>:
    6070:	31 c0                	xor    %eax,%eax
    6072:	48 81 ff ff ff 01 00 	cmp    $0x1ffff,%rdi
    6079:	7e 05                	jle    6080 <iswpunct+0x10>
    607b:	c3                   	ret    
    607c:	0f 1f 40 00          	nopl   0x0(%rax)
    6080:	48 89 f8             	mov    %rdi,%rax
    6083:	48 89 fa             	mov    %rdi,%rdx
    6086:	83 e7 07             	and    $0x7,%edi
    6089:	48 c1 f8 08          	sar    $0x8,%rax
    608d:	48 c1 fa 03          	sar    $0x3,%rdx
    6091:	89 f9                	mov    %edi,%ecx
    6093:	0f b6 80 00 00 00 00 	movzbl 0x0(%rax),%eax
			6096: R_X86_64_32S	.rodata+0x18a0
    609a:	83 e2 1f             	and    $0x1f,%edx
    609d:	c1 e0 05             	shl    $0x5,%eax
    60a0:	48 98                	cltq   
    60a2:	0f b6 84 10 00 00 00 	movzbl 0x0(%rax,%rdx,1),%eax
    60a9:	00 
			60a6: R_X86_64_32S	.rodata+0x18a0
    60aa:	d3 f8                	sar    %cl,%eax
    60ac:	83 e0 01             	and    $0x1,%eax
    60af:	c3                   	ret    

00000000000060b0 <iswspace>:
    60b0:	31 c0                	xor    %eax,%eax
    60b2:	48 85 ff             	test   %rdi,%rdi
    60b5:	74 1f                	je     60d6 <iswspace+0x26>
    60b7:	b8 00 00 00 00       	mov    $0x0,%eax
			60b8: R_X86_64_32	.rodata+0x2500
    60bc:	eb 0b                	jmp    60c9 <iswspace+0x19>
    60be:	66 90                	xchg   %ax,%ax
    60c0:	48 83 c0 08          	add    $0x8,%rax
    60c4:	48 85 d2             	test   %rdx,%rdx
    60c7:	74 17                	je     60e0 <iswspace+0x30>
    60c9:	48 8b 10             	mov    (%rax),%rdx
    60cc:	48 39 d7             	cmp    %rdx,%rdi
    60cf:	75 ef                	jne    60c0 <iswspace+0x10>
    60d1:	b8 01 00 00 00       	mov    $0x1,%eax
    60d6:	c3                   	ret    
    60d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    60de:	00 00 
    60e0:	31 c0                	xor    %eax,%eax
    60e2:	c3                   	ret    
    60e3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    60ea:	00 00 00 00 
    60ee:	66 90                	xchg   %ax,%ax

00000000000060f0 <wcschr>:
    60f0:	48 89 f8             	mov    %rdi,%rax
    60f3:	eb 0c                	jmp    6101 <wcschr+0x11>
    60f5:	0f 1f 00             	nopl   (%rax)
    60f8:	48 83 c0 08          	add    $0x8,%rax
    60fc:	48 85 d2             	test   %rdx,%rdx
    60ff:	74 0f                	je     6110 <wcschr+0x20>
    6101:	48 8b 10             	mov    (%rax),%rdx
    6104:	48 39 f2             	cmp    %rsi,%rdx
    6107:	75 ef                	jne    60f8 <wcschr+0x8>
    6109:	c3                   	ret    
    610a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6110:	31 c0                	xor    %eax,%eax
    6112:	c3                   	ret    
    6113:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    611a:	00 00 00 
    611d:	0f 1f 00             	nopl   (%rax)

0000000000006120 <iswupper>:
    6120:	55                   	push   %rbp
    6121:	48 89 e5             	mov    %rsp,%rbp
    6124:	53                   	push   %rbx
    6125:	48 89 fb             	mov    %rdi,%rbx
    6128:	48 83 ec 08          	sub    $0x8,%rsp
    612c:	e8 00 00 00 00       	call   6131 <iswupper+0x11>
			612d: R_X86_64_PLT32	towlower-0x4
    6131:	48 39 d8             	cmp    %rbx,%rax
    6134:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6138:	c9                   	leave  
    6139:	0f 95 c0             	setne  %al
    613c:	0f b6 c0             	movzbl %al,%eax
    613f:	c3                   	ret    

0000000000006140 <iswxdigit>:
    6140:	8d 57 d0             	lea    -0x30(%rdi),%edx
    6143:	b8 01 00 00 00       	mov    $0x1,%eax
    6148:	83 fa 09             	cmp    $0x9,%edx
    614b:	76 0e                	jbe    615b <iswxdigit+0x1b>
    614d:	83 cf 20             	or     $0x20,%edi
    6150:	31 c0                	xor    %eax,%eax
    6152:	83 ef 61             	sub    $0x61,%edi
    6155:	83 ff 05             	cmp    $0x5,%edi
    6158:	0f 96 c0             	setbe  %al
    615b:	c3                   	ret    
    615c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006160 <__towcase>:
    6160:	55                   	push   %rbp
    6161:	48 89 e5             	mov    %rsp,%rbp
    6164:	41 54                	push   %r12
    6166:	4c 63 e6             	movslq %esi,%r12
    6169:	53                   	push   %rbx
    616a:	48 89 fb             	mov    %rdi,%rbx
    616d:	e8 00 00 00 00       	call   6172 <__towcase+0x12>
			616e: R_X86_64_PLT32	iswalpha-0x4
    6172:	85 c0                	test   %eax,%eax
    6174:	74 76                	je     61ec <__towcase+0x8c>
    6176:	8d 93 00 fa ff ff    	lea    -0x600(%rbx),%edx
    617c:	89 d8                	mov    %ebx,%eax
    617e:	81 fa ff 09 00 00    	cmp    $0x9ff,%edx
    6184:	76 66                	jbe    61ec <__towcase+0x8c>
    6186:	8d 93 00 d2 ff ff    	lea    -0x2e00(%rbx),%edx
    618c:	81 fa 3f 78 00 00    	cmp    $0x783f,%edx
    6192:	76 58                	jbe    61ec <__towcase+0x8c>
    6194:	8d 93 00 58 ff ff    	lea    -0xa800(%rbx),%edx
    619a:	81 fa 52 03 00 00    	cmp    $0x352,%edx
    61a0:	76 4a                	jbe    61ec <__towcase+0x8c>
    61a2:	8d 93 40 54 ff ff    	lea    -0xabc0(%rbx),%edx
    61a8:	81 fa 3f 53 00 00    	cmp    $0x533f,%edx
    61ae:	76 3c                	jbe    61ec <__towcase+0x8c>
    61b0:	45 85 e4             	test   %r12d,%r12d
    61b3:	74 43                	je     61f8 <__towcase+0x98>
    61b5:	8d 93 60 ef ff ff    	lea    -0x10a0(%rbx),%edx
    61bb:	83 fa 2d             	cmp    $0x2d,%edx
    61be:	0f 87 ec 00 00 00    	ja     62b0 <__towcase+0x150>
    61c4:	48 81 fb c5 10 00 00 	cmp    $0x10c5,%rbx
    61cb:	0f 9f c2             	setg   %dl
    61ce:	48 81 fb c7 10 00 00 	cmp    $0x10c7,%rbx
    61d5:	0f 95 c0             	setne  %al
    61d8:	84 c2                	test   %al,%dl
    61da:	74 09                	je     61e5 <__towcase+0x85>
    61dc:	48 81 fb cd 10 00 00 	cmp    $0x10cd,%rbx
    61e3:	75 07                	jne    61ec <__towcase+0x8c>
    61e5:	48 81 c3 60 1c 00 00 	add    $0x1c60,%rbx
    61ec:	48 89 d8             	mov    %rbx,%rax
    61ef:	5b                   	pop    %rbx
    61f0:	41 5c                	pop    %r12
    61f2:	5d                   	pop    %rbp
    61f3:	c3                   	ret    
    61f4:	0f 1f 40 00          	nopl   0x0(%rax)
    61f8:	8d 93 00 d3 ff ff    	lea    -0x2d00(%rbx),%edx
    61fe:	83 fa 25             	cmp    $0x25,%edx
    6201:	76 75                	jbe    6278 <__towcase+0x118>
    6203:	2d 70 ab 00 00       	sub    $0xab70,%eax
    6208:	83 f8 4f             	cmp    $0x4f,%eax
    620b:	0f 86 0f 01 00 00    	jbe    6320 <__towcase+0x1c0>
    6211:	45 8d 54 24 ff       	lea    -0x1(%r12),%r10d
    6216:	b9 00 00 00 00       	mov    $0x0,%ecx
			6217: R_X86_64_32	.rodata+0x2800
    621b:	ba 1f 00 00 00       	mov    $0x1f,%edx
    6220:	eb 16                	jmp    6238 <__towcase+0xd8>
    6222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6228:	0f b6 51 07          	movzbl 0x7(%rcx),%edx
    622c:	48 83 c1 04          	add    $0x4,%rcx
    6230:	84 d2                	test   %dl,%dl
    6232:	0f 84 98 00 00 00    	je     62d0 <__towcase+0x170>
    6238:	0f be 79 02          	movsbl 0x2(%rcx),%edi
    623c:	44 0f b7 09          	movzwl (%rcx),%r9d
    6240:	89 f8                	mov    %edi,%eax
    6242:	45 89 c8             	mov    %r9d,%r8d
    6245:	44 21 d0             	and    %r10d,%eax
    6248:	44 01 c8             	add    %r9d,%eax
    624b:	49 89 d9             	mov    %rbx,%r9
    624e:	48 98                	cltq   
    6250:	49 29 c1             	sub    %rax,%r9
    6253:	49 39 d1             	cmp    %rdx,%r9
    6256:	7d d0                	jge    6228 <__towcase+0xc8>
    6258:	40 80 ff 01          	cmp    $0x1,%dil
    625c:	0f 84 58 01 00 00    	je     63ba <__towcase+0x25a>
    6262:	43 8d 44 24 ff       	lea    -0x1(%r12,%r12,1),%eax
    6267:	0f af c7             	imul   %edi,%eax
    626a:	48 98                	cltq   
    626c:	48 01 c3             	add    %rax,%rbx
    626f:	e9 78 ff ff ff       	jmp    61ec <__towcase+0x8c>
    6274:	0f 1f 40 00          	nopl   0x0(%rax)
    6278:	48 81 fb 25 2d 00 00 	cmp    $0x2d25,%rbx
    627f:	0f 9f c2             	setg   %dl
    6282:	48 81 fb 27 2d 00 00 	cmp    $0x2d27,%rbx
    6289:	0f 95 c0             	setne  %al
    628c:	84 c2                	test   %al,%dl
    628e:	74 0d                	je     629d <__towcase+0x13d>
    6290:	48 81 fb 2d 2d 00 00 	cmp    $0x2d2d,%rbx
    6297:	0f 85 4f ff ff ff    	jne    61ec <__towcase+0x8c>
    629d:	48 81 eb 60 1c 00 00 	sub    $0x1c60,%rbx
    62a4:	e9 43 ff ff ff       	jmp    61ec <__towcase+0x8c>
    62a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    62b0:	2d a0 13 00 00       	sub    $0x13a0,%eax
    62b5:	83 f8 4f             	cmp    $0x4f,%eax
    62b8:	0f 87 53 ff ff ff    	ja     6211 <__towcase+0xb1>
    62be:	48 81 c3 d0 97 00 00 	add    $0x97d0,%rbx
    62c5:	e9 22 ff ff ff       	jmp    61ec <__towcase+0x8c>
    62ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    62d0:	b9 01 00 00 00       	mov    $0x1,%ecx
    62d5:	44 29 e1             	sub    %r12d,%ecx
    62d8:	48 63 c9             	movslq %ecx,%rcx
    62db:	0f b7 84 09 00 00 00 	movzwl 0x0(%rcx,%rcx,1),%eax
    62e2:	00 
			62df: R_X86_64_32S	.rodata+0x25c0
    62e3:	66 85 c0             	test   %ax,%ax
    62e6:	74 44                	je     632c <__towcase+0x1cc>
    62e8:	48 01 c9             	add    %rcx,%rcx
    62eb:	31 d2                	xor    %edx,%edx
    62ed:	eb 12                	jmp    6301 <__towcase+0x1a1>
    62ef:	90                   	nop
    62f0:	48 83 c2 01          	add    $0x1,%rdx
    62f4:	0f b7 84 91 00 00 00 	movzwl 0x0(%rcx,%rdx,4),%eax
    62fb:	00 
			62f8: R_X86_64_32S	.rodata+0x25c0
    62fc:	66 85 c0             	test   %ax,%ax
    62ff:	74 2b                	je     632c <__towcase+0x1cc>
    6301:	48 39 d8             	cmp    %rbx,%rax
    6304:	75 ea                	jne    62f0 <__towcase+0x190>
    6306:	48 63 d2             	movslq %edx,%rdx
    6309:	49 8d 04 54          	lea    (%r12,%rdx,2),%rax
    630d:	0f b7 9c 00 00 00 00 	movzwl 0x0(%rax,%rax,1),%ebx
    6314:	00 
			6311: R_X86_64_32S	.rodata+0x25c0
    6315:	e9 d2 fe ff ff       	jmp    61ec <__towcase+0x8c>
    631a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6320:	48 81 eb d0 97 00 00 	sub    $0x97d0,%rbx
    6327:	e9 c0 fe ff ff       	jmp    61ec <__towcase+0x8c>
    632c:	41 6b c4 d8          	imul   $0xffffffd8,%r12d,%eax
    6330:	48 89 d9             	mov    %rbx,%rcx
    6333:	8d 90 28 04 01 00    	lea    0x10428(%rax),%edx
    6339:	48 63 d2             	movslq %edx,%rdx
    633c:	48 29 d1             	sub    %rdx,%rcx
    633f:	48 83 f9 27          	cmp    $0x27,%rcx
    6343:	0f 8e 8b 00 00 00    	jle    63d4 <__towcase+0x274>
    6349:	05 d8 04 01 00       	add    $0x104d8,%eax
    634e:	48 89 da             	mov    %rbx,%rdx
    6351:	48 98                	cltq   
    6353:	48 29 c2             	sub    %rax,%rdx
    6356:	48 83 fa 23          	cmp    $0x23,%rdx
    635a:	7e 78                	jle    63d4 <__towcase+0x274>
    635c:	b8 33 04 00 00       	mov    $0x433,%eax
    6361:	48 89 da             	mov    %rbx,%rdx
    6364:	44 29 e0             	sub    %r12d,%eax
    6367:	c1 e0 06             	shl    $0x6,%eax
    636a:	48 98                	cltq   
    636c:	48 29 c2             	sub    %rax,%rdx
    636f:	48 83 fa 32          	cmp    $0x32,%rdx
    6373:	7e 73                	jle    63e8 <__towcase+0x288>
    6375:	b8 c6 08 00 00       	mov    $0x8c6,%eax
    637a:	48 89 da             	mov    %rbx,%rdx
    637d:	44 29 e0             	sub    %r12d,%eax
    6380:	c1 e0 05             	shl    $0x5,%eax
    6383:	48 98                	cltq   
    6385:	48 29 c2             	sub    %rax,%rdx
    6388:	48 83 fa 1f          	cmp    $0x1f,%rdx
    638c:	7e 6d                	jle    63fb <__towcase+0x29b>
    638e:	41 6b c4 de          	imul   $0xffffffde,%r12d,%eax
    6392:	48 89 da             	mov    %rbx,%rdx
    6395:	05 22 e9 01 00       	add    $0x1e922,%eax
    639a:	48 98                	cltq   
    639c:	48 29 c2             	sub    %rax,%rdx
    639f:	48 83 fa 21          	cmp    $0x21,%rdx
    63a3:	0f 8f 43 fe ff ff    	jg     61ec <__towcase+0x8c>
    63a9:	41 6b c4 44          	imul   $0x44,%r12d,%eax
    63ad:	83 c0 22             	add    $0x22,%eax
    63b0:	48 98                	cltq   
    63b2:	48 29 c3             	sub    %rax,%rbx
    63b5:	e9 32 fe ff ff       	jmp    61ec <__towcase+0x8c>
    63ba:	48 89 d8             	mov    %rbx,%rax
    63bd:	49 63 d4             	movslq %r12d,%rdx
    63c0:	48 01 da             	add    %rbx,%rdx
    63c3:	4c 29 c0             	sub    %r8,%rax
    63c6:	83 e0 01             	and    $0x1,%eax
    63c9:	48 89 d3             	mov    %rdx,%rbx
    63cc:	48 29 c3             	sub    %rax,%rbx
    63cf:	e9 18 fe ff ff       	jmp    61ec <__towcase+0x8c>
    63d4:	43 8d 04 a4          	lea    (%r12,%r12,4),%eax
    63d8:	c1 e0 04             	shl    $0x4,%eax
    63db:	83 c0 28             	add    $0x28,%eax
    63de:	48 98                	cltq   
    63e0:	48 29 c3             	sub    %rax,%rbx
    63e3:	e9 04 fe ff ff       	jmp    61ec <__towcase+0x8c>
    63e8:	44 89 e0             	mov    %r12d,%eax
    63eb:	c1 e0 07             	shl    $0x7,%eax
    63ee:	83 c0 40             	add    $0x40,%eax
    63f1:	48 98                	cltq   
    63f3:	48 29 c3             	sub    %rax,%rbx
    63f6:	e9 f1 fd ff ff       	jmp    61ec <__towcase+0x8c>
    63fb:	44 89 e0             	mov    %r12d,%eax
    63fe:	c1 e0 06             	shl    $0x6,%eax
    6401:	83 c0 20             	add    $0x20,%eax
    6404:	48 98                	cltq   
    6406:	48 29 c3             	sub    %rax,%rbx
    6409:	e9 de fd ff ff       	jmp    61ec <__towcase+0x8c>
    640e:	66 90                	xchg   %ax,%ax

0000000000006410 <towctrans>:
    6410:	48 83 fe 01          	cmp    $0x1,%rsi
    6414:	74 0a                	je     6420 <towctrans+0x10>
    6416:	48 83 fe 02          	cmp    $0x2,%rsi
    641a:	74 0c                	je     6428 <towctrans+0x18>
    641c:	48 89 f8             	mov    %rdi,%rax
    641f:	c3                   	ret    
    6420:	e9 00 00 00 00       	jmp    6425 <towctrans+0x15>
			6421: R_X86_64_PLT32	towupper-0x4
    6425:	0f 1f 00             	nopl   (%rax)
    6428:	e9 00 00 00 00       	jmp    642d <towctrans+0x1d>
			6429: R_X86_64_PLT32	towlower-0x4
    642d:	0f 1f 00             	nopl   (%rax)

0000000000006430 <towlower>:
    6430:	48 83 ff 7f          	cmp    $0x7f,%rdi
    6434:	7e 0a                	jle    6440 <towlower+0x10>
    6436:	be 01 00 00 00       	mov    $0x1,%esi
    643b:	e9 00 00 00 00       	jmp    6440 <towlower+0x10>
			643c: R_X86_64_PLT32	__towcase-0x4
    6440:	55                   	push   %rbp
    6441:	48 89 e5             	mov    %rsp,%rbp
    6444:	e8 00 00 00 00       	call   6449 <towlower+0x19>
			6445: R_X86_64_PLT32	tolower-0x4
    6449:	5d                   	pop    %rbp
    644a:	48 98                	cltq   
    644c:	c3                   	ret    
    644d:	0f 1f 00             	nopl   (%rax)

0000000000006450 <towupper>:
    6450:	48 83 ff 7f          	cmp    $0x7f,%rdi
    6454:	7e 0a                	jle    6460 <towupper+0x10>
    6456:	31 f6                	xor    %esi,%esi
    6458:	e9 00 00 00 00       	jmp    645d <towupper+0xd>
			6459: R_X86_64_PLT32	__towcase-0x4
    645d:	0f 1f 00             	nopl   (%rax)
    6460:	55                   	push   %rbp
    6461:	48 89 e5             	mov    %rsp,%rbp
    6464:	e8 00 00 00 00       	call   6469 <towupper+0x19>
			6465: R_X86_64_PLT32	toupper-0x4
    6469:	5d                   	pop    %rbp
    646a:	48 98                	cltq   
    646c:	c3                   	ret    
    646d:	0f 1f 00             	nopl   (%rax)

0000000000006470 <wcswidth>:
    6470:	48 85 f6             	test   %rsi,%rsi
    6473:	74 47                	je     64bc <wcswidth+0x4c>
    6475:	55                   	push   %rbp
    6476:	48 89 e5             	mov    %rsp,%rbp
    6479:	41 55                	push   %r13
    647b:	4c 8d 6e ff          	lea    -0x1(%rsi),%r13
    647f:	41 54                	push   %r12
    6481:	45 31 e4             	xor    %r12d,%r12d
    6484:	53                   	push   %rbx
    6485:	48 89 fb             	mov    %rdi,%rbx
    6488:	48 83 ec 08          	sub    $0x8,%rsp
    648c:	eb 18                	jmp    64a6 <wcswidth+0x36>
    648e:	66 90                	xchg   %ax,%ax
    6490:	e8 00 00 00 00       	call   6495 <wcswidth+0x25>
			6491: R_X86_64_PLT32	wcwidth-0x4
    6495:	85 c0                	test   %eax,%eax
    6497:	78 18                	js     64b1 <wcswidth+0x41>
    6499:	41 01 c4             	add    %eax,%r12d
    649c:	48 83 c3 08          	add    $0x8,%rbx
    64a0:	49 83 ed 01          	sub    $0x1,%r13
    64a4:	72 08                	jb     64ae <wcswidth+0x3e>
    64a6:	48 8b 3b             	mov    (%rbx),%rdi
    64a9:	48 85 ff             	test   %rdi,%rdi
    64ac:	75 e2                	jne    6490 <wcswidth+0x20>
    64ae:	44 89 e0             	mov    %r12d,%eax
    64b1:	48 83 c4 08          	add    $0x8,%rsp
    64b5:	5b                   	pop    %rbx
    64b6:	41 5c                	pop    %r12
    64b8:	41 5d                	pop    %r13
    64ba:	5d                   	pop    %rbp
    64bb:	c3                   	ret    
    64bc:	31 c0                	xor    %eax,%eax
    64be:	c3                   	ret    
    64bf:	90                   	nop

00000000000064c0 <wctrans>:
    64c0:	55                   	push   %rbp
    64c1:	be 00 00 00 00       	mov    $0x0,%esi
			64c2: R_X86_64_32	.rodata.str1.1+0x5f
    64c6:	48 89 e5             	mov    %rsp,%rbp
    64c9:	53                   	push   %rbx
    64ca:	48 89 fb             	mov    %rdi,%rbx
    64cd:	48 83 ec 08          	sub    $0x8,%rsp
    64d1:	e8 00 00 00 00       	call   64d6 <wctrans+0x16>
			64d2: R_X86_64_PLT32	strcmp-0x4
    64d6:	89 c2                	mov    %eax,%edx
    64d8:	b8 01 00 00 00       	mov    $0x1,%eax
    64dd:	85 d2                	test   %edx,%edx
    64df:	74 18                	je     64f9 <wctrans+0x39>
    64e1:	be 00 00 00 00       	mov    $0x0,%esi
			64e2: R_X86_64_32	.rodata.str1.1+0x67
    64e6:	48 89 df             	mov    %rbx,%rdi
    64e9:	e8 00 00 00 00       	call   64ee <wctrans+0x2e>
			64ea: R_X86_64_PLT32	strcmp-0x4
    64ee:	85 c0                	test   %eax,%eax
    64f0:	0f 94 c0             	sete   %al
    64f3:	0f b6 c0             	movzbl %al,%eax
    64f6:	48 01 c0             	add    %rax,%rax
    64f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    64fd:	c9                   	leave  
    64fe:	c3                   	ret    
    64ff:	90                   	nop

0000000000006500 <wctype>:
    6500:	55                   	push   %rbp
    6501:	b8 61 00 00 00       	mov    $0x61,%eax
    6506:	48 89 e5             	mov    %rsp,%rbp
    6509:	41 55                	push   %r13
    650b:	49 89 fd             	mov    %rdi,%r13
    650e:	41 54                	push   %r12
    6510:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6516:	53                   	push   %rbx
    6517:	bb 00 00 00 00       	mov    $0x0,%ebx
			6518: R_X86_64_32	.rodata+0x2920
    651c:	48 83 ec 08          	sub    $0x8,%rsp
    6520:	eb 16                	jmp    6538 <wctype+0x38>
    6522:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6528:	0f b6 43 06          	movzbl 0x6(%rbx),%eax
    652c:	48 83 c3 06          	add    $0x6,%rbx
    6530:	49 83 c4 01          	add    $0x1,%r12
    6534:	84 c0                	test   %al,%al
    6536:	74 28                	je     6560 <wctype+0x60>
    6538:	41 38 45 00          	cmp    %al,0x0(%r13)
    653c:	75 ea                	jne    6528 <wctype+0x28>
    653e:	48 89 de             	mov    %rbx,%rsi
    6541:	4c 89 ef             	mov    %r13,%rdi
    6544:	e8 00 00 00 00       	call   6549 <wctype+0x49>
			6545: R_X86_64_PLT32	strcmp-0x4
    6549:	85 c0                	test   %eax,%eax
    654b:	75 db                	jne    6528 <wctype+0x28>
    654d:	48 83 c4 08          	add    $0x8,%rsp
    6551:	4c 89 e0             	mov    %r12,%rax
    6554:	5b                   	pop    %rbx
    6555:	41 5c                	pop    %r12
    6557:	41 5d                	pop    %r13
    6559:	5d                   	pop    %rbp
    655a:	c3                   	ret    
    655b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6560:	48 83 c4 08          	add    $0x8,%rsp
    6564:	45 31 e4             	xor    %r12d,%r12d
    6567:	5b                   	pop    %rbx
    6568:	4c 89 e0             	mov    %r12,%rax
    656b:	41 5c                	pop    %r12
    656d:	41 5d                	pop    %r13
    656f:	5d                   	pop    %rbp
    6570:	c3                   	ret    
    6571:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6578:	00 00 00 
    657b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006580 <wcwidth>:
    6580:	48 83 ff 7e          	cmp    $0x7e,%rdi
    6584:	0f 8e 86 00 00 00    	jle    6610 <wcwidth+0x90>
    658a:	48 89 f8             	mov    %rdi,%rax
    658d:	25 ff ff fe ff       	and    $0xfffeffff,%eax
    6592:	48 3d fd ff 00 00    	cmp    $0xfffd,%rax
    6598:	48 89 f8             	mov    %rdi,%rax
    659b:	7e 33                	jle    65d0 <wcwidth+0x50>
    659d:	25 fe ff 00 00       	and    $0xfffe,%eax
    65a2:	48 3d fe ff 00 00    	cmp    $0xfffe,%rax
    65a8:	0f 84 80 00 00 00    	je     662e <wcwidth+0xae>
    65ae:	b8 02 00 00 00       	mov    $0x2,%eax
    65b3:	48 81 ff ff ff 03 00 	cmp    $0x3ffff,%rdi
    65ba:	7e 66                	jle    6622 <wcwidth+0xa2>
    65bc:	31 c0                	xor    %eax,%eax
    65be:	48 81 ff ee 01 0e 00 	cmp    $0xe01ee,%rdi
    65c5:	0f 9f c0             	setg   %al
    65c8:	c3                   	ret    
    65c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    65d0:	48 c1 f8 08          	sar    $0x8,%rax
    65d4:	0f b6 90 00 00 00 00 	movzbl 0x0(%rax),%edx
			65d7: R_X86_64_32S	.rodata+0x2f80
    65db:	48 89 f8             	mov    %rdi,%rax
    65de:	83 e7 07             	and    $0x7,%edi
    65e1:	48 c1 f8 03          	sar    $0x3,%rax
    65e5:	83 e0 1f             	and    $0x1f,%eax
    65e8:	48 c1 e2 05          	shl    $0x5,%rdx
    65ec:	48 01 c2             	add    %rax,%rdx
    65ef:	31 c0                	xor    %eax,%eax
    65f1:	0f b6 8a 00 00 00 00 	movzbl 0x0(%rdx),%ecx
			65f4: R_X86_64_32S	.rodata+0x2f80
    65f8:	0f a3 f9             	bt     %edi,%ecx
    65fb:	72 25                	jb     6622 <wcwidth+0xa2>
    65fd:	0f b6 82 00 00 00 00 	movzbl 0x0(%rdx),%eax
			6600: R_X86_64_32S	.rodata+0x2980
    6604:	89 f9                	mov    %edi,%ecx
    6606:	d3 f8                	sar    %cl,%eax
    6608:	83 e0 01             	and    $0x1,%eax
    660b:	83 c0 01             	add    $0x1,%eax
    660e:	c3                   	ret    
    660f:	90                   	nop
    6610:	48 8d 57 01          	lea    0x1(%rdi),%rdx
    6614:	b8 01 00 00 00       	mov    $0x1,%eax
    6619:	83 e2 7f             	and    $0x7f,%edx
    661c:	48 83 fa 20          	cmp    $0x20,%rdx
    6620:	7e 06                	jle    6628 <wcwidth+0xa8>
    6622:	c3                   	ret    
    6623:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6628:	48 f7 df             	neg    %rdi
    662b:	19 c0                	sbb    %eax,%eax
    662d:	c3                   	ret    
    662e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6633:	c3                   	ret    

0000000000006634 <__setjmp>:
    6634:	48 89 1f             	mov    %rbx,(%rdi)
    6637:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
    663b:	4c 89 67 10          	mov    %r12,0x10(%rdi)
    663f:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
    6643:	4c 89 77 20          	mov    %r14,0x20(%rdi)
    6647:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
    664b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    6650:	48 89 57 30          	mov    %rdx,0x30(%rdi)
    6654:	48 8b 14 24          	mov    (%rsp),%rdx
    6658:	48 89 57 38          	mov    %rdx,0x38(%rdi)
    665c:	48 31 c0             	xor    %rax,%rax
    665f:	c3                   	ret    

0000000000006660 <_longjmp>:
    6660:	48 89 f0             	mov    %rsi,%rax
    6663:	48 85 c0             	test   %rax,%rax
    6666:	75 03                	jne    666b <_longjmp+0xb>
    6668:	48 ff c0             	inc    %rax
    666b:	48 8b 1f             	mov    (%rdi),%rbx
    666e:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    6672:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    6676:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    667a:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    667e:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
    6682:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    6686:	48 89 d4             	mov    %rdx,%rsp
    6689:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    668d:	ff e2                	jmp    *%rdx

Disassembly of section .text.startup:

0000000000000000 <__construct_stk_chk_guard>:
   0:	48 83 3d 00 00 00 00 	cmpq   $0x0,0x0(%rip)        # 8 <__construct_stk_chk_guard+0x8>
   7:	00 
			3: R_X86_64_PC32	__stack_chk_guard-0x5
   8:	74 01                	je     b <__construct_stk_chk_guard+0xb>
   a:	c3                   	ret    
   b:	55                   	push   %rbp
   c:	48 89 e5             	mov    %rsp,%rbp
   f:	e8 00 00 00 00       	call   14 <__construct_stk_chk_guard+0x14>
			10: R_X86_64_PLT32	__stack_chk_guard_init-0x4
  14:	5d                   	pop    %rbp
  15:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 1c <__construct_stk_chk_guard+0x1c>
			18: R_X86_64_PC32	__stack_chk_guard-0x4
  1c:	c3                   	ret    

Disassembly of section .fini:

0000000000000000 <.fini>:
   0:	e8 00 00 00 00       	call   5 <_Exit+0x5>
			1: R_X86_64_PC32	.text+0x8c
